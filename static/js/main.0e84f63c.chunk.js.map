{"version":3,"sources":["AspectRatio.ts","App.tsx","serviceWorker.js","index.js"],"names":["ASPECT_RATIOS","ratio","name","OBJECT_FITS","SPLASH","react_default","a","createElement","id","HELP","stopDragDrop","e","preventDefault","stopPropagation","adjustDisplayTime","display","adjustment","percentage","arguments","length","undefined","vid","video","end","seekable","diff","currentTime","adjustVideoSpeed","playbackRate","BDVideo","React","createRef","_this$props","this","props","inTime","outTime","current","ontimeupdate","pastOut","beforeIn","rate","setIO","_this$props2","onLoad","onError","onDrag","startTime","onerror","onloadeddata","onloadedmetadata","ondragstart","_this$props3","size","onMouseOver","onMouseOut","objectFit","showTitle","Object","assign","className","style","width","concat","height","file","controls","autoPlay","loop","muted","src","url","draggable","ref","title","Component","App","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","viewport","globalActions","f","document","fullscreenEnabled","fullscreenElement","exitFullscreen","body","requestFullscreen","h","setState","showHelp","state","s","nextObjectFit","x","nextDimensionRatio","showInfo","displays","maxId","ratioIndex","aspectRatio","objectFitIndex","firstBatch","errorDisplays","window","onresize","updateDimensions","onkeydown","ev","key","altCase","toLowerCase","toUpperCase","executeAction","actions","altKey","activeDisplay","shiftKey","ArrowLeft","ArrowRight","ctrlKey","Delete","deleteDisplay","d","c","copyDisplay","i","setVideoIO","o","m","ondragover","ondragenter","ondragleave","ondrop","dataTransfer","droppedFiles","files","videoFiles","Array","from","filter","type","startsWith","newDisplays","map","URL","createObjectURL","triggerResize","_this$state","y","smallest","bestrows","bestcols","rows","cols","Math","ceil","min","mode","console","log","vp","clientWidth","clientHeight","activeVideo","newDisplay","videoWidth","videoHeight","avgRatio","getAspectRatios","reduce","b","closestRatio","toConsumableArray","sort","pop","findIndex","getRecommendedAspectRatioIndex","_this$state2","push","dest","_this$state3","dragSrc","destDisplay","si","indexOf","tmpDisplays","slice","di","_this3","_this$state4","lastDisplay","getVideoSize","Fragment","onDrop","reorderDisplays","target","App_BDVideo","setRecommendedAspectRatio","handleVideoError","in","out","onSubmit","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e84f63c.chunk.js","sourcesContent":["export interface AspectRatio {\r\n\tratio:number,\r\n\tname:string\r\n}\r\n\r\nexport const ASPECT_RATIOS = [\r\n\t{\r\n\t\tratio: 16/9,\r\n\t\tname: \"16:9 (High Definition)\"\r\n\t}, {\r\n\t\tratio: 4/3,\r\n\t\tname: \"4:3 (Standard Definition)\"\r\n\t}, {\r\n\t\tratio: 1,\r\n\t\tname: \"1:1 (Square)\",\r\n\t}, {\r\n\t\tratio: 9/16,\r\n\t\tname: \"9:16 (Vertical HD)\"\r\n\t}, {\r\n\t\tratio: 1.85,\r\n\t\tname: \"1.85:1 (Cinematic Wide)\"\r\n\t}, {\r\n\t\tratio: 2.35,\r\n\t\tname: \"2.35:1 (Anamorphic Wide)\"\r\n\t}\r\n]","import React from 'react'\nimport './App.css'\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\nimport { setPriority } from 'os';\n\n// remember help display setting?  Or hide on add video?  hide on add only if already hidden?\n// add logo\n// add whole thing as repository and configure gh-pages deploy\n// make commands responsive when no video present\n// refence react as third party library on cdn?\n\ntype ObjectFit = \"fill\"|\"contain\"|\"cover\"|\"scale-down\"\nconst OBJECT_FITS = ['contain', 'cover', 'fill', 'scale-down'] as ObjectFit[]\n\nconst SPLASH = <section id=\"splash\">\n\t<p>Videos start half-way in and loop, ensuring immediate, continuous action, but also start muted to avoid chaotic, clashing audio and prevent disturbing others.</p>\n</section>\n\nconst HELP = <section id=\"help\">\n\t<h2>Usage</h2>\n\t<p>Drag and drop any number of videos to auto-play in an optimally arranged grid.</p>\n\t<p>Videos start half-way in and loop, ensuring immediate, continuous action, but also start muted to avoid chaotic, clashing audio and prevent disturbing others.</p>\n\t<h2>Shortcuts</h2><ol>\n\t\t<li><em>C:</em> Clone video (+1m)</li>\n\t\t<li><em>D:</em> Delete video</li>\n\t\t<li><em>H:</em> Toggle help</li>\n\t\t{/* <li><em>I:</em> Toggle info overlay</li> */}\n\t\t<li><em>M:</em> Toggle mute</li>\n\t\t<li><em>S:</em> Change video scaling</li>\n\t\t<li><em>X:</em> Change aspect ratio</li>\n\t\t<li><em>← →:</em> Skip 1m</li>\n\t\t<li><em>Shift ← →:</em> Skip 10%</li>\n\t\t<li><em>Ctrl ← →:</em> Change speed</li>\n\t\t<li><em>Ctrl+W:</em> Close tab</li>\n\t\t<li><em>F / F11:</em> Toggle fullscreen</li>\n\t\t<li><em>I / O:</em> Toggle in / out time</li>\n\t\t<li>Drag&amp;Drop: Reorder videos</li>\n\t</ol>\n\t<footer>\n\t\t<h2>Privacy Disclaimer</h2>\n\t\t<p>This tool records <b>no</b> filenames, screen grabs, or any other methods of identifying the actual contents of any video.  Only metadata about a video's format (codec, file size, resolution, and duration) may be recorded.</p>\n\t</footer>\n</section>\n\nfunction stopDragDrop(e:Event) {\n\te.preventDefault()\n\te.stopPropagation()\n}\n\nfunction toggleMute(video?:HTMLVideoElement) {\n\tif (!video) return\n\tvideo.muted = !video.muted\n}\n\nfunction adjustDisplayTime(display:Display, adjustment:number, percentage:boolean = false) {\n\tconst vid = display.video\n\tif (!vid) return\n\tconst end = vid.seekable.end(0)\n\tif (percentage) {\n\t\tadjustment = end * adjustment\n\t}\n\tconst diff = end - vid.currentTime\n\tif (adjustment > diff) {\n\t\tvid.currentTime = adjustment - diff\n\t} else {\n\t\tvid.currentTime = vid.currentTime + adjustment\n\t}\n}\n\nfunction adjustVideoSpeed(display:Display, adjustment:number) {\n\tconst vid = display.video\n\tif (!vid) return\n\tvid.playbackRate = vid.playbackRate * adjustment\n}\n\ninterface Display {\n\tid:number,\n\tfile:File,\n\turl:string,\n\tstartTime?:number,\n\tin?:number,\n\tout?:number,\n\tvideo?:HTMLVideoElement,\n\ttriggerResize:boolean,\n\tplaybackRate:number\n}\n\ninterface BDVideoProps {\n\tdisplay:Display,\n\tobjectFit:ObjectFit,\n\tsize: {\n\t\twidth:number,\n\t\theight:number\n\t},\n\tshowTitle:boolean,\n\tinTime?:number,\n\toutTime?:number,\n\tplaybackRate?:number,\n\tonMouseOver:()=>void,\n\tonMouseOut:()=>void,\n\tonLoad:()=>void\n\tonError:()=>void\n\tonDrag:(display:Display)=>void\n}\n\nclass BDVideo extends React.Component<BDVideoProps> {\n\tvideo = React.createRef<HTMLVideoElement>()\n\n\tsetIO() {\n\t\tconst {inTime, outTime} = this.props\n\t\tconst video = this.video.current!\n\t\tvideo.ontimeupdate = e => {\n\t\t\tconst pastOut = outTime && outTime < video.currentTime\n\t\t\tconst beforeIn = inTime && inTime > video.currentTime\n\t\t\tif (pastOut || beforeIn) video.currentTime = inTime || 0\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst {playbackRate} = this.props\n\t\tconst video = this.video.current!\n\t\tconst rate = playbackRate || 1\n\t\tvideo.playbackRate = rate\n\t\tthis.setIO()\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {display, onLoad, onError, onDrag} = this.props\n\t\tconst video = this.video.current!\n\t\tdisplay.video = video\n\t\tif (display.startTime) {\n\t\t\tvideo.currentTime = display.startTime\n\t\t} else {\n\t\t\tvideo.onerror = onError\n\t\t\tvideo.onloadeddata = e => video.currentTime = video.seekable.end(0) / 2\n\t\t\tvideo.onloadedmetadata = onLoad\n\t\t}\n\t\tvideo.ondragstart = e => onDrag(display)\n\t\tthis.setIO()\n\t}\n\n\trender() {\n\t\tconst {size, onMouseOver, onMouseOut, display, objectFit, showTitle} = this.props\n\n\t\treturn <div className=\"display\" {...size} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n\t\t\t<div className=\"display-border\" style={{width: `${size.width}px`, height: `${size.height}px`}}>{showTitle && display.file.name}</div>\n\t\t\t<video controls={true} autoPlay={true} loop={true} muted={true} src={display.url} draggable={true}\n\t\t\t\t{...size} ref={this.video} style={{objectFit}} title={display.file.name} />\n\t\t</div>\n\t}\n}\n\ninterface Dimensions {\n\tx:number,\n\ty:number\n}\n\ninterface AppState {\n\tshowInfo:boolean,\n\tshowHelp:boolean,\n\tdisplays:Display[],\n\tmaxId:number,\n\tactiveDisplay?:Display,\n\tlastDisplay?:Display,\n\tviewport?:Dimensions,\n\tratioIndex:number,\n\taspectRatio:AspectRatio,\n\tobjectFitIndex:number,\n\tobjectFit:ObjectFit,\n\tfirstBatch:boolean,\n\terrorDisplays:Display[],\n\tdragSrc?:Display\n}\n\ninterface ActionControls {\n\t[key:string]: ()=>void\n}\n\nfunction toggleFullscreen() {\n\tif (!document.fullscreenEnabled) return\n\tif (document.fullscreenElement) {\n\t\tdocument.exitFullscreen()\n\t} else {\n\t\tdocument.body.requestFullscreen()\n\t}\n}\n\nclass App extends React.Component<{},AppState> {\n\tviewport:React.RefObject<HTMLElement>\n\tglobalActions = {\n\t\t\"f\": () => toggleFullscreen(),\n\t\t\"h\": () => this.setState({showHelp: !this.state.showHelp}),\n\t\t// \"i\": () => this.setState({showInfo: !this.state.showInfo}),\n\t\t\"s\": () => this.nextObjectFit(),\n\t\t\"x\": () => this.nextDimensionRatio()\n\t} as ActionControls\n\n\tconstructor(props:{}) {\n\t\tsuper(props)\n\t\tthis.viewport = React.createRef<HTMLElement>()\n\t\tthis.state = {\n\t\t\tshowInfo: false,\n\t\t\tshowHelp: true,\n\t\t\tdisplays: [],\n\t\t\tmaxId: 0,\n\t\t\tratioIndex: 0,\n\t\t\taspectRatio: ASPECT_RATIOS[0],\n\t\t\tobjectFitIndex: 0,\n\t\t\tobjectFit: OBJECT_FITS[0],\n\t\t\tfirstBatch: true,\n\t\t\terrorDisplays: [],\n\t\t}\n\n\t\twindow.onresize = () => this.updateDimensions()\n\n\t\twindow.onkeydown = ev => {\n\t\t\tconst key = ev.key\n\t\t\tconst altCase = key.toLowerCase() == key ? key.toUpperCase() : key.toLowerCase()\n\t\t\t\n\t\t\tfunction executeAction(actions:ActionControls, key:string, altKey?:string) {\n\t\t\t\tif (key in actions) {\n\t\t\t\t\tactions[key]()\n\t\t\t\t\treturn true\n\t\t\t\t} else if (altKey && altKey in actions) {\n\t\t\t\t\tactions[altKey]()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tif (executeAction(this.globalActions, key, altCase)) return\n\n\t\t\tconst {activeDisplay} = this.state\n\t\t\tif (!activeDisplay) return\n\n\t\t\tif (ev.shiftKey) {\n\t\t\t\tconst shiftDisplayActions = {\n\t\t\t\t\t\"ArrowLeft\": () => adjustDisplayTime(activeDisplay, -.1, true),\n\t\t\t\t\t\"ArrowRight\": () => adjustDisplayTime(activeDisplay, .1, true),\n\t\t\t\t} as ActionControls\n\t\t\t\texecuteAction(shiftDisplayActions, key, altCase)\n\t\t\t} else if (ev.ctrlKey) {\n\t\t\t\tconst ctrlDisplayActions = {\n\t\t\t\t\t\"ArrowLeft\": () => adjustVideoSpeed(activeDisplay, 0.5),\n\t\t\t\t\t\"ArrowRight\": () => adjustVideoSpeed(activeDisplay, 2)\n\t\t\t\t}\n\t\t\t\texecuteAction(ctrlDisplayActions, key, altCase)\n\t\t\t} else {\n\t\t\t\tconst displayActions = {\n\t\t\t\t\t\"Delete\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"d\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"c\": () => this.copyDisplay(activeDisplay),\n\t\t\t\t\t\"i\": () => this.setVideoIO(activeDisplay, \"in\"),\n\t\t\t\t\t\"o\": () => this.setVideoIO(activeDisplay, \"out\"),\n\t\t\t\t\t\"ArrowLeft\": () => adjustDisplayTime(activeDisplay, -60),\n\t\t\t\t\t\"ArrowRight\": () => adjustDisplayTime(activeDisplay, 60),\n\t\t\t\t\t\"m\": () => toggleMute(activeDisplay.video)\n\t\t\t\t} as ActionControls\n\t\t\t\texecuteAction(displayActions, key, altCase)\n\t\t\t}\n\t\t}\n\n\t\tdocument.ondragover = stopDragDrop\n\t\tdocument.ondragenter = stopDragDrop\n\t\tdocument.ondragleave = stopDragDrop\n\n\t\tdocument.ondrop = (e:DragEvent) => {\n\t\t\tstopDragDrop(e)\n\t\t\tif (!e.dataTransfer) return\n\t\t\tconst {firstBatch} = this.state\n\t\t\tlet droppedFiles = e.dataTransfer.files as FileList\n\t\t\tconst videoFiles = Array.from(droppedFiles).filter(i => i.type.startsWith('video/'))\n\t\t\tlet maxId = this.state.maxId\n\t\t\tconst newDisplays = videoFiles.map(file => { return {\n\t\t\t\tid: ++maxId,\n\t\t\t\tfile,\n\t\t\t\turl: URL.createObjectURL(file),\n\t\t\t\ttriggerResize: firstBatch\n\t\t\t} as Display})\n\n\t\t\tthis.setState({\n\t\t\t\tdisplays: this.state.displays.concat(newDisplays),\n\t\t\t\tmaxId,\n\t\t\t\tfirstBatch: false,\n\t\t\t\t// hide help if we are adding videos\n\t\t\t\tshowHelp: this.state.showHelp && videoFiles.length == 0\n\t\t\t})\n\t\t}\n\t}\n\n\tgetVideoSize() {\n\t\tconst {displays, aspectRatio, viewport} = this.state\n\t\tif (!viewport) return {width: 1, height: 1}\n\t\tif (displays.length < 2) return {width: viewport.x, height: viewport.y}\n\n\t\tlet smallest = 0, bestrows = 0, bestcols = 0\n\t\tfor (let rows = 1; rows < displays.length; rows++) {\n\t\t\tlet cols = Math.ceil(displays.length / rows)\n\t\t\tlet x = viewport.x / cols\n\t\t\tlet y = viewport.y * aspectRatio.ratio / rows\n\n\t\t\t// if neither are smaller, replace\n\t\t\tif (smallest <= x && smallest <= y) {\n\t\t\t\tsmallest = Math.min(x, y)\n\t\t\t\tbestrows = rows\n\t\t\t\tbestcols = cols\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\twidth: viewport.x / bestcols,\n\t\t\theight: viewport.y / bestrows\n\t\t}\n\t}\n\n\tadjustVideoSpeed(display:Display, adjustment:number) {\n\t\tdisplay.playbackRate = display.playbackRate * adjustment\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tsetVideoIO(display:Display, mode:\"in\"|\"out\") {\n\t\tif (mode in display) {\n\t\t\tdelete display[mode]\n\t\t} else {\n\t\t\tdisplay[mode] = display.video!.currentTime\n\t\t}\n\t\t// not sure if this way of updating the display will work\n\t\tconsole.log(display)\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tupdateDimensions() {\n\t\tconst vp = this.viewport.current!\n\t\tconst viewport = {x: vp.clientWidth, y: vp.clientHeight}\n\t\tthis.setState({viewport})\n\t}\n\n\tcopyDisplay(display:Display) {\n\t\tconst activeVideo = display.video\n\t\tconst maxId = this.state.maxId + 1\n\t\tlet startTime = activeVideo!.currentTime + 60\n\t\tif (startTime > activeVideo!.seekable.end(0)) startTime = 0\n\t\tconst newDisplay = {\n\t\t\tid: maxId,\n\t\t\tfile: display.file,\n\t\t\turl: display.url,\n\t\t\tplaybackRate: display.playbackRate,\n\t\t\tstartTime,\n\t\t\ttriggerResize: false\n\t\t}\n\t\tthis.setState({ maxId, displays: this.state.displays.concat(newDisplay)})\n\t}\n\n\tdeleteDisplay(display:Display) {\n\t\tthis.setState({ displays: this.state.displays.filter(i => i != display) })\n\t}\n\n\tnextDimensionRatio() {\n\t\tlet i = this.state.ratioIndex + 1\n\t\tif (i >= ASPECT_RATIOS.length) i = 0\n\t\tthis.setState({\n\t\t\tratioIndex: i,\n\t\t\taspectRatio: ASPECT_RATIOS[i]\n\t\t})\n\t}\n\n\tnextObjectFit() {\n\t\tlet i = this.state.objectFitIndex + 1\n\t\tif (i >= OBJECT_FITS.length) i = 0\n\t\tthis.setState({\n\t\t\tobjectFitIndex: i,\n\t\t\tobjectFit: OBJECT_FITS[i]\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions()\n\t}\n\n\tgetAspectRatios() {\n\t\treturn this.state.displays.map(i => i.video!.videoWidth / i.video!.videoHeight)\n\t}\n\n\tgetRecommendedAspectRatioIndex() {\n\t\tconst avgRatio = this.getAspectRatios().reduce((a,b) => a + b, 0) / this.state.displays.length\n\t\tconst closestRatio = [...ASPECT_RATIOS].sort((a, b) => Math.min(a.ratio / avgRatio, avgRatio / a.ratio) - Math.min(b.ratio/avgRatio, avgRatio / b.ratio)).pop()\n\t\tconst i = ASPECT_RATIOS.findIndex(i => i.name == closestRatio!.name)\n\t\treturn i\n\t}\n\n\tsetRecommendedAspectRatio() {\n\t\tconst i = this.getRecommendedAspectRatioIndex()\n\t\tthis.setState({\n\t\t\taspectRatio: ASPECT_RATIOS[i],\n\t\t\tratioIndex: i\n\t\t})\n\t}\n\n\thandleVideoError(display:Display) {\n\t\tconst {displays, errorDisplays} = this.state\n\t\terrorDisplays.push(display)\n\t\tthis.setState({\n\t\t\tdisplays: displays.filter(i => i != display),\n\t\t\terrorDisplays\n\t\t})\n\t}\n\n\t// how do I determine the display?  Right now I have an HTML element target that's inside the React element, hidden from this level.\n\treorderDisplays(dest:EventTarget) {\n\t\tconst {displays, dragSrc} = this.state\n\t\tif (!dragSrc) return\n\t\tconst destDisplay = displays.filter(i => i.video == dest).pop() || displays[displays.length-1]\n\t\tconst si = displays.indexOf(dragSrc)\n\t\tconst tmpDisplays = [...displays.slice(0, si), ...displays.slice(si+1)]\n\t\tconst di = tmpDisplays.indexOf(destDisplay)\n\t\tconst newDisplays = [...tmpDisplays.slice(0, di+1), dragSrc, ...tmpDisplays.slice(di+1)]\n\t\tthis.setState({ displays: newDisplays })\n\t}\n\n\trender() {\n\t\tconsole.log('render')\n\t\tconst {displays, errorDisplays, activeDisplay, lastDisplay, showInfo, showHelp, aspectRatio, objectFit} = this.state\n\t\tconst size = this.getVideoSize()\n\t\treturn <>\n\t\t\t{showInfo && lastDisplay && <div id=\"info-toggle\">\n\t\t\t\t{aspectRatio.name}<br />\n\t\t\t\tScale strategy: {objectFit}<br />\n\t\t\t\t{lastDisplay.file.name}\n\t\t\t</div>}\n\t\t\t<main ref={this.viewport}\n\t\t\t\tonDrop={e => this.reorderDisplays(e.target)}>\n\t\t\t\t{displays.length == 0 && SPLASH}\n\t\t\t\t{displays.map(i => <BDVideo size={size} objectFit={objectFit} key={i.id} display={i}\n\t\t\t\t\tshowTitle={i == activeDisplay}\n\t\t\t\t\tplaybackRate={i.playbackRate}\n\t\t\t\t\tonDrag={display => this.setState({dragSrc: display})}\n\t\t\t\t\tonMouseOver={() => this.setState({activeDisplay: i, lastDisplay: i})}\n\t\t\t\t\tonMouseOut={() => this.setState({activeDisplay: undefined})}\n\t\t\t\t\tonLoad={() => i.triggerResize && this.setRecommendedAspectRatio()}\n\t\t\t\t\tonError={() => this.handleVideoError(i)}\n\t\t\t\t\tinTime={i.in}\n\t\t\t\t\toutTime={i.out}\n\t\t\t\t/>)}\n\t\t\t</main>\n\t\t\t{errorDisplays.length > 0 && <section id=\"errors\">\n\t\t\t\t<h2>Errors</h2><ol>\n\t\t\t\t\t{errorDisplays.map((display, i) => <li key={i}>{display.file.name} ({display.file.type})</li>)}\n\t\t\t\t</ol>\n\t\t\t\t<p>Only videos supported by your web browser will play successfully.  <code>.mp4</code> and <code>.webm</code> files are good bets.</p>\n\t\t\t\t<form onSubmit={() => this.setState({errorDisplays: []})}><button>Dismiss</button></form>\n\t\t\t</section>}\n\t\t\t{showHelp && HELP}\n\t\t</>\n\t}\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}