{"version":3,"sources":["FullScreen.ts","BDVideo.tsx","AspectRatio.ts","Help.tsx","App.tsx","serviceWorker.js","index.js"],"names":["fullscreenElement","element","requestFullscreen","msRequestFullscreen","webkitRequestFullscreen","call","fsEnabled","document","fullscreenEnabled","msFullscreenEnabled","webkitFullscreenEnabled","fsExit","exitFullscreen","msExitFullscreen","webkitExitFullscreen","bind","browser","navigator","userAgent","indexOf","msBrowser","VIDEO_MARGINS","edge","left","right","bottom","chrome","margins","BDVideo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","video","React","createRef","thumbnail","dragMargin","thumbnailWidth","thumbnailMargin","hoverThumbnail","e","current","height","layerY","setState","thumbnailState","undefined","timelineWidth","width","videoPercentage","layerX","targetTime","duration","offsetX","timestamp","hideTimeout","overlayTimeout","state","inherits","createClass","key","value","_this$props","inTime","outTime","ontimeupdate","pastOut","currentTime","beforeIn","_this$props2","playbackRate","showThumbnail","rate","setIO","onmouseover","_this2","_this$props3","display","onLoad","onError","onDrag","startTime","onload","onerror","onloadeddata","onloadedmetadata","ondragstart","target","offsetY","preventDefault","onmousemove","overlayDuration","clearTimeout","setTimeout","onmouseout","_this$props4","ip","op","ix","ox","react_default","a","createElement","Fragment","IOMarker","offset","color","adjustment","percentage","arguments","length","end","diff","_this3","_this$props5","size","onMouseOver","onMouseOut","objectFit","showOverlay","removeCallback","copyCallback","exclusiveCallback","inCallback","outCallback","speedCallback","_this$state","assign","className","onKeyDown","ev","toLowerCase","shiftKey","shiftDisplayActions","arrowleft","adjustDisplayTime","arrowright","f","ctrlKey","ctrlDisplayActions","displayActions","m","muted","console","log","style","concat","pointerEvents","file","name","onClick","getIO","controls","autoPlay","loop","src","url","ref","draggable","Component","_ref","yMargin","viewBox","diameter","cx","cy","r","fill","ASPECT_RATIOS","ratio","SHORTCUTS","id","DISCLAIMER","SelectInput","htmlFor","label","onChange","callback","choices","Help","OBJECT_FITS","map","v","i","toUpperCase","substr","objectFitCallback","aspectRatio","toString","aspectRatioCallback","parseInt","SPLASH","stopDragDrop","stopPropagation","ErrorDisplay","errorDisplays","dismissCallback","type","onSubmit","App","viewport","globalActions","body","msFullscreenElement","webkitFullscreenElement","toggleFullscreen","h","showHelp","s","nextObjectFit","t","showThumbnails","x","nextDimensionRatio","handleDropEvent","dataTransfer","firstBatch","droppedFiles","files","videoFiles","Array","from","filter","startsWith","maxId","newDisplays","URL","createObjectURL","triggerResize","displays","handleKeyPress","d","activeDisplay","syncPlaybackRates","adjustVideoSpeed","delete","deleteDisplay","c","addDisplayCopy","distributeTimes","setVideoIO","o","fillGrid","updateDimensions","vp","clientWidth","y","clientHeight","ratioIndex","objectFitIndex","window","onresize","onkeydown","ondragover","ondragenter","ondragleave","ondrop","forEach","matchingDisplays","di","orderedDisplays","toConsumableArray","slice","t1","spacing","count","additions","_","newDisplay","copyDisplay","pop","bestArea","videoRatio","rows","cols","Math","ceil","floor","vx","vy","videoArea","mode","activeVideo","arr","avgRatio","videoWidth","videoHeight","reduce","b","closestRatio","sort","abs","findIndex","getRecommendedAspectRatioIndex","_this$state2","push","dest","_this$state3","dragSrc","destDisplay","si","tmpDisplays","_this$state4","getVideoSize","onDrop","reorderDisplays","BDVideo_BDVideo","lastDisplay","setRecommendedAspectRatio","handleVideoError","in","out","staggerCallback","src_Help","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3046caa5.chunk.js","sourcesContent":["export function fullscreenElement(element:HTMLElement) {\r\n\t(element.requestFullscreen || (element as any).msRequestFullscreen || (element as any).webkitRequestFullscreen).call(element)\r\n}\r\n\r\nconst fsEnabled = document.fullscreenEnabled || (document as any).msFullscreenEnabled || (document as any).webkitFullscreenEnabled\r\nconst fsExit = (document.exitFullscreen || (document as any).msExitFullscreen || (document as any).webkitExitFullscreen).bind(document)\r\nexport function toggleFullscreen(target:HTMLElement = document.body) {\r\n\tif (!fsEnabled) return\r\n\tconst fsElement = document.fullscreenElement || (document as any).msFullscreenElement || (document as any).webkitFullscreenElement\r\n\tif (fsElement) {\r\n\t\tfsExit()\r\n\t} else {\r\n\t\tfullscreenElement(target)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport './BDVideo.css'\r\nimport { fullscreenElement } from './FullScreen'\r\nimport { ObjectFitProperty } from 'csstype'\r\n\r\nfunction getBrowser() {\r\n\tif (navigator.userAgent.indexOf(' Trident/') > -1) return 'IE'\r\n\tif (navigator.userAgent.indexOf(' Edge/') > -1) return 'Edge'\r\n\treturn 'Chrome'\r\n}\r\n\r\nexport const browser = getBrowser()\r\nexport const msBrowser = [\"Edge\",\"IE\"].indexOf(browser) > -1\r\n\r\ninterface ActionControls {\r\n\t[key:string]: ()=>void\r\n}\r\n\r\nconst VIDEO_MARGINS = {\r\n\t\"edge\": {\r\n\t\t\"left\": 116,\r\n\t\t\"right\": 220,\r\n\t\t\"bottom\": 24\r\n\t},\r\n\t\"chrome\": {\r\n\t\t\"left\": 24,\r\n\t\t\"right\": 24,\r\n\t\t\"bottom\": 16\r\n\t}\r\n}\r\nconst margins = browser == \"Chrome\" ? VIDEO_MARGINS[\"chrome\"] : VIDEO_MARGINS[\"edge\"]\r\n\r\nexport interface Display {\r\n\tid:number\r\n\tfile:File\r\n\turl:string\r\n\tstartTime?:number\r\n\tin?:number\r\n\tout?:number\r\n\tvideo?:HTMLVideoElement\r\n\ttriggerResize:boolean\r\n\tplaybackRate:number\r\n}\r\n\r\ninterface BDVideoProps {\r\n\tdisplay:Display\r\n\tobjectFit:ObjectFitProperty\r\n\tsize: {\r\n\t\twidth:number\r\n\t\theight:number\r\n\t}\r\n\tshowOverlay:boolean\r\n\tshowThumbnail:boolean\r\n\tinTime?:number\r\n\toutTime?:number\r\n\tplaybackRate:number\r\n\toverlayDuration?:number\r\n\tonMouseOver:()=>void\r\n\tonMouseOut:()=>void\r\n\tonLoad:()=>void\r\n\tonError:()=>void\r\n\tonDrag:(display:Display)=>void\r\n\tremoveCallback:()=>void,\r\n\tcopyCallback:()=>void,\r\n\texclusiveCallback:()=>void,\r\n\tstaggerCallback:()=>void,\r\n\tinCallback:()=>void,\r\n\toutCallback:()=>void,\r\n\tspeedCallback:(adjustment:number)=>void\r\n}\r\n\r\ninterface BDVideoState {\r\n\tthumbnailState?:{\r\n\t\toffsetX:number\r\n\t\ttimestamp:number\r\n\t}\r\n\toverlayTimeout?:NodeJS.Timeout\r\n}\r\n\r\nexport class BDVideo extends React.Component<BDVideoProps, BDVideoState> {\r\n\tvideo = React.createRef<HTMLVideoElement>()\r\n\tthumbnail = React.createRef<HTMLVideoElement>()\r\n\r\n\tdragMargin = 80\r\n\tthumbnailWidth = 196\r\n\tthumbnailMargin = margins.bottom + 8\r\n\r\n\tconstructor(props:BDVideoProps) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {}\r\n\t}\r\n\r\n\tsetIO() {\r\n\t\tconst {inTime, outTime} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tvideo.ontimeupdate = e => {\r\n\t\t\tconst pastOut = outTime && outTime < video.currentTime\r\n\t\t\tconst beforeIn = inTime && inTime > video.currentTime\r\n\t\t\tif (pastOut || beforeIn) video.currentTime = inTime || 0\r\n\t\t}\r\n\t}\r\n\r\n\thoverThumbnail = (e:MouseEvent) => {\r\n\t\tconst video = this.video.current\r\n\t\tif (!video) return\r\n\t\tconst distanceFromBottom = video.height - e.layerY\r\n\t\tif (distanceFromBottom > this.thumbnailMargin) {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst timelineWidth = video.width - margins.left - margins.right\r\n\t\tconst videoPercentage = (e.layerX - margins.left) / timelineWidth \r\n\t\tif (videoPercentage < 0 || videoPercentage > 1) {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst targetTime = video.duration * videoPercentage\r\n\t\tthis.setState({\r\n\t\t\tthumbnailState: {\r\n\t\t\t\toffsetX: e.layerX - (this.thumbnailWidth / 2),\r\n\t\t\t\ttimestamp: targetTime\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst {playbackRate, showThumbnail} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tconst rate = playbackRate || 1\r\n\t\tvideo.playbackRate = rate\r\n\t\tthis.setIO()\r\n\t\tif (showThumbnail && browser != 'IE') {\r\n\t\t\tconst {thumbnailState} = this.state\r\n\t\t\tconst thumbnail = this.thumbnail.current\r\n\t\t\tif (thumbnail && thumbnailState) {\r\n\t\t\t\tthumbnail.currentTime = thumbnailState.timestamp\r\n\t\t\t}\r\n\t\t\tvideo.onmouseover = this.hoverThumbnail\r\n\t\t} else {\r\n\t\t\tvideo.onmouseover = null\r\n\t\t}\r\n\t}\r\n\r\n\thideTimeout = () => {\r\n\t\tthis.setState({\r\n\t\t\toverlayTimeout: undefined\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst {display, onLoad, onError, onDrag, showThumbnail} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tdisplay.video = video\r\n\t\tif (display.startTime) {\r\n\t\t\tvideo.onload = () => { video.currentTime = display.startTime! }\r\n\t\t} else {\r\n\t\t\tvideo.onerror = onError\r\n\t\t\tvideo.onloadeddata = e => video.currentTime = video.duration / 2\r\n\t\t\tvideo.onloadedmetadata = onLoad\r\n\t\t}\r\n\t\tvideo.ondragstart = e => {\r\n\t\t\tconst target = e.target! as HTMLVideoElement\r\n\t\t\tconst distanceFromBottom = target.height - e.offsetY\r\n\t\t\tif (distanceFromBottom < this.dragMargin) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tonDrag(display)\r\n\t\t}\r\n\t\tvideo.onmousemove = e => {\r\n\t\t\tshowThumbnail && browser != 'IE' && this.hoverThumbnail(e)\r\n\t\t\tconst {overlayDuration} = this.props\r\n\t\t\tconst {overlayTimeout} = this.state\r\n\t\t\toverlayTimeout && clearTimeout(overlayTimeout)\r\n\t\t\tthis.setState({\r\n\t\t\t\toverlayTimeout: setTimeout(this.hideTimeout, overlayDuration || 3000)\r\n\t\t\t})\r\n\t\t}\r\n\t\tvideo.onmouseout = e => {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t}\r\n\t\tthis.setIO()\r\n\t}\r\n\r\n\tgetIO() {\r\n\t\tconst {inTime, outTime} = this.props\r\n\t\tconst video = this.video.current!\r\n\r\n\t\tif (inTime || outTime) {\r\n\t\t\tconst duration = video.duration\r\n\t\t\tconst ip = inTime || 0\r\n\t\t\tconst op = outTime || duration\r\n\t\t\tconst timelineWidth = video.width - margins.left - margins.right\r\n\t\t\tconst ix = (ip / duration) * timelineWidth\r\n\t\t\tconst ox = (op / duration) * timelineWidth\r\n\t\t\treturn <>\r\n\t\t\t\t<IOMarker offset={ix} color=\"gold\" />\r\n\t\t\t\t<IOMarker offset={ox} color=\"gold\" />\r\n\t\t\t</>\r\n\t\t}\r\n\t}\r\n\r\n\tadjustDisplayTime(adjustment:number, percentage:boolean = false) {\r\n\t\tconst video = this.video.current!\r\n\t\tconst end = video.duration\r\n\t\tif (percentage) {\r\n\t\t\tadjustment = end * adjustment\r\n\t\t}\r\n\t\tconst diff = end - video.currentTime\r\n\t\tif (adjustment > diff) {\r\n\t\t\tvideo.currentTime = adjustment - diff\r\n\t\t} else {\r\n\t\t\tvideo.currentTime = video.currentTime + adjustment\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {size, onMouseOver, onMouseOut, display, objectFit, showOverlay, showThumbnail, playbackRate,\r\n\t\t\tremoveCallback, copyCallback, exclusiveCallback, inCallback, outCallback, speedCallback} = this.props\r\n\t\tconst {thumbnailState, overlayTimeout} = this.state\r\n\r\n\t\treturn <div className=\"display\" {...size} onMouseOver={onMouseOver} onMouseOut={onMouseOut} onKeyDown={ev => {\r\n\t\t\tconst video = this.video.current!\r\n\t\t\tconst key = ev.key.toLowerCase()\r\n\t\t\tif (ev.shiftKey) {\r\n\t\t\t\tconst shiftDisplayActions = {\r\n\t\t\t\t\t\"arrowleft\": () => this.adjustDisplayTime(-.1, true),\r\n\t\t\t\t\t\"arrowright\": () => this.adjustDisplayTime(.1, true),\r\n\t\t\t\t\t\"f\": () => fullscreenElement(video)\r\n\t\t\t\t} as ActionControls\r\n\t\t\t\tkey in shiftDisplayActions && shiftDisplayActions[key]()\r\n\t\t\t} else if (ev.ctrlKey) {\r\n\t\t\t\tconst ctrlDisplayActions = {\r\n\t\t\t\t} as ActionControls\r\n\t\t\t\tkey in ctrlDisplayActions && ctrlDisplayActions[key]()\r\n\t\t\t} else {\r\n\t\t\t\tconst displayActions = {\r\n\t\t\t\t\t\"m\": () => video.muted = !video.muted,\r\n\t\t\t\t\t\"arrowleft\": () => this.adjustDisplayTime(-60),\r\n\t\t\t\t\t\"arrowright\": () => this.adjustDisplayTime(60),\r\n\t\t\t\t} as ActionControls\r\n\t\t\t\tkey in displayActions && displayActions[key]()\r\n\t\t\t}\r\n\t\t\tconsole.log(key)\r\n\t\t}}>\r\n\t\t\t{overlayTimeout && <div className=\"display-border\" style={{width: `${size.width}px`, height: `${size.height}px`, pointerEvents: msBrowser ? 'none' : 'auto'}}>\r\n\t\t\t\t{`${display.file.name}${playbackRate == 1 ? \"\" : \" (\"+playbackRate+\"x)\"}`}\r\n\t\t\t</div>}\r\n\t\t\t{overlayTimeout && <div className=\"display-controls\">\r\n\t\t\t\t<button onClick={removeCallback}>X</button>\r\n\t\t\t\t<button onClick={() => copyCallback()}>C</button>\r\n\t\t\t\t<button onClick={exclusiveCallback}>E</button>\r\n\t\t\t\t<button onClick={inCallback}>I</button>\r\n\t\t\t\t<button onClick={outCallback}>O</button>\r\n\t\t\t\t<button onClick={() => speedCallback(2)}>&raquo;</button>\r\n\t\t\t\t<button onClick={() => speedCallback(0.5)}>&laquo;</button>\r\n\t\t\t</div>}\r\n\t\t\t{showOverlay && this.getIO()}\r\n\t\t\t{showThumbnail && thumbnailState && <video controls={false} autoPlay={false} loop={false} muted={true} src={display.url} width={this.thumbnailWidth} className=\"thumbnail\" ref={this.thumbnail} style={{left: thumbnailState.offsetX}} />}\r\n\t\t\t<video controls={true} autoPlay={true} loop={true} muted={true} src={display.url} draggable={!msBrowser}\r\n\t\t\t\t{...size} ref={this.video} style={{objectFit}}\r\n\t\t\t\t// title={display.file.name} // causes hover to display title which gets in the way\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\ninterface IOMarkerProps {\r\n\toffset:number,\r\n\tcolor:string\r\n}\r\nfunction IOMarker({offset, color}:IOMarkerProps) {\r\n\tconst diameter = 10\r\n\tconst yMargin = margins.bottom\r\n\treturn <svg className=\"iomarker\" width={diameter} height={diameter} viewBox={`0 0 2 2`}\r\n\t\tstyle={{bottom: yMargin + (diameter/2), left: margins.left + offset - (diameter/2)}}\r\n\t>\r\n\t\t<circle cx={1} cy={1} r={1} fill={color} />\r\n\t</svg>\r\n}\r\n","export interface AspectRatio {\r\n\tratio:number,\r\n\tname:string\r\n}\r\n\r\nexport const ASPECT_RATIOS = [{\r\n\tratio: 16/9,\r\n\tname: \"16:9 (High Def)\"\r\n}, {\r\n\tratio: 4/3,\r\n\tname: \"4:3 (Standard Def)\"\r\n}, {\r\n\tratio: 1,\r\n\tname: \"1:1 (Square)\",\r\n}, {\r\n\tratio: 9/16,\r\n\tname: \"9:16 (Vertical HD)\"\r\n}, {\r\n\tratio: 1.85,\r\n\tname: \"1.85:1 (Cinematic)\"\r\n}, {\r\n\tratio: 2.35,\r\n\tname: \"2.35:1 (Anamorphic)\"\r\n}]\r\n","import React from 'react'\r\nimport './Help.css'\r\nimport { ObjectFitProperty } from \"csstype\"\r\nimport {OBJECT_FITS} from './App'\r\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\r\n\r\nconst SHORTCUTS = <section id=\"shortcuts\">\r\n\t<h2>Shortcuts</h2><ol>\r\n\t\t<li><em>C:</em> Clone video (+1m)</li>\r\n\t\t<li><em>D:</em> Distribute times</li>\r\n\t\t<li><em>E:</em> Remove everything else</li>\r\n\t\t<li><em>F:</em> Toggle fullscreen</li>\r\n\t\t<li><em>Shift+F:</em> Fullscreen video</li>\r\n\t\t<li><em>H:</em> Toggle help</li>\r\n\t\t<li><em>I:</em> Toggle in point</li>\r\n\t\t<li><em>O:</em> Toggle out point</li>\r\n\t\t<li><em>M:</em> Toggle mute</li>\r\n\t\t<li><em>R:</em> Remove video</li>\r\n\t\t<li><em>S:</em> Change video scaling</li>\r\n\t\t<li><em>X:</em> Change aspect ratio</li>\r\n\t\t<li><em>← →:</em> Skip 1m</li>\r\n\t\t<li><em>Shift ← →:</em> Skip 10%</li>\r\n\t\t<li><em>Ctrl ← →:</em> Change speed</li>\r\n\t\t<li><em>Shift+S</em> Sync speeds</li>\r\n\t\t<li><em>Ctrl+W:</em> Close tab</li>\r\n\t\t<li><em>O,O:</em> Restart video</li>\r\n\t\t<li><em>2-9:</em> Fill 2-9 size grid</li>\r\n\t\t<li><em>Drag+Drop:</em> Reorder videos</li>\r\n\t</ol>\r\n</section>\r\n\r\nconst DISCLAIMER = <footer>\r\n\t<h2>Privacy Disclaimer</h2>\r\n\t<p>This tool records <b>no</b> filenames, screen grabs, or any other methods of identifying the actual contents of any video.  Only metadata about a video's format (codec, file size, resolution, and duration) may be recorded.</p>\r\n</footer>\r\n\r\ninterface HelpSettingsProps {\r\n\tobjectFit:ObjectFitProperty,\r\n\tobjectFitCallback:(objectFit:ObjectFitProperty)=>void,\r\n\taspectRatio:AspectRatio,\r\n\taspectRatioCallback:(aspectRatio:AspectRatio)=>void\r\n}\r\n\r\nfunction getAR(aspectRatio:AspectRatio) {\r\n\treturn `${aspectRatio.ratio.toFixed(2)} / ${aspectRatio.name}`\r\n}\r\n\r\nexport function Help(props:HelpSettingsProps) {\r\n\treturn <section id=\"help\">\r\n\t\t<h2>Usage</h2>\r\n\t\t<p>Drag and drop any number of videos to auto-play in an optimally arranged grid.</p>\r\n\t\t<section id=\"settings\">\r\n\t\t\t<h2>Settings</h2>\r\n\t\t\t<form>\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tname=\"objectScale\" label=\"Video Fit/Fill\"\r\n\t\t\t\t\tvalue={props.objectFit} choices={OBJECT_FITS.map((v, i) => <option key={i} value={v}>{v[0].toUpperCase()+v.substr(1)}</option>)}\r\n\t\t\t\t\tcallback={i => props.objectFitCallback(i as ObjectFitProperty)} /><br />\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tname=\"aspectRatio\" label=\"Aspect Ratio\"\r\n\t\t\t\t\tvalue={ASPECT_RATIOS.indexOf(props.aspectRatio).toString()}\r\n\t\t\t\t\tchoices={ASPECT_RATIOS.map((v, i) => <option key={i} value={i}>{v.name}</option>)}\r\n\t\t\t\t\tcallback={i => props.aspectRatioCallback(ASPECT_RATIOS[parseInt(i)])} /><br />\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t\t{SHORTCUTS}\r\n\t\t{DISCLAIMER}\r\n\t</section>\r\n}\r\n\r\nfunction SelectInput(props:{name:string, label:string, value:string, choices:JSX.Element[], callback:(val:string)=>void}) {\r\n\treturn <>\r\n\t\t<label htmlFor={props.name}>{props.label}</label>\r\n\t\t<select name={props.name} value={props.value} onChange={e => props.callback(e.target.value)}>\r\n\t\t\t{props.choices}\r\n\t\t</select>\r\n\t</>\r\n}\r\n\r\nfunction NumInput(props:{value:number, name:string, label:string, callback:(num:number)=>void}) {\r\n\treturn <>\r\n\t\t<label htmlFor={props.name}>{props.label}</label>\r\n\t\t<input type=\"number\" min={0} maxLength={3} name={props.name} value={props.value} onChange={e => props.callback(parseFloat(e.target.value))} />\r\n\t</>\r\n}\r\n\r\nexport default Help","// TODO: import only required polyfills\n// import 'react-app-polyfill/ie11'\nimport '@babel/polyfill'\n// import 'core-js/modules/es6.array.from'\nimport React from 'react'\nimport './App.css'\nimport { BDVideo, Display } from './BDVideo'\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\nimport Help from './Help'\nimport { toggleFullscreen } from './FullScreen'\nimport { ObjectFitProperty } from \"csstype\"\n\nexport const OBJECT_FITS = ['contain', 'cover', 'fill', 'scale-down'] as ObjectFitProperty[]\n\nconst avg = (arr:number[]) => arr.reduce((a, b) => a + b, 0) / arr.length\n\n// TODO: refence react as third party library on cdn?\n\n// TODO: add logo\nconst SPLASH = <section id=\"splash\">\n\t<p>Auto-play any number of videos or copies of videos in an optimally arranged grid with simple drag-and-drop.  Videos start half-way in and loop, ensuring immediate, continuous immersion, great for scouring surveillance footage, finding the best highlights from your last gaming stream, and more!</p>\n\t<p>Find your favourite moments quickly with thumbnail scrubbing and keyboard shortcuts to jump ahead in time 1m (→) or 10% (Shift →), or adjust playback speed (Ctrl →).</p>\n\t<p>Use shortcut keys to rapidly (c)opy or (r)emove displays, set (i)n/(o)ut loop points, (f)ullscreen the display, toggle (m)ute, etc.</p>\n\t{/* <img src=\"clipart/surveillance.jpg\" alt=\"Surveillance\" />\n\t<img src=\"clipart/television.jpg\" alt=\"Television\" /> */}\n</section>\n\nfunction stopDragDrop(e:Event) {\n\te.preventDefault()\n\te.stopPropagation()\n}\n\ninterface Dimensions {\n\tx:number,\n\ty:number\n}\n\ninterface AppState {\n\tshowHelp:boolean,\n\tshowThumbnails:boolean,\n\tdisplays:Display[],\n\tmaxId:number,\n\tactiveDisplay?:Display,\n\tlastDisplay?:Display,\n\tviewport?:Dimensions,\n\tratioIndex:number,\n\taspectRatio:AspectRatio,\n\tobjectFitIndex:number,\n\tobjectFit:ObjectFitProperty,\n\tfirstBatch:boolean,\n\terrorDisplays:Display[],\n\tdragSrc?:Display\n}\n\ninterface ActionControls {\n\t[key:string]: ()=>void\n}\n\nclass App extends React.Component<{},AppState> {\n\tviewport = React.createRef<HTMLElement>()\n\tglobalActions = {\n\t\t\"f\": () => toggleFullscreen(),\n\t\t\"h\": () => this.setState({showHelp: !this.state.showHelp}),\n\t\t\"s\": () => this.nextObjectFit(),\n\t\t\"t\": () => this.setState({showThumbnails: !this.state.showThumbnails}),\n\t\t\"x\": () => this.nextDimensionRatio()\n\t} as ActionControls\n\n\tsyncPlaybackRates(playbackRate:number) {\n\t\tconst {displays} = this.state\n\t\tdisplays.forEach(i => i.playbackRate = playbackRate)\n\t\tthis.setState({displays}) \n\t}\n\n\tdistributeTimes(display:Display) {\n\t\tconst {displays} = this.state\n\t\tconst matchingDisplays = displays.filter(i => i.file == display.file)\n\t\tconst di = matchingDisplays.indexOf(display)\n\t\t// start with target display so it keeps its current time, bump up from there looping back to start\n\t\tconst orderedDisplays = [display, ...matchingDisplays.slice(di+1), ...matchingDisplays.slice(0, di)]\n\n\t\tconst t1 = display.video!.currentTime\n\t\tconst duration = display.video!.duration\n\t\tconst spacing = duration / orderedDisplays.length\n\t\torderedDisplays.forEach((v, i) => {\n\t\t\tconst targetTime = t1 + (spacing * i)\n\t\t\t// loop time back to beginning once we exceed end of video\n\t\t\tv.video!.currentTime = targetTime < duration ? targetTime : targetTime - duration\n\t\t})\n\t}\n\n\tfillGrid(display:Display, count:number) {\n\t\tconst {displays} = this.state\n\t\tconst additions = count - displays.length\n\t\tif (additions < 1) return\n\t\tconst newDisplays = [...Array(additions)].map((_, i) => {\n\t\t\tconst newDisplay = this.copyDisplay(display)\n\t\t\tnewDisplay.id += i\n\t\t\treturn newDisplay\n\t\t})\n\t\tthis.setState({\n\t\t\tdisplays: displays.concat(newDisplays),\n\t\t\tmaxId: newDisplays.pop()!.id\n\t\t})\n\t}\n\n\tconstructor(props:{}) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tshowHelp: true,\n\t\t\tshowThumbnails: true,\n\t\t\tdisplays: [],\n\t\t\tmaxId: 0,\n\t\t\tratioIndex: 0,\n\t\t\taspectRatio: ASPECT_RATIOS[0],\n\t\t\tobjectFitIndex: 0,\n\t\t\tobjectFit: OBJECT_FITS[0],\n\t\t\tfirstBatch: true,\n\t\t\terrorDisplays: [],\n\t\t}\n\n\t\t// const testState = {\n\t\t// \tdisplays: [{\n\t\t// \t\tid: 1,\n\t\t// \t\tfile: new File([], \"test\"),\n\t\t// \t\turl: \"2.mp4\",\n\t\t// \t\ttriggerResize: true,\n\t\t// \t\tplaybackRate: 1\n\t\t// \t}],\n\t\t// \tmaxId: 1,\n\t\t// \tfirstBatch: false,\n\t\t// \tshowHelp: false\n\t\t// }\n\t\t// this.state = Object.assign({}, this.state, testState)\n\n\t\twindow.onresize = this.updateDimensions\n\n\t\twindow.onkeydown = this.handleKeyPress\n\n\t\tdocument.ondragover = stopDragDrop\n\t\tdocument.ondragenter = stopDragDrop\n\t\tdocument.ondragleave = stopDragDrop\n\t\tdocument.ondrop = this.handleDropEvent\n\t}\n\n\thandleDropEvent = (e:DragEvent) => {\n\t\tstopDragDrop(e)\n\t\tif (!e.dataTransfer) return\n\t\tconst {firstBatch} = this.state\n\t\tconst droppedFiles = e.dataTransfer.files as FileList\n\t\tconst videoFiles = Array.from(droppedFiles).filter(i => i.type.startsWith('video/'))\n\t\tlet maxId = this.state.maxId\n\t\tconst newDisplays = videoFiles.map(file => ({\n\t\t\tid: ++maxId,\n\t\t\tfile,\n\t\t\turl: URL.createObjectURL(file),\n\t\t\ttriggerResize: firstBatch,\n\t\t\tplaybackRate: 1\n\t\t} as Display))\n\n\t\tthis.setState({\n\t\t\tdisplays: this.state.displays.concat(newDisplays),\n\t\t\tmaxId,\n\t\t\tfirstBatch: false,\n\t\t\t// hide help if we are adding videos\n\t\t\tshowHelp: this.state.showHelp && videoFiles.length == 0\n\t\t})\n\t}\n\n\thandleKeyPress = (ev:KeyboardEvent) => {\n\t\tconst key = ev.key.toLowerCase()\n\t\tif (key in this.globalActions && !ev.shiftKey && !ev.ctrlKey) {\n\t\t\tthis.globalActions[key]()\n\t\t\treturn\n\t\t}\n\n\t\tconst d = this.state.activeDisplay\n\t\tif (!d) return\n\n\t\tif (ev.shiftKey) {\n\t\t\tconst shiftDisplayActions = {\n\t\t\t\t\"s\": () => this.syncPlaybackRates(d.playbackRate),\n\t\t\t} as ActionControls\n\t\t\tkey in shiftDisplayActions && shiftDisplayActions[key]()\n\t\t} else if (ev.ctrlKey) {\n\t\t\tconst ctrlDisplayActions = {\n\t\t\t\t\"arrowleft\": () => this.adjustVideoSpeed(d, 0.5),\n\t\t\t\t\"arrowright\": () => this.adjustVideoSpeed(d, 2)\n\t\t\t} as ActionControls\n\t\t\tkey in ctrlDisplayActions && ctrlDisplayActions[key]()\n\t\t} else {\n\t\t\tconst displayActions = {\n\t\t\t\t\"delete\": () => this.deleteDisplay(d),\n\t\t\t\t\"c\": () => this.addDisplayCopy(d),\n\t\t\t\t\"d\": () => this.distributeTimes(d),\n\t\t\t\t\"e\": () => this.setState({displays: [d]}),\n\t\t\t\t\"i\": () => this.setVideoIO(d, \"in\"),\n\t\t\t\t\"o\": () => this.setVideoIO(d, \"out\"),\n\t\t\t\t\"r\": () => this.deleteDisplay(d),\n\t\t\t} as ActionControls\n\t\t\tkey in displayActions && displayActions[key]()\n\t\t\tif (key >= \"2\" && key <= \"9\") {\n\t\t\t\tthis.fillGrid(d, parseInt(key))\n\t\t\t\tthis.distributeTimes(d)\n\t\t\t}\n\t\t}\n\t}\n\n\tgetVideoSize() {\n\t\tconst {displays, aspectRatio, viewport} = this.state\n\t\t// assume minimum size if no viewport (shouldn't happen)\n\t\tif (!viewport) return {width: 1, height: 1}\n\t\t// if only one display, use full size\n\t\tif (displays.length < 2) return {width: viewport.x, height: viewport.y}\n\n\t\t// try every number of rows up to a dedicated row for each video\n\t\tlet bestArea = 0, width = 0, height = 0\n\t\tconst videoRatio = aspectRatio.ratio\n\t\tfor (let rows = 1; rows <= displays.length; rows++) {\n\t\t\t// get the necessary number of columns with a given number of rows\n\t\t\tconst cols = Math.ceil(displays.length / rows)\n\t\t\t// this determines the size of the resulting box\n\t\t\tconst x = Math.floor(viewport.x / cols)\n\t\t\tconst y = Math.floor(viewport.y / rows)\n\t\t\t// actual video dimensions will depend on ratio within the display box, being shrunk on one side\n\t\t\tlet vx = x, vy = y\n\t\t\tif (videoRatio > x/y) {\n\t\t\t\tvy = vx / videoRatio\n\t\t\t} else {\n\t\t\t\tvx = vy * videoRatio\n\t\t\t}\n\t\t\tconst videoArea = vx * vy\n\t\t\t// if this isn't an improvement, continue looking\n\t\t\tif (videoArea < bestArea) continue\n\t\t\t// otherwise save this as best situation\n\t\t\tbestArea = videoArea\n\t\t\twidth = x, height = y\n\t\t}\n\n\t\treturn {width, height}\n\t}\n\n\tadjustVideoSpeed(display:Display, adjustment:number) {\n\t\tdisplay.playbackRate = display.playbackRate * adjustment\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tsetVideoIO(display:Display, mode:\"in\"|\"out\") {\n\t\tif (mode in display) {\n\t\t\tdelete display[mode]\n\t\t} else {\n\t\t\tdisplay[mode] = display.video!.currentTime\n\t\t}\n\t\t// not sure if this way of updating the display will work\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tupdateDimensions = () => {\n\t\tconst vp = this.viewport.current!\n\t\tconst viewport = {x: vp.clientWidth, y: vp.clientHeight}\n\t\tthis.setState({viewport})\n\t}\n\n\tcopyDisplay(display:Display) {\n\t\tconst activeVideo = display.video!\n\t\tconst maxId = this.state.maxId + 1\n\t\tlet startTime = activeVideo.currentTime + 60\n\t\tif (startTime > activeVideo.duration) startTime = 0\n\t\tconst newDisplay = {\n\t\t\tid: maxId,\n\t\t\tfile: display.file,\n\t\t\turl: display.url,\n\t\t\tplaybackRate: display.playbackRate,\n\t\t\tstartTime,\n\t\t\ttriggerResize: false\n\t\t}\n\t\treturn newDisplay\n\t}\n\n\taddDisplayCopy(display:Display) {\n\t\tconst newDisplay = this.copyDisplay(display)\n\t\tthis.setState({\n\t\t\tmaxId: newDisplay.id,\n\t\t\tdisplays: this.state.displays.concat(newDisplay)\n\t\t})\n\t}\n\n\tdeleteDisplay(display:Display) {\n\t\tthis.setState({ displays: this.state.displays.filter(i => i != display) })\n\t}\n\n\tnextDimensionRatio() {\n\t\tlet i = this.state.ratioIndex + 1\n\t\tif (i >= ASPECT_RATIOS.length) i = 0\n\t\tthis.setState({\n\t\t\tratioIndex: i,\n\t\t\taspectRatio: ASPECT_RATIOS[i]\n\t\t})\n\t}\n\n\tnextObjectFit() {\n\t\tlet i = this.state.objectFitIndex + 1\n\t\tif (i >= OBJECT_FITS.length) i = 0\n\t\tthis.setState({\n\t\t\tobjectFitIndex: i,\n\t\t\tobjectFit: OBJECT_FITS[i]\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions()\n\t}\n\n\tgetRecommendedAspectRatioIndex() {\n\t\tconst avgRatio = avg(this.state.displays.map(i => i.video!.videoWidth / i.video!.videoHeight))\n\t\tconst closestRatio = [...ASPECT_RATIOS].sort((a, b) => Math.abs(avgRatio - b.ratio) - Math.abs(avgRatio - a.ratio)).pop()!\n\t\tconst i = ASPECT_RATIOS.findIndex(i => i.name == closestRatio.name)\n\t\treturn i\n\t}\n\n\tsetRecommendedAspectRatio() {\n\t\tconst i = this.getRecommendedAspectRatioIndex()\n\t\tthis.setState({\n\t\t\taspectRatio: ASPECT_RATIOS[i],\n\t\t\tratioIndex: i\n\t\t})\n\t}\n\n\thandleVideoError(display:Display) {\n\t\tconst {displays, errorDisplays} = this.state\n\t\terrorDisplays.push(display)\n\t\tthis.setState({\n\t\t\tdisplays: displays.filter(i => i != display),\n\t\t\terrorDisplays\n\t\t})\n\t}\n\n\treorderDisplays(dest:EventTarget) {\n\t\tconst {displays, dragSrc} = this.state\n\t\tif (!dragSrc) return\n\t\tconst destDisplay = displays.filter(i => i.video == dest).pop() || displays[displays.length-1]\n\t\tconst si = displays.indexOf(dragSrc)\n\t\tconst tmpDisplays = [...displays.slice(0, si), ...displays.slice(si+1)]\n\t\tconst di = tmpDisplays.indexOf(destDisplay)\n\t\tconst newDisplays = [...tmpDisplays.slice(0, di+1), dragSrc, ...tmpDisplays.slice(di+1)]\n\t\tthis.setState({ displays: newDisplays })\n\t}\n\n\trender() {\n\t\tconst {displays, errorDisplays, activeDisplay, showThumbnails, showHelp, aspectRatio, objectFit} = this.state\n\t\tconst size = this.getVideoSize()\n\t\treturn <>\n\t\t\t<main ref={this.viewport}\n\t\t\t\tonDrop={e => this.reorderDisplays(e.target)}>\n\t\t\t\t{displays.length == 0 && SPLASH}\n\t\t\t\t{displays.map(i => <BDVideo size={size} objectFit={objectFit} key={i.id} display={i}\n\t\t\t\t\tshowOverlay={i == activeDisplay}\n\t\t\t\t\tshowThumbnail={showThumbnails}\n\t\t\t\t\tplaybackRate={i.playbackRate}\n\t\t\t\t\tonDrag={display => this.setState({dragSrc: display})}\n\t\t\t\t\tonMouseOver={() => this.setState({activeDisplay: i, lastDisplay: i})}\n\t\t\t\t\tonMouseOut={() => this.setState({activeDisplay: undefined})}\n\t\t\t\t\tonLoad={() => i.triggerResize && this.setRecommendedAspectRatio()}\n\t\t\t\t\tonError={() => this.handleVideoError(i)}\n\t\t\t\t\tinTime={i.in} outTime={i.out}\n\t\t\t\t\tremoveCallback={() => this.deleteDisplay(i)}\n\t\t\t\t\tcopyCallback={() => this.addDisplayCopy(i)}\n\t\t\t\t\texclusiveCallback={() => this.setState({displays: [i]})}\n\t\t\t\t\tstaggerCallback={() => this.distributeTimes(i)}\n\t\t\t\t\tinCallback={() => this.setVideoIO(i, \"in\")}\n\t\t\t\t\toutCallback={() => this.setVideoIO(i, \"out\")}\n\t\t\t\t\tspeedCallback={adjustment => this.adjustVideoSpeed(i, adjustment)}\n\t\t\t\t/>)}\n\t\t\t</main>\n\t\t\t{errorDisplays.length > 0 && <ErrorDisplay errorDisplays={errorDisplays} dismissCallback={() => this.setState({errorDisplays: []})} />}\n\t\t\t{showHelp && <Help\n\t\t\t\t{...{aspectRatio, objectFit}}\n\t\t\t\taspectRatioCallback={aspectRatio => this.setState({aspectRatio})}\n\t\t\t\tobjectFitCallback={objectFit => this.setState({objectFit})} />}\n\t\t</>\n\t}\n}\n\ninterface ErrorDisplayProps {\n\terrorDisplays:Display[],\n\tdismissCallback:()=>void\n}\nfunction ErrorDisplay({errorDisplays, dismissCallback}:ErrorDisplayProps) {\n\treturn <section id=\"errors\">\n\t\t<h2>Errors</h2><ol>\n\t\t\t{errorDisplays.map((display, i) => <li key={i}>{display.file.name} ({display.file.type})</li>)}\n\t\t</ol>\n\t\t<p>Only videos supported by your web browser will play successfully.  <code>.mp4</code> and <code>.webm</code> files are good bets.</p>\n\t\t<form onSubmit={dismissCallback}><button>Dismiss</button></form>\n\t</section>\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}