{"version":3,"sources":["BDVideo.tsx","AspectRatio.ts","Help.tsx","App.tsx","serviceWorker.js","index.js"],"names":["OBJECT_FITS","browser","navigator","userAgent","indexOf","msBrowser","VIDEO_MARGINS","edge","left","right","bottom","chrome","margins","BDVideo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","video","React","createRef","thumbnail","dragMargin","thumbnailWidth","thumbnailMargin","state","hoverThumbnail","bind","assertThisInitialized","inherits","createClass","key","value","_this$props","inTime","outTime","current","ontimeupdate","e","pastOut","currentTime","beforeIn","height","layerY","setState","thumbnailState","undefined","timelineWidth","width","videoPercentage","layerX","targetTime","duration","offsetX","timestamp","_this$props2","playbackRate","showThumbnail","rate","setIO","onmouseover","_this2","_this$props3","display","onLoad","onError","onDrag","startTime","onload","onerror","onloadeddata","onloadedmetadata","ondragstart","target","offsetY","preventDefault","onmousemove","onmouseout","_this$props4","ip","op","ix","ox","react_default","a","createElement","Fragment","IOMarker","offset","color","_this$props5","size","onMouseOver","onMouseOut","objectFit","showOverlay","assign","className","style","concat","pointerEvents","file","name","getIO","controls","autoPlay","loop","muted","src","url","ref","draggable","title","Component","_ref","yMargin","viewBox","diameter","cx","cy","r","fill","ASPECT_RATIOS","ratio","HELP","id","SPLASH","stopDragDrop","stopPropagation","adjustDisplayTime","adjustment","percentage","arguments","length","vid","end","diff","fullscreenElement","element","requestFullscreen","msRequestFullscreen","webkitRequestFullscreen","fsEnabled","document","fullscreenEnabled","msFullscreenEnabled","webkitFullscreenEnabled","fsExit","exitFullscreen","msExitFullscreen","webkitExitFullscreen","App","viewport","globalActions","f","body","msFullscreenElement","webkitFullscreenElement","toggleFullscreen","h","showHelp","s","nextObjectFit","t","showThumbnails","x","nextDimensionRatio","showInfo","displays","maxId","ratioIndex","aspectRatio","objectFitIndex","firstBatch","errorDisplays","window","onresize","updateDimensions","onkeydown","ev","toLowerCase","shiftKey","ctrlKey","activeDisplay","shiftDisplayActions","arrowleft","arrowright","syncPlaybackRates","ctrlDisplayActions","adjustVideoSpeed","displayActions","delete","deleteDisplay","c","addDisplayCopy","d","distributeTimes","i","setVideoIO","o","m","fillGrid","parseInt","ondragover","ondragenter","ondragleave","ondrop","dataTransfer","droppedFiles","files","videoFiles","Array","from","filter","type","startsWith","newDisplays","map","URL","createObjectURL","triggerResize","forEach","matchingDisplays","di","orderedDisplays","toConsumableArray","slice","t1","spacing","v","count","additions","_","newDisplay","copyDisplay","pop","_this$state","y","bestArea","videoRatio","rows","cols","Math","ceil","floor","vx","vy","videoArea","mode","vp","clientWidth","clientHeight","activeVideo","videoWidth","videoHeight","avgRatio","getAspectRatios","reduce","b","closestRatio","sort","min","findIndex","getRecommendedAspectRatioIndex","_this$state2","push","dest","_this$state3","dragSrc","destDisplay","si","tmpDisplays","_this3","_this$state4","lastDisplay","getVideoSize","onDrop","reorderDisplays","BDVideo_BDVideo","setRecommendedAspectRatio","handleVideoError","in","out","onSubmit","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3189606.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// TODO: fix this TypeScript hack\r\nexport type ObjectFit = \"fill\"|\"contain\"|\"cover\"|\"scale-down\"\r\nexport const OBJECT_FITS = ['contain', 'cover', 'fill', 'scale-down'] as ObjectFit[]\r\n\r\nfunction getBrowser() {\r\n\tif (navigator.userAgent.indexOf(' Trident/') > -1) return 'IE'\r\n\tif (navigator.userAgent.indexOf(' Edge/') > -1) return 'Edge'\r\n\treturn 'Chrome'\r\n}\r\n\r\nexport const browser = getBrowser()\r\nexport const msBrowser = [\"Edge\",\"IE\"].indexOf(browser) > -1\r\n\r\nconst VIDEO_MARGINS = {\r\n\t\"edge\": {\r\n\t\t\"left\": 116,\r\n\t\t\"right\": 220,\r\n\t\t\"bottom\": 24\r\n\t},\r\n\t\"chrome\": {\r\n\t\t\"left\": 24,\r\n\t\t\"right\": 24,\r\n\t\t\"bottom\": 16\r\n\t}\r\n}\r\nconst margins = browser == \"Chrome\" ? VIDEO_MARGINS[\"chrome\"] : VIDEO_MARGINS[\"edge\"]\r\n\r\nexport interface Display {\r\n\tid:number,\r\n\tfile:File,\r\n\turl:string,\r\n\tstartTime?:number,\r\n\tin?:number,\r\n\tout?:number,\r\n\tvideo?:HTMLVideoElement,\r\n\ttriggerResize:boolean,\r\n\tplaybackRate:number\r\n}\r\n\r\ninterface BDVideoProps {\r\n\tdisplay:Display,\r\n\tobjectFit:ObjectFit,\r\n\tsize: {\r\n\t\twidth:number,\r\n\t\theight:number\r\n\t},\r\n\tshowOverlay:boolean,\r\n\tshowThumbnail:boolean,\r\n\tinTime?:number,\r\n\toutTime?:number,\r\n\tplaybackRate:number,\r\n\tonMouseOver:()=>void,\r\n\tonMouseOut:()=>void,\r\n\tonLoad:()=>void\r\n\tonError:()=>void\r\n\tonDrag:(display:Display)=>void\r\n}\r\n\r\ninterface BDVideoState {\r\n\tthumbnailState?:{\r\n\t\toffsetX:number,\r\n\t\ttimestamp:number\r\n\t}\r\n}\r\n\r\nexport class BDVideo extends React.Component<BDVideoProps, BDVideoState> {\r\n\tvideo = React.createRef<HTMLVideoElement>()\r\n\tthumbnail = React.createRef<HTMLVideoElement>()\r\n\r\n\tdragMargin = 80\r\n\tthumbnailWidth = 196\r\n\tthumbnailMargin = margins.bottom + 8\r\n\r\n\tconstructor(props:BDVideoProps) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {}\r\n\t\tthis.hoverThumbnail = this.hoverThumbnail.bind(this)\r\n\t}\r\n\r\n\tsetIO() {\r\n\t\tconst {inTime, outTime} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tvideo.ontimeupdate = e => {\r\n\t\t\tconst pastOut = outTime && outTime < video.currentTime\r\n\t\t\tconst beforeIn = inTime && inTime > video.currentTime\r\n\t\t\tif (pastOut || beforeIn) video.currentTime = inTime || 0\r\n\t\t}\r\n\t}\r\n\r\n\thoverThumbnail(e:MouseEvent) {\r\n\t\tconst video = this.video.current\r\n\t\tif (!video) return\r\n\t\tconst distanceFromBottom = video.height - e.layerY\r\n\t\tif (distanceFromBottom > this.thumbnailMargin) {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst timelineWidth = video.width - margins.left - margins.right\r\n\t\tconst videoPercentage = (e.layerX - margins.left) / timelineWidth \r\n\t\tif (videoPercentage < 0 || videoPercentage > 1) {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst targetTime = video.duration * videoPercentage\r\n\t\tthis.setState({\r\n\t\t\tthumbnailState: {\r\n\t\t\t\toffsetX: e.layerX - (this.thumbnailWidth / 2),\r\n\t\t\t\ttimestamp: targetTime\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst {playbackRate, showThumbnail} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tconst rate = playbackRate || 1\r\n\t\tvideo.playbackRate = rate\r\n\t\tthis.setIO()\r\n\t\tif (showThumbnail && browser != 'IE') {\r\n\t\t\tconst {thumbnailState} = this.state\r\n\t\t\tconst thumbnail = this.thumbnail.current\r\n\t\t\tif (thumbnail && thumbnailState) {\r\n\t\t\t\tthumbnail.currentTime = thumbnailState.timestamp\r\n\t\t\t}\r\n\t\t\tvideo.onmouseover = this.hoverThumbnail\r\n\t\t} else {\r\n\t\t\tvideo.onmouseover = null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst {display, onLoad, onError, onDrag, showThumbnail} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tdisplay.video = video\r\n\t\tif (display.startTime) {\r\n\t\t\tvideo.onload = () => { video.currentTime = display.startTime! }\r\n\t\t} else {\r\n\t\t\tvideo.onerror = onError\r\n\t\t\tvideo.onloadeddata = e => video.currentTime = video.duration / 2\r\n\t\t\tvideo.onloadedmetadata = onLoad\r\n\t\t}\r\n\t\tvideo.ondragstart = e => {\r\n\t\t\tconst target = e.target! as HTMLVideoElement\r\n\t\t\tconst distanceFromBottom = target.height - e.offsetY\r\n\t\t\tif (distanceFromBottom < this.dragMargin) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tonDrag(display)\r\n\t\t}\r\n\t\tvideo.onmousemove = showThumbnail && browser != 'IE' ? this.hoverThumbnail : null\r\n\t\tvideo.onmouseout = e => {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t}\r\n\t\tthis.setIO()\r\n\t}\r\n\r\n\tgetIO() {\r\n\t\tconst {inTime, outTime} = this.props\r\n\t\tconst video = this.video.current!\r\n\r\n\t\tif (inTime || outTime) {\r\n\t\t\tconst duration = video.duration\r\n\t\t\tconst ip = inTime || 0\r\n\t\t\tconst op = outTime || duration\r\n\t\t\tconst timelineWidth = video.width - margins.left - margins.right\r\n\t\t\tconst ix = (ip / duration) * timelineWidth\r\n\t\t\tconst ox = (op / duration) * timelineWidth\r\n\t\t\treturn <>\r\n\t\t\t\t<IOMarker offset={ix} color=\"gold\" />\r\n\t\t\t\t<IOMarker offset={ox} color=\"gold\" />\r\n\t\t\t</>\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {size, onMouseOver, onMouseOut, display, objectFit, showOverlay, showThumbnail, playbackRate} = this.props\r\n\t\tconst {thumbnailState} = this.state\r\n\r\n\t\treturn <div className=\"display\" {...size} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\r\n\t\t\t<div className=\"display-border\" style={{width: `${size.width}px`, height: `${size.height}px`, pointerEvents: msBrowser ? 'none' : 'auto'}}>{showOverlay && `${display.file.name}${playbackRate == 1 ? \"\" : \" (\"+playbackRate+\"x)\"}`}</div>\r\n\t\t\t{showOverlay && this.getIO()}\r\n\t\t\t{showThumbnail && thumbnailState && <video controls={false} autoPlay={false} loop={false} muted={true} src={display.url} width={this.thumbnailWidth} className=\"thumbnail\" ref={this.thumbnail} style={{left: thumbnailState.offsetX}} />}\r\n\t\t\t<video controls={true} autoPlay={true} loop={true} muted={true} src={display.url} draggable={!msBrowser}\r\n\t\t\t\t{...size} ref={this.video} style={{objectFit}} title={display.file.name} />\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\ninterface IOMarkerProps {\r\n\toffset:number,\r\n\tcolor:string\r\n}\r\nfunction IOMarker({offset, color}:IOMarkerProps) {\r\n\tconst diameter = 10\r\n\tconst yMargin = margins.bottom\r\n\treturn <svg className=\"iomarker\" width={diameter} height={diameter} viewBox={`0 0 2 2`}\r\n\t\tstyle={{bottom: yMargin + (diameter/2), left: margins.left + offset - (diameter/2)}}\r\n\t>\r\n\t\t<circle cx={1} cy={1} r={1} fill={color} />\r\n\t</svg>\r\n}\r\n","export interface AspectRatio {\r\n\tratio:number,\r\n\tname:string\r\n}\r\n\r\nexport const ASPECT_RATIOS = [\r\n\t{\r\n\t\tratio: 16/9,\r\n\t\tname: \"16:9 (High Definition)\"\r\n\t}, {\r\n\t\tratio: 4/3,\r\n\t\tname: \"4:3 (Standard Definition)\"\r\n\t}, {\r\n\t\tratio: 1,\r\n\t\tname: \"1:1 (Square)\",\r\n\t}, {\r\n\t\tratio: 9/16,\r\n\t\tname: \"9:16 (Vertical HD)\"\r\n\t}, {\r\n\t\tratio: 1.85,\r\n\t\tname: \"1.85:1 (Cinematic Wide)\"\r\n\t}, {\r\n\t\tratio: 2.35,\r\n\t\tname: \"2.35:1 (Anamorphic Wide)\"\r\n\t}\r\n]","import React from 'react'\r\n\r\nexport const HELP = <section id=\"help\">\r\n\t<h2>Usage</h2>\r\n\t<p>Drag and drop any number of videos to auto-play in an optimally arranged grid.</p>\r\n\t<p>Videos start half-way in and loop, ensuring immediate, continuous action, but also start muted to avoid chaotic, clashing audio and prevent disturbing others.</p>\r\n\t<h2>Shortcuts</h2><ol>\r\n\t\t<li><em>C:</em> Clone video (+1m)</li>\r\n\t\t<li><em>D:</em> Distribute times</li>\r\n\t\t<li><em>H:</em> Toggle help</li>\r\n\t\t{/* <li><em>I:</em> Toggle info overlay</li> */}\r\n\t\t<li><em>M:</em> Toggle mute</li>\r\n\t\t<li><em>R:</em> Delete video</li>\r\n\t\t<li><em>S:</em> Change video scaling</li>\r\n\t\t<li><em>X:</em> Change aspect ratio</li>\r\n\t\t<li><em>← →:</em> Skip 1m</li>\r\n\t\t<li><em>Shift ← →:</em> Skip 10%</li>\r\n\t\t<li><em>Ctrl ← →:</em> Change speed</li>\r\n\t\t<li><em>Shift+S</em> Sync speeds</li>\r\n\t\t<li><em>Ctrl+W:</em> Close tab</li>\r\n\t\t<li><em>F / F11:</em> Toggle fullscreen</li>\r\n\t\t<li><em>Shift+F:</em> Fullscreen video</li>\r\n\t\t<li><em>I / O:</em> Toggle in / out time</li>\r\n\t\t<li><em>OO:</em> Restart video</li>\r\n\t\t<li><em>2-9:</em> Fill 2-9 size grid</li>\r\n\t\t<li><em>Drag&amp;Drop:</em> Reorder videos</li>\r\n\t</ol>\r\n\t<footer>\r\n\t\t<h2>Privacy Disclaimer</h2>\r\n\t\t<p>This tool records <b>no</b> filenames, screen grabs, or any other methods of identifying the actual contents of any video.  Only metadata about a video's format (codec, file size, resolution, and duration) may be recorded.</p>\r\n\t</footer>\r\n</section>\r\n\r\nexport default HELP","// TODO: import only required polyfills\n// import 'react-app-polyfill/ie11'\nimport '@babel/polyfill'\n// import 'core-js/modules/es6.array.from'\nimport React from 'react'\nimport './App.css'\nimport { BDVideo, Display, ObjectFit, OBJECT_FITS } from './BDVideo'\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\nimport HELP from './Help'\n\n// TODO: refence react as third party library on cdn?\n\n// TODO: add logo\nconst SPLASH = <section id=\"splash\">\n\t<p>Drag and drop any number of videos to auto-play in an optimally arranged grid.</p>\n\t<p>Videos start half-way in and loop, ensuring immediate, continuous action, but also start muted to avoid chaotic, clashing audio and prevent disturbing others.</p>\n</section>\n\nfunction stopDragDrop(e:Event) {\n\te.preventDefault()\n\te.stopPropagation()\n}\n\nfunction toggleMute(video?:HTMLVideoElement) {\n\tif (!video) return\n\tvideo.muted = !video.muted\n}\n\nfunction adjustDisplayTime(display:Display, adjustment:number, percentage:boolean = false) {\n\tconst vid = display.video\n\tif (!vid) return\n\tconst end = vid.duration\n\tif (percentage) {\n\t\tadjustment = end * adjustment\n\t}\n\tconst diff = end - vid.currentTime\n\tif (adjustment > diff) {\n\t\tvid.currentTime = adjustment - diff\n\t} else {\n\t\tvid.currentTime = vid.currentTime + adjustment\n\t}\n}\n\ninterface Dimensions {\n\tx:number,\n\ty:number\n}\n\ninterface AppState {\n\tshowInfo:boolean,\n\tshowHelp:boolean,\n\tshowThumbnails:boolean,\n\tdisplays:Display[],\n\tmaxId:number,\n\tactiveDisplay?:Display,\n\tlastDisplay?:Display,\n\tviewport?:Dimensions,\n\tratioIndex:number,\n\taspectRatio:AspectRatio,\n\tobjectFitIndex:number,\n\tobjectFit:ObjectFit,\n\tfirstBatch:boolean,\n\terrorDisplays:Display[],\n\tdragSrc?:Display\n}\n\ninterface ActionControls {\n\t[key:string]: ()=>void\n}\n\nfunction fullscreenElement(element:HTMLElement) {\n\t(element.requestFullscreen || (element as any).msRequestFullscreen || (element as any).webkitRequestFullscreen).call(element)\n}\n\nconst fsEnabled = document.fullscreenEnabled || (document as any).msFullscreenEnabled || (document as any).webkitFullscreenEnabled\nconst fsExit = (document.exitFullscreen || (document as any).msExitFullscreen || (document as any).webkitExitFullscreen).bind(document)\nfunction toggleFullscreen(target:HTMLElement = document.body) {\n\tif (!fsEnabled) return\n\tconst fsElement = document.fullscreenElement || (document as any).msFullscreenElement || (document as any).webkitFullscreenElement\n\tif (fsElement) {\n\t\tfsExit()\n\t} else {\n\t\tfullscreenElement(target)\n\t}\n}\n\nclass App extends React.Component<{},AppState> {\n\tviewport = React.createRef<HTMLElement>()\n\tglobalActions = {\n\t\t\"f\": () => toggleFullscreen(),\n\t\t\"h\": () => this.setState({showHelp: !this.state.showHelp}),\n\t\t// \"i\": () => this.setState({showInfo: !this.state.showInfo}),\n\t\t\"s\": () => this.nextObjectFit(),\n\t\t\"t\": () => this.setState({showThumbnails: !this.state.showThumbnails}),\n\t\t\"x\": () => this.nextDimensionRatio()\n\t} as ActionControls\n\n\tsyncPlaybackRates(playbackRate:number) {\n\t\tconst {displays} = this.state\n\t\tdisplays.forEach(i => i.playbackRate = playbackRate)\n\t\tthis.setState({displays}) \n\t}\n\n\tdistributeTimes(display:Display) {\n\t\tconst {displays} = this.state\n\t\tconst matchingDisplays = displays.filter(i => i.file == display.file)\n\t\tconst di = matchingDisplays.indexOf(display)\n\t\t// start with target display so it keeps its current time, bump up from there looping back to start\n\t\tconst orderedDisplays = [display, ...matchingDisplays.slice(di+1), ...matchingDisplays.slice(0, di)]\n\n\t\tconst t1 = display.video!.currentTime\n\t\tconst duration = display.video!.duration\n\t\tconst spacing = duration / orderedDisplays.length\n\t\torderedDisplays.forEach((v, i) => {\n\t\t\tconst targetTime = t1 + (spacing * i)\n\t\t\t// loop time back to beginning once we exceed end of video\n\t\t\tv.video!.currentTime = targetTime < duration ? targetTime : targetTime - duration\n\t\t})\n\t}\n\n\tfillGrid(display:Display, count:number) {\n\t\tconst {displays} = this.state\n\t\tconst additions = count - displays.length\n\t\tif (additions < 1) return\n\t\tconst newDisplays = [...Array(additions)].map((_, i) => {\n\t\t\tconst newDisplay = this.copyDisplay(display)\n\t\t\tnewDisplay.id += i\n\t\t\treturn newDisplay\n\t\t})\n\t\tthis.setState({\n\t\t\tdisplays: displays.concat(newDisplays),\n\t\t\tmaxId: newDisplays.pop()!.id\n\t\t})\n\t}\n\n\tconstructor(props:{}) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tshowInfo: false,\n\t\t\tshowHelp: true,\n\t\t\tshowThumbnails: true,\n\t\t\tdisplays: [],\n\t\t\tmaxId: 0,\n\t\t\tratioIndex: 0,\n\t\t\taspectRatio: ASPECT_RATIOS[0],\n\t\t\tobjectFitIndex: 0,\n\t\t\tobjectFit: OBJECT_FITS[0],\n\t\t\tfirstBatch: true,\n\t\t\terrorDisplays: [],\n\t\t}\n\n\t\twindow.onresize = () => this.updateDimensions()\n\n\t\twindow.onkeydown = ev => {\n\t\t\tconst key = ev.key.toLowerCase()\n\t\t\tif (key in this.globalActions && !ev.shiftKey && !ev.ctrlKey) {\n\t\t\t\tthis.globalActions[key]()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst {activeDisplay} = this.state\n\t\t\tif (!activeDisplay) return\n\n\t\t\tif (ev.shiftKey) {\n\t\t\t\tconst shiftDisplayActions = {\n\t\t\t\t\t\"arrowleft\": () => adjustDisplayTime(activeDisplay, -.1, true),\n\t\t\t\t\t\"arrowright\": () => adjustDisplayTime(activeDisplay, .1, true),\n\t\t\t\t\t\"s\": () => this.syncPlaybackRates(activeDisplay.playbackRate),\n\t\t\t\t\t\"f\": () => fullscreenElement(activeDisplay.video!)\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in shiftDisplayActions && shiftDisplayActions[key]()\n\t\t\t} else if (ev.ctrlKey) {\n\t\t\t\tconst ctrlDisplayActions = {\n\t\t\t\t\t\"arrowleft\": () => this.adjustVideoSpeed(activeDisplay, 0.5),\n\t\t\t\t\t\"arrowright\": () => this.adjustVideoSpeed(activeDisplay, 2)\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in ctrlDisplayActions && ctrlDisplayActions[key]()\n\t\t\t} else {\n\t\t\t\tconst displayActions = {\n\t\t\t\t\t\"delete\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"c\": () => this.addDisplayCopy(activeDisplay),\n\t\t\t\t\t\"d\": () => this.distributeTimes(activeDisplay),\n\t\t\t\t\t\"i\": () => this.setVideoIO(activeDisplay, \"in\"),\n\t\t\t\t\t\"o\": () => this.setVideoIO(activeDisplay, \"out\"),\n\t\t\t\t\t\"m\": () => toggleMute(activeDisplay.video),\n\t\t\t\t\t\"r\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"arrowleft\": () => adjustDisplayTime(activeDisplay, -60),\n\t\t\t\t\t\"arrowright\": () => adjustDisplayTime(activeDisplay, 60),\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in displayActions && displayActions[key]()\n\t\t\t\tif (key >= \"2\" && key <= \"9\") {\n\t\t\t\t\tthis.fillGrid(activeDisplay, parseInt(key))\n\t\t\t\t\tthis.distributeTimes(activeDisplay)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdocument.ondragover = stopDragDrop\n\t\tdocument.ondragenter = stopDragDrop\n\t\tdocument.ondragleave = stopDragDrop\n\n\t\tdocument.ondrop = (e:DragEvent) => {\n\t\t\tstopDragDrop(e)\n\t\t\tif (!e.dataTransfer) return\n\t\t\tconst {firstBatch} = this.state\n\t\t\tconst droppedFiles = e.dataTransfer.files as FileList\n\t\t\tconst videoFiles = Array.from(droppedFiles).filter(i => i.type.startsWith('video/'))\n\t\t\tlet maxId = this.state.maxId\n\t\t\tconst newDisplays = videoFiles.map(file => ({\n\t\t\t\tid: ++maxId,\n\t\t\t\tfile,\n\t\t\t\turl: URL.createObjectURL(file),\n\t\t\t\ttriggerResize: firstBatch,\n\t\t\t\tplaybackRate: 1\n\t\t\t} as Display))\n\n\t\t\tthis.setState({\n\t\t\t\tdisplays: this.state.displays.concat(newDisplays),\n\t\t\t\tmaxId,\n\t\t\t\tfirstBatch: false,\n\t\t\t\t// hide help if we are adding videos\n\t\t\t\tshowHelp: this.state.showHelp && videoFiles.length == 0\n\t\t\t})\n\t\t}\n\t}\n\n\tgetVideoSize() {\n\t\tconst {displays, aspectRatio, viewport} = this.state\n\t\t// assume minimum size if no viewport (shouldn't happen)\n\t\tif (!viewport) return {width: 1, height: 1}\n\t\t// if only one display, use full size\n\t\tif (displays.length < 2) return {width: viewport.x, height: viewport.y}\n\n\t\t// try every number of rows up to a dedicated row for each video\n\t\tlet bestArea = 0, width = 0, height = 0\n\t\tconst videoRatio = aspectRatio.ratio\n\t\tfor (let rows = 1; rows <= displays.length; rows++) {\n\t\t\t// get the necessary number of columns with a given number of rows\n\t\t\tconst cols = Math.ceil(displays.length / rows)\n\t\t\t// this determines the size of the resulting box\n\t\t\tconst x = Math.floor(viewport.x / cols)\n\t\t\tconst y = Math.floor(viewport.y / rows)\n\t\t\t// actual video dimensions will depend on ratio within the display box, being shrunk on one side\n\t\t\tlet vx = x, vy = y\n\t\t\tif (videoRatio > x/y) {\n\t\t\t\tvy = vx / videoRatio\n\t\t\t} else {\n\t\t\t\tvx = vy * videoRatio\n\t\t\t}\n\t\t\tconst videoArea = vx * vy\n\t\t\t// if this isn't an improvement, continue looking\n\t\t\tif (videoArea < bestArea) continue\n\t\t\t// otherwise save this as best situation\n\t\t\tbestArea = videoArea\n\t\t\twidth = x, height = y\n\t\t}\n\n\t\treturn {width, height}\n\t}\n\n\tadjustVideoSpeed(display:Display, adjustment:number) {\n\t\tdisplay.playbackRate = display.playbackRate * adjustment\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tsetVideoIO(display:Display, mode:\"in\"|\"out\") {\n\t\tif (mode in display) {\n\t\t\tdelete display[mode]\n\t\t} else {\n\t\t\tdisplay[mode] = display.video!.currentTime\n\t\t}\n\t\t// not sure if this way of updating the display will work\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tupdateDimensions() {\n\t\tconst vp = this.viewport.current!\n\t\tconst viewport = {x: vp.clientWidth, y: vp.clientHeight}\n\t\tthis.setState({viewport})\n\t}\n\n\tcopyDisplay(display:Display) {\n\t\tconst activeVideo = display.video!\n\t\tconst maxId = this.state.maxId + 1\n\t\tlet startTime = activeVideo.currentTime + 60\n\t\tif (startTime > activeVideo.duration) startTime = 0\n\t\tconst newDisplay = {\n\t\t\tid: maxId,\n\t\t\tfile: display.file,\n\t\t\turl: display.url,\n\t\t\tplaybackRate: display.playbackRate,\n\t\t\tstartTime,\n\t\t\ttriggerResize: false\n\t\t}\n\t\treturn newDisplay\n\t}\n\n\taddDisplayCopy(display:Display) {\n\t\tconst newDisplay = this.copyDisplay(display)\n\t\tthis.setState({\n\t\t\tmaxId: newDisplay.id,\n\t\t\tdisplays: this.state.displays.concat(newDisplay)\n\t\t})\n\t}\n\n\tdeleteDisplay(display:Display) {\n\t\tthis.setState({ displays: this.state.displays.filter(i => i != display) })\n\t}\n\n\tnextDimensionRatio() {\n\t\tlet i = this.state.ratioIndex + 1\n\t\tif (i >= ASPECT_RATIOS.length) i = 0\n\t\tthis.setState({\n\t\t\tratioIndex: i,\n\t\t\taspectRatio: ASPECT_RATIOS[i]\n\t\t})\n\t}\n\n\tnextObjectFit() {\n\t\tlet i = this.state.objectFitIndex + 1\n\t\tif (i >= OBJECT_FITS.length) i = 0\n\t\tthis.setState({\n\t\t\tobjectFitIndex: i,\n\t\t\tobjectFit: OBJECT_FITS[i]\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions()\n\t}\n\n\tgetAspectRatios() {\n\t\treturn this.state.displays.map(i => i.video!.videoWidth / i.video!.videoHeight)\n\t}\n\n\tgetRecommendedAspectRatioIndex() {\n\t\tconst avgRatio = this.getAspectRatios().reduce((a,b) => a + b, 0) / this.state.displays.length\n\t\tconst closestRatio = [...ASPECT_RATIOS].sort((a, b) => Math.min(a.ratio / avgRatio, avgRatio / a.ratio) - Math.min(b.ratio/avgRatio, avgRatio / b.ratio)).pop()\n\t\tconst i = ASPECT_RATIOS.findIndex(i => i.name == closestRatio!.name)\n\t\treturn i\n\t}\n\n\tsetRecommendedAspectRatio() {\n\t\tconst i = this.getRecommendedAspectRatioIndex()\n\t\tthis.setState({\n\t\t\taspectRatio: ASPECT_RATIOS[i],\n\t\t\tratioIndex: i\n\t\t})\n\t}\n\n\thandleVideoError(display:Display) {\n\t\tconst {displays, errorDisplays} = this.state\n\t\terrorDisplays.push(display)\n\t\tthis.setState({\n\t\t\tdisplays: displays.filter(i => i != display),\n\t\t\terrorDisplays\n\t\t})\n\t}\n\n\treorderDisplays(dest:EventTarget) {\n\t\tconst {displays, dragSrc} = this.state\n\t\tif (!dragSrc) return\n\t\tconst destDisplay = displays.filter(i => i.video == dest).pop() || displays[displays.length-1]\n\t\tconst si = displays.indexOf(dragSrc)\n\t\tconst tmpDisplays = [...displays.slice(0, si), ...displays.slice(si+1)]\n\t\tconst di = tmpDisplays.indexOf(destDisplay)\n\t\tconst newDisplays = [...tmpDisplays.slice(0, di+1), dragSrc, ...tmpDisplays.slice(di+1)]\n\t\tthis.setState({ displays: newDisplays })\n\t}\n\n\trender() {\n\t\tconst {displays, errorDisplays, activeDisplay, lastDisplay, showInfo, showThumbnails, showHelp, aspectRatio, objectFit} = this.state\n\t\tconst size = this.getVideoSize()\n\t\treturn <>\n\t\t\t{showInfo && lastDisplay && <div id=\"info-toggle\">\n\t\t\t\t{aspectRatio.name}<br />\n\t\t\t\tScale strategy: {objectFit}<br />\n\t\t\t\t{lastDisplay.file.name}\n\t\t\t</div>}\n\t\t\t<main ref={this.viewport}\n\t\t\t\tonDrop={e => this.reorderDisplays(e.target)}>\n\t\t\t\t{displays.length == 0 && SPLASH}\n\t\t\t\t{displays.map(i => <BDVideo size={size} objectFit={objectFit} key={i.id} display={i}\n\t\t\t\t\tshowOverlay={i == activeDisplay}\n\t\t\t\t\tshowThumbnail={showThumbnails}\n\t\t\t\t\tplaybackRate={i.playbackRate}\n\t\t\t\t\tonDrag={display => this.setState({dragSrc: display})}\n\t\t\t\t\tonMouseOver={() => this.setState({activeDisplay: i, lastDisplay: i})}\n\t\t\t\t\tonMouseOut={() => this.setState({activeDisplay: undefined})}\n\t\t\t\t\tonLoad={() => i.triggerResize && this.setRecommendedAspectRatio()}\n\t\t\t\t\tonError={() => this.handleVideoError(i)}\n\t\t\t\t\tinTime={i.in} outTime={i.out}\n\t\t\t\t/>)}\n\t\t\t</main>\n\t\t\t{errorDisplays.length > 0 && <section id=\"errors\">\n\t\t\t\t<h2>Errors</h2><ol>\n\t\t\t\t\t{errorDisplays.map((display, i) => <li key={i}>{display.file.name} ({display.file.type})</li>)}\n\t\t\t\t</ol>\n\t\t\t\t<p>Only videos supported by your web browser will play successfully.  <code>.mp4</code> and <code>.webm</code> files are good bets.</p>\n\t\t\t\t<form onSubmit={() => this.setState({errorDisplays: []})}><button>Dismiss</button></form>\n\t\t\t</section>}\n\t\t\t{showHelp && HELP}\n\t\t</>\n\t}\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}