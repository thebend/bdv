{"version":3,"sources":["BDVideo.tsx","ObjectFit.ts","AspectRatio.ts","Help.tsx","App.tsx","serviceWorker.js","index.js"],"names":["browser","navigator","userAgent","indexOf","msBrowser","VIDEO_MARGINS","edge","left","right","bottom","chrome","margins","BDVideo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","video","React","createRef","thumbnail","dragMargin","thumbnailWidth","thumbnailMargin","state","hoverThumbnail","bind","assertThisInitialized","inherits","createClass","key","value","_this$props","inTime","outTime","current","ontimeupdate","e","pastOut","currentTime","beforeIn","height","layerY","setState","thumbnailState","undefined","timelineWidth","width","videoPercentage","layerX","targetTime","duration","offsetX","timestamp","_this$props2","playbackRate","showThumbnail","rate","setIO","onmouseover","_this2","_this$props3","display","onLoad","onError","onDrag","startTime","onload","onerror","onloadeddata","onloadedmetadata","ondragstart","target","offsetY","preventDefault","onmousemove","onmouseout","_this$props4","ip","op","ix","ox","react_default","a","createElement","Fragment","IOMarker","offset","color","_this$props5","size","onMouseOver","onMouseOut","objectFit","showOverlay","assign","className","style","concat","pointerEvents","file","name","getIO","controls","autoPlay","loop","muted","src","url","ref","draggable","Component","_ref","yMargin","viewBox","diameter","cx","cy","r","fill","OBJECT_FITS","ASPECT_RATIOS","ratio","SHORTCUTS","id","DISCLAIMER","SelectInput","htmlFor","label","onChange","callback","choices","Help","map","v","i","toUpperCase","substr","objectFitCallback","aspectRatio","toString","aspectRatioCallback","parseInt","SPLASH","stopDragDrop","stopPropagation","adjustDisplayTime","adjustment","percentage","arguments","length","vid","end","diff","fullscreenElement","element","requestFullscreen","msRequestFullscreen","webkitRequestFullscreen","fsEnabled","document","fullscreenEnabled","msFullscreenEnabled","webkitFullscreenEnabled","fsExit","exitFullscreen","msExitFullscreen","webkitExitFullscreen","ErrorDisplay","errorDisplays","dismissCallback","type","onSubmit","App","viewport","globalActions","f","body","msFullscreenElement","webkitFullscreenElement","toggleFullscreen","h","showHelp","s","nextObjectFit","t","showThumbnails","x","nextDimensionRatio","displays","maxId","ratioIndex","objectFitIndex","firstBatch","window","onresize","updateDimensions","onkeydown","ev","toLowerCase","shiftKey","ctrlKey","activeDisplay","shiftDisplayActions","arrowleft","arrowright","syncPlaybackRates","ctrlDisplayActions","adjustVideoSpeed","displayActions","delete","deleteDisplay","c","addDisplayCopy","d","distributeTimes","setVideoIO","o","m","fillGrid","ondragover","ondragenter","ondragleave","ondrop","dataTransfer","droppedFiles","files","videoFiles","Array","from","filter","startsWith","newDisplays","URL","createObjectURL","triggerResize","forEach","matchingDisplays","di","orderedDisplays","toConsumableArray","slice","t1","spacing","count","additions","_","newDisplay","copyDisplay","pop","_this$state","y","bestArea","videoRatio","rows","cols","Math","ceil","floor","vx","vy","videoArea","mode","vp","clientWidth","clientHeight","activeVideo","videoWidth","videoHeight","avgRatio","getAspectRatios","reduce","b","closestRatio","sort","min","findIndex","getRecommendedAspectRatioIndex","_this$state2","push","dest","_this$state3","dragSrc","destDisplay","si","tmpDisplays","_this3","_this$state4","lastDisplay","getVideoSize","onDrop","reorderDisplays","BDVideo_BDVideo","setRecommendedAspectRatio","handleVideoError","in","out","src_Help","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iSASO,IAAMA,EALRC,UAAUC,UAAUC,QAAQ,cAAgB,EAAU,KACtDF,UAAUC,UAAUC,QAAQ,WAAa,EAAU,OAChD,SAIKC,EAAY,CAAC,OAAO,MAAMD,QAAQH,IAAY,EAErDK,EAAgB,CACrBC,KAAQ,CACPC,KAAQ,IACRC,MAAS,IACTC,OAAU,IAEXC,OAAU,CACTH,KAAQ,GACRC,MAAS,GACTC,OAAU,KAGNE,EAAqB,UAAXX,EAAsBK,EAAa,OAAaA,EAAa,KAwChEO,EAAb,SAAAC,GAQC,SAAAD,EAAYE,GAAoB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAC/BG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KARPQ,MAAQC,IAAMC,YAOkBT,EANhCU,UAAYF,IAAMC,YAMcT,EAJhCW,WAAa,GAImBX,EAHhCY,eAAiB,IAGeZ,EAFhCa,gBAAkBjB,EAAQF,OAAS,EAIlCM,EAAKc,MAAQ,GACbd,EAAKe,eAAiBf,EAAKe,eAAeC,KAApBf,OAAAgB,EAAA,EAAAhB,CAAAD,IAHSA,EARjC,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAJ,EAAAC,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAA,EAAAuB,IAAA,QAAAC,MAAA,WAcS,IAAAC,EACmBnB,KAAKJ,MAAxBwB,EADAD,EACAC,OAAQC,EADRF,EACQE,QACTjB,EAAQJ,KAAKI,MAAMkB,QACzBlB,EAAMmB,aAAe,SAAAC,GACpB,IAAMC,EAAUJ,GAAWA,EAAUjB,EAAMsB,YACrCC,EAAWP,GAAUA,EAAShB,EAAMsB,aACtCD,GAAWE,KAAUvB,EAAMsB,YAAcN,GAAU,MApB1D,CAAAH,IAAA,iBAAAC,MAAA,SAwBgBM,GACd,IAAMpB,EAAQJ,KAAKI,MAAMkB,QACzB,GAAKlB,EAEL,GAD2BA,EAAMwB,OAASJ,EAAEK,OACnB7B,KAAKU,gBAC7BV,KAAK8B,SAAS,CAACC,oBAAgBC,QADhC,CAIA,IAAMC,EAAgB7B,EAAM8B,MAAQzC,EAAQJ,KAAOI,EAAQH,MACrD6C,GAAmBX,EAAEY,OAAS3C,EAAQJ,MAAQ4C,EACpD,GAAIE,EAAkB,GAAKA,EAAkB,EAC5CnC,KAAK8B,SAAS,CAACC,oBAAgBC,QADhC,CAIA,IAAMK,EAAajC,EAAMkC,SAAWH,EACpCnC,KAAK8B,SAAS,CACbC,eAAgB,CACfQ,QAASf,EAAEY,OAAUpC,KAAKS,eAAiB,EAC3C+B,UAAWH,SA1Cf,CAAApB,IAAA,qBAAAC,MAAA,WA+CsB,IAAAuB,EACkBzC,KAAKJ,MAApC8C,EADaD,EACbC,aAAcC,EADDF,EACCE,cACfvC,EAAQJ,KAAKI,MAAMkB,QACnBsB,EAAOF,GAAgB,EAG7B,GAFAtC,EAAMsC,aAAeE,EACrB5C,KAAK6C,QACDF,GAA4B,MAAX7D,EAAiB,KAC9BiD,EAAkB/B,KAAKW,MAAvBoB,eACDxB,EAAYP,KAAKO,UAAUe,QAC7Bf,GAAawB,IAChBxB,EAAUmB,YAAcK,EAAeS,WAExCpC,EAAM0C,YAAc9C,KAAKY,oBAEzBR,EAAM0C,YAAc,OA7DvB,CAAA7B,IAAA,oBAAAC,MAAA,WAiEqB,IAAA6B,EAAA/C,KAAAgD,EACuChD,KAAKJ,MAAxDqD,EADYD,EACZC,QAASC,EADGF,EACHE,OAAQC,EADLH,EACKG,QAASC,EADdJ,EACcI,OAAQT,EADtBK,EACsBL,cACnCvC,EAAQJ,KAAKI,MAAMkB,QACzB2B,EAAQ7C,MAAQA,EACZ6C,EAAQI,UACXjD,EAAMkD,OAAS,WAAQlD,EAAMsB,YAAcuB,EAAQI,YAEnDjD,EAAMmD,QAAUJ,EAChB/C,EAAMoD,aAAe,SAAAhC,GAAC,OAAIpB,EAAMsB,YAActB,EAAMkC,SAAW,GAC/DlC,EAAMqD,iBAAmBP,GAE1B9C,EAAMsD,YAAc,SAAAlC,GACJA,EAAEmC,OACiB/B,OAASJ,EAAEoC,QACpBb,EAAKvC,WAC7BgB,EAAEqC,iBAGHT,EAAOH,IAER7C,EAAM0D,YAAcnB,GAA4B,MAAX7D,EAAkBkB,KAAKY,eAAiB,KAC7ER,EAAM2D,WAAa,SAAAvC,GAClBuB,EAAKjB,SAAS,CAACC,oBAAgBC,KAEhChC,KAAK6C,UAzFP,CAAA5B,IAAA,QAAAC,MAAA,WA4FS,IAAA8C,EACmBhE,KAAKJ,MAAxBwB,EADA4C,EACA5C,OAAQC,EADR2C,EACQ3C,QACTjB,EAAQJ,KAAKI,MAAMkB,QAEzB,GAAIF,GAAUC,EAAS,CACtB,IAAMiB,EAAWlC,EAAMkC,SACjB2B,EAAK7C,GAAU,EACf8C,EAAK7C,GAAWiB,EAChBL,EAAgB7B,EAAM8B,MAAQzC,EAAQJ,KAAOI,EAAQH,MACrD6E,EAAMF,EAAK3B,EAAYL,EACvBmC,EAAMF,EAAK5B,EAAYL,EAC7B,OAAOoC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACNH,EAAAC,EAAAC,cAACE,EAAD,CAAUC,OAAQP,EAAIQ,MAAM,SAC5BN,EAAAC,EAAAC,cAACE,EAAD,CAAUC,OAAQN,EAAIO,MAAM,aAzGhC,CAAA1D,IAAA,SAAAC,MAAA,WA8GU,IAAA0D,EAC8F5E,KAAKJ,MAApGiF,EADCD,EACDC,KAAMC,EADLF,EACKE,YAAaC,EADlBH,EACkBG,WAAY9B,EAD9B2B,EAC8B3B,QAAS+B,EADvCJ,EACuCI,UAAWC,EADlDL,EACkDK,YAAatC,EAD/DiC,EAC+DjC,cAAeD,EAD9EkC,EAC8ElC,aAC/EX,EAAkB/B,KAAKW,MAAvBoB,eAEP,OAAOsC,EAAAC,EAAAC,cAAA,MAAAzE,OAAAoF,OAAA,CAAKC,UAAU,WAAcN,EAA7B,CAAmCC,YAAaA,EAAaC,WAAYA,IAC/EV,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAiBC,MAAO,CAAClD,MAAK,GAAAmD,OAAKR,EAAK3C,MAAV,MAAqBN,OAAM,GAAAyD,OAAKR,EAAKjD,OAAV,MAAsB0D,cAAepG,EAAY,OAAS,SAAU+F,GAAW,GAAAI,OAAOpC,EAAQsC,KAAKC,MAApBH,OAA2C,GAAhB3C,EAAoB,GAAK,KAAKA,EAAa,OAC5NuC,GAAejF,KAAKyF,QACpB9C,GAAiBZ,GAAkBsC,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,EAAOC,UAAU,EAAOC,MAAM,EAAOC,OAAO,EAAMC,IAAK7C,EAAQ8C,IAAK7D,MAAOlC,KAAKS,eAAgB0E,UAAU,YAAYa,IAAKhG,KAAKO,UAAW6E,MAAO,CAAC/F,KAAM0C,EAAeQ,WAC7N8B,EAAAC,EAAAC,cAAA,QAAAzE,OAAAoF,OAAA,CAAOQ,UAAU,EAAMC,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAMC,IAAK7C,EAAQ8C,IAAKE,WAAY/G,GACzF2F,EADL,CACWmB,IAAKhG,KAAKI,MAAOgF,MAAO,CAACJ,qBAvHvCtF,EAAA,CAA6BW,IAAM6F,WAkInC,SAASzB,EAAT0B,GAAiD,IAA9BzB,EAA8ByB,EAA9BzB,OAAQC,EAAsBwB,EAAtBxB,MAEpByB,EAAU3G,EAAQF,OACxB,OAAO8E,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WAAWjD,MAFhB,GAEiCN,OAFjC,GAEmDyE,QAAO,UAC1EjB,MAAO,CAAC7F,OAAQ6G,EAAWE,EAAajH,KAAMI,EAAQJ,KAAOqF,EAAU4B,IAEvEjC,EAAAC,EAAAC,cAAA,UAAQgC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAGC,KAAM/B,KCtM7B,IAAMgC,EAAc,CAAC,UAAW,QAAS,OAAQ,cCG3CC,EAAgB,CAC5B,CACCC,MAAO,GAAG,EACVrB,KAAM,mBACJ,CACFqB,MAAO,EAAE,EACTrB,KAAM,sBACJ,CACFqB,MAAO,EACPrB,KAAM,gBACJ,CACFqB,MAAO,EAAE,GACTrB,KAAM,sBACJ,CACFqB,MAAO,KACPrB,KAAM,sBACJ,CACFqB,MAAO,KACPrB,KAAM,wBClBFsB,UAAYzC,EAAAC,EAAAC,cAAA,WAASwC,GAAG,aAC7B1C,EAAAC,EAAAC,cAAA,uBAAkBF,EAAAC,EAAAC,cAAA,UACjBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,sBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,2BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,sBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAJ,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,gBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,oBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,gBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,iBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,yBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,wBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BAAJ,YACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kCAAJ,aACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iCAAJ,iBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAJ,gBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAJ,cACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAJ,kBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAJ,uBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAJ,sBAIIyC,EAAa3C,EAAAC,EAAAC,cAAA,cAClBF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,eAArB,wMAqCD,SAAS0C,EAAYrH,GACpB,OAAOyE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACNH,EAAAC,EAAAC,cAAA,SAAO2C,QAAStH,EAAM4F,MAAO5F,EAAMuH,OACnC9C,EAAAC,EAAAC,cAAA,UAAQiB,KAAM5F,EAAM4F,KAAMtE,MAAOtB,EAAMsB,MAAOkG,SAAU,SAAA5F,GAAC,OAAI5B,EAAMyH,SAAS7F,EAAEmC,OAAOzC,SACnFtB,EAAM0H,UAYKC,MAvCR,SAAc3H,GACpB,OAAOyE,EAAAC,EAAAC,cAAA,WAASwC,GAAG,QAClB1C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,2FACAF,EAAAC,EAAAC,cAAA,WAASwC,GAAG,YACX1C,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAC0C,EAAD,CACCzB,KAAK,cAAc2B,MAAM,iBACzBjG,MAAOtB,EAAMoF,UAAWsC,QAASX,EAAYa,IAAI,SAACC,EAAGC,GAAJ,OAAUrD,EAAAC,EAAAC,cAAA,UAAQtD,IAAKyG,EAAGxG,MAAOuG,GAAIA,EAAE,GAAGE,cAAcF,EAAEG,OAAO,MAClHP,SAAU,SAAAK,GAAC,OAAI9H,EAAMiI,kBAAkBH,MAAmBrD,EAAAC,EAAAC,cAAA,WAC3DF,EAAAC,EAAAC,cAAC0C,EAAD,CACCzB,KAAK,cAAc2B,MAAM,eACzBjG,MAAO0F,EAAc3H,QAAQW,EAAMkI,aAAaC,WAChDT,QAASV,EAAcY,IAAI,SAACC,EAAGC,GAAJ,OAAUrD,EAAAC,EAAAC,cAAA,UAAQtD,IAAKyG,EAAGxG,MAAOwG,GAAID,EAAEjC,QAClE6B,SAAU,SAAAK,GAAC,OAAI9H,EAAMoI,oBAAoBpB,EAAcqB,SAASP,QAAQrD,EAAAC,EAAAC,cAAA,aAG1EuC,EACAE,ICnDGkB,EAAS7D,EAAAC,EAAAC,cAAA,WAASwC,GAAG,UAC1B1C,EAAAC,EAAAC,cAAA,kLACAF,EAAAC,EAAAC,cAAA,iMACAF,EAAAC,EAAAC,cAAA,gJACAF,EAAAC,EAAAC,cAAA,0HAKD,SAAS4D,EAAa3G,GACrBA,EAAEqC,iBACFrC,EAAE4G,kBAQH,SAASC,EAAkBpF,EAAiBqF,GAA+C,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAzG,IAAAwG,UAAA,IAAAA,UAAA,GACpFE,EAAMzF,EAAQ7C,MACpB,GAAKsI,EAAL,CACA,IAAMC,EAAMD,EAAIpG,SACZiG,IACHD,GAAaK,GAEd,IAAMC,EAAOD,EAAMD,EAAIhH,YAEtBgH,EAAIhH,YADD4G,EAAaM,EACEN,EAAaM,EAEbF,EAAIhH,YAAc4G,GA8BtC,SAASO,EAAkBC,IACzBA,EAAQC,mBAAsBD,EAAgBE,qBAAwBF,EAAgBG,yBAAyB9I,KAAK2I,GAGtH,IAAMI,EAAYC,SAASC,mBAAsBD,SAAiBE,qBAAwBF,SAAiBG,wBACrGC,GAAUJ,SAASK,gBAAmBL,SAAiBM,kBAAqBN,SAAiBO,sBAAsB7I,KAAKsI,UAsU9H,SAASQ,EAATxD,GAA0E,IAAnDyD,EAAmDzD,EAAnDyD,cAAeC,EAAoC1D,EAApC0D,gBACrC,OAAOxF,EAAAC,EAAAC,cAAA,WAASwC,GAAG,UAClB1C,EAAAC,EAAAC,cAAA,oBAAeF,EAAAC,EAAAC,cAAA,UACbqF,EAAcpC,IAAI,SAACvE,EAASyE,GAAV,OAAgBrD,EAAAC,EAAAC,cAAA,MAAItD,IAAKyG,GAAIzE,EAAQsC,KAAKC,KAA1B,KAAkCvC,EAAQsC,KAAKuE,KAA/C,QAEpCzF,EAAAC,EAAAC,cAAA,+EAAsEF,EAAAC,EAAAC,cAAA,oBAAtE,QAA4FF,EAAAC,EAAAC,cAAA,qBAA5F,yBACAF,EAAAC,EAAAC,cAAA,QAAMwF,SAAUF,GAAiBxF,EAAAC,EAAAC,cAAA,2BAIpByF,kBArRd,SAAAA,EAAYpK,GAAU,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgK,IACrBnK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkK,GAAA7J,KAAAH,KAAMJ,KAhDPqK,SAAW5J,IAAMC,YA+CKT,EA9CtBqK,cAAgB,CACfC,EAAK,kBAbP,WAA8D,IAApCxG,EAAoC6E,UAAAC,OAAA,QAAAzG,IAAAwG,UAAA,GAAAA,UAAA,GAAfW,SAASiB,KAClDlB,IACaC,SAASN,mBAAsBM,SAAiBkB,qBAAwBlB,SAAiBmB,wBAE1Gf,IAEAV,EAAkBlF,IAOP4G,IACXC,EAAK,kBAAM3K,EAAKiC,SAAS,CAAC2I,UAAW5K,EAAKc,MAAM8J,YAChDC,EAAK,kBAAM7K,EAAK8K,iBAChBC,EAAK,kBAAM/K,EAAKiC,SAAS,CAAC+I,gBAAiBhL,EAAKc,MAAMkK,kBACtDC,EAAK,kBAAMjL,EAAKkL,uBA2ChBlL,EAAKc,MAAQ,CACZ8J,UAAU,EACVI,gBAAgB,EAChBG,SAAU,GACVC,MAAO,EACPC,WAAY,EACZpD,YAAalB,EAAc,GAC3BuE,eAAgB,EAChBnG,UAAW2B,EAAY,GACvByE,YAAY,EACZxB,cAAe,IAGhByB,OAAOC,SAAW,kBAAMzL,EAAK0L,oBAE7BF,OAAOG,UAAY,SAAAC,GAClB,IAAMxK,EAAMwK,EAAGxK,IAAIyK,cACnB,GAAIzK,KAAOpB,EAAKqK,gBAAkBuB,EAAGE,WAAaF,EAAGG,QACpD/L,EAAKqK,cAAcjJ,SADpB,CAFwB,IAOjB4K,EAAiBhM,EAAKc,MAAtBkL,cACP,GAAKA,EAEL,GAAIJ,EAAGE,SAAU,CAChB,IAAMG,EAAsB,CAC3BC,UAAa,kBAAM1D,EAAkBwD,GAAgB,IAAI,IACzDG,WAAc,kBAAM3D,EAAkBwD,EAAe,IAAI,IACzDnB,EAAK,kBAAM7K,EAAKoM,kBAAkBJ,EAAcnJ,eAChDyH,EAAK,kBAAMtB,EAAkBgD,EAAczL,SAE5Ca,KAAO6K,GAAuBA,EAAoB7K,UAC5C,GAAIwK,EAAGG,QAAS,CACtB,IAAMM,EAAqB,CAC1BH,UAAa,kBAAMlM,EAAKsM,iBAAiBN,EAAe,KACxDG,WAAc,kBAAMnM,EAAKsM,iBAAiBN,EAAe,KAE1D5K,KAAOiL,GAAsBA,EAAmBjL,SAC1C,CACN,IAAMmL,EAAiB,CACtBC,OAAU,kBAAMxM,EAAKyM,cAAcT,IACnCU,EAAK,kBAAM1M,EAAK2M,eAAeX,IAC/BY,EAAK,kBAAM5M,EAAK6M,gBAAgBb,IAChCrK,EAAK,kBAAM3B,EAAKiC,SAAS,CAACkJ,SAAU,CAACa,MACrCnE,EAAK,kBAAM7H,EAAK8M,WAAWd,EAAe,OAC1Ce,EAAK,kBAAM/M,EAAK8M,WAAWd,EAAe,QAC1CgB,EAAK,WA/JV,IAAoBzM,KA+JOyL,EAAczL,SA7JxCA,EAAMyF,OAASzF,EAAMyF,QA8JjBY,EAAK,kBAAM5G,EAAKyM,cAAcT,IAC9BE,UAAa,kBAAM1D,EAAkBwD,GAAgB,KACrDG,WAAc,kBAAM3D,EAAkBwD,EAAe,MAEtD5K,KAAOmL,GAAkBA,EAAenL,KACpCA,GAAO,KAAOA,GAAO,MACxBpB,EAAKiN,SAASjB,EAAe5D,SAAShH,IACtCpB,EAAK6M,gBAAgBb,OAKxB1C,SAAS4D,WAAa5E,EACtBgB,SAAS6D,YAAc7E,EACvBgB,SAAS8D,YAAc9E,EAEvBgB,SAAS+D,OAAS,SAAC1L,GAElB,GADA2G,EAAa3G,GACRA,EAAE2L,aAAP,CAFkC,IAG3B/B,EAAcvL,EAAKc,MAAnByK,WACDgC,EAAe5L,EAAE2L,aAAaE,MAC9BC,EAAaC,MAAMC,KAAKJ,GAAcK,OAAO,SAAA/F,GAAC,OAAIA,EAAEoC,KAAK4D,WAAW,YACtEzC,EAAQpL,EAAKc,MAAMsK,MACjB0C,EAAcL,EAAW9F,IAAI,SAAAjC,GAAI,MAAK,CAC3CwB,KAAMkE,EACN1F,OACAQ,IAAK6H,IAAIC,gBAAgBtI,GACzBuI,cAAe1C,EACf1I,aAAc,KAGf7C,EAAKiC,SAAS,CACbkJ,SAAUnL,EAAKc,MAAMqK,SAAS3F,OAAOsI,GACrC1C,QACAG,YAAY,EAEZX,SAAU5K,EAAKc,MAAM8J,UAAiC,GAArB6C,EAAW7E,WAtFzB5I,iFAtCJ6C,GAAqB,IAC/BsI,EAAYhL,KAAKW,MAAjBqK,SACPA,EAAS+C,QAAQ,SAAArG,GAAC,OAAIA,EAAEhF,aAAeA,IACvC1C,KAAK8B,SAAS,CAACkJ,qDAGA/H,GAAiB,IAE1B+K,EADahO,KAAKW,MAAjBqK,SAC2ByC,OAAO,SAAA/F,GAAC,OAAIA,EAAEnC,MAAQtC,EAAQsC,OAC1D0I,EAAKD,EAAiB/O,QAAQgE,GAE9BiL,EAAe,CAAIjL,GAAJoC,OAAAvF,OAAAqO,EAAA,EAAArO,CAAgBkO,EAAiBI,MAAMH,EAAG,IAA1CnO,OAAAqO,EAAA,EAAArO,CAAiDkO,EAAiBI,MAAM,EAAGH,KAE1FI,EAAKpL,EAAQ7C,MAAOsB,YACpBY,EAAWW,EAAQ7C,MAAOkC,SAC1BgM,EAAUhM,EAAW4L,EAAgBzF,OAC3CyF,EAAgBH,QAAQ,SAACtG,EAAGC,GAC3B,IAAMrF,EAAagM,EAAMC,EAAU5G,EAEnCD,EAAErH,MAAOsB,YAAcW,EAAaC,EAAWD,EAAaA,EAAaC,qCAIlEW,EAAiBsL,GAAc,IAAAxL,EAAA/C,KAChCgL,EAAYhL,KAAKW,MAAjBqK,SACDwD,EAAYD,EAAQvD,EAASvC,OACnC,KAAI+F,EAAY,GAAhB,CACA,IAAMb,EAAc7N,OAAAqO,EAAA,EAAArO,CAAIyN,MAAMiB,IAAYhH,IAAI,SAACiH,EAAG/G,GACjD,IAAMgH,EAAa3L,EAAK4L,YAAY1L,GAEpC,OADAyL,EAAW3H,IAAMW,EACVgH,IAER1O,KAAK8B,SAAS,CACbkJ,SAAUA,EAAS3F,OAAOsI,GAC1B1C,MAAO0C,EAAYiB,MAAO7H,8DA+Fb,IAAA8H,EAC4B7O,KAAKW,MAAxCqK,EADO6D,EACP7D,SAAUlD,EADH+G,EACG/G,YAAamC,EADhB4E,EACgB5E,SAE9B,IAAKA,EAAU,MAAO,CAAC/H,MAAO,EAAGN,OAAQ,GAEzC,GAAIoJ,EAASvC,OAAS,EAAG,MAAO,CAACvG,MAAO+H,EAASa,EAAGlJ,OAAQqI,EAAS6E,GAKrE,IAFA,IAAIC,EAAW,EAAG7M,EAAQ,EAAGN,EAAS,EAChCoN,EAAalH,EAAYjB,MACtBoI,EAAO,EAAGA,GAAQjE,EAASvC,OAAQwG,IAAQ,CAEnD,IAAMC,EAAOC,KAAKC,KAAKpE,EAASvC,OAASwG,GAEnCnE,EAAIqE,KAAKE,MAAMpF,EAASa,EAAIoE,GAC5BJ,EAAIK,KAAKE,MAAMpF,EAAS6E,EAAIG,GAE9BK,EAAKxE,EAAGyE,EAAKT,EACbE,EAAalE,EAAEgE,EAClBS,EAAKD,EAAKN,EAEVM,EAAKC,EAAKP,EAEX,IAAMQ,EAAYF,EAAKC,EAEnBC,EAAYT,IAEhBA,EAAWS,EACXtN,EAAQ4I,EAAGlJ,EAASkN,GAGrB,MAAO,CAAC5M,QAAON,mDAGCqB,EAAiBqF,GACjCrF,EAAQP,aAAeO,EAAQP,aAAe4F,EAC9CtI,KAAK8B,SAAS,CAACkJ,SAAUhL,KAAKW,MAAMqK,8CAG1B/H,EAAiBwM,GACvBA,KAAQxM,SACJA,EAAQwM,GAEfxM,EAAQwM,GAAQxM,EAAQ7C,MAAOsB,YAGhC1B,KAAK8B,SAAS,CAACkJ,SAAUhL,KAAKW,MAAMqK,sDAIpC,IAAM0E,EAAK1P,KAAKiK,SAAS3I,QACnB2I,EAAW,CAACa,EAAG4E,EAAGC,YAAab,EAAGY,EAAGE,cAC3C5P,KAAK8B,SAAS,CAACmI,iDAGJhH,GACX,IAAM4M,EAAc5M,EAAQ7C,MACtB6K,EAAQjL,KAAKW,MAAMsK,MAAQ,EAC7B5H,EAAYwM,EAAYnO,YAAc,GAU1C,OATI2B,EAAYwM,EAAYvN,WAAUe,EAAY,GAC/B,CAClB0D,GAAIkE,EACJ1F,KAAMtC,EAAQsC,KACdQ,IAAK9C,EAAQ8C,IACbrD,aAAcO,EAAQP,aACtBW,YACAyK,eAAe,0CAKF7K,GACd,IAAMyL,EAAa1O,KAAK2O,YAAY1L,GACpCjD,KAAK8B,SAAS,CACbmJ,MAAOyD,EAAW3H,GAClBiE,SAAUhL,KAAKW,MAAMqK,SAAS3F,OAAOqJ,2CAIzBzL,GACbjD,KAAK8B,SAAS,CAAEkJ,SAAUhL,KAAKW,MAAMqK,SAASyC,OAAO,SAAA/F,GAAC,OAAIA,GAAKzE,mDAI/D,IAAIyE,EAAI1H,KAAKW,MAAMuK,WAAa,EAC5BxD,GAAKd,EAAc6B,SAAQf,EAAI,GACnC1H,KAAK8B,SAAS,CACboJ,WAAYxD,EACZI,YAAalB,EAAcc,6CAK5B,IAAIA,EAAI1H,KAAKW,MAAMwK,eAAiB,EAChCzD,GAAKf,EAAY8B,SAAQf,EAAI,GACjC1H,KAAK8B,SAAS,CACbqJ,eAAgBzD,EAChB1C,UAAW2B,EAAYe,iDAKxB1H,KAAKuL,6DAIL,OAAOvL,KAAKW,MAAMqK,SAASxD,IAAI,SAAAE,GAAC,OAAIA,EAAEtH,MAAO0P,WAAapI,EAAEtH,MAAO2P,uEAInE,IAAMC,EAAWhQ,KAAKiQ,kBAAkBC,OAAO,SAAC5L,EAAE6L,GAAH,OAAS7L,EAAI6L,GAAG,GAAKnQ,KAAKW,MAAMqK,SAASvC,OAClF2H,EAAetQ,OAAAqO,EAAA,EAAArO,CAAI8G,GAAeyJ,KAAK,SAAC/L,EAAG6L,GAAJ,OAAUhB,KAAKmB,IAAIhM,EAAEuC,MAAQmJ,EAAUA,EAAW1L,EAAEuC,OAASsI,KAAKmB,IAAIH,EAAEtJ,MAAMmJ,EAAUA,EAAWG,EAAEtJ,SAAQ+H,MAE1J,OADUhI,EAAc2J,UAAU,SAAA7I,GAAC,OAAIA,EAAElC,MAAQ4K,EAAc5K,2DAK/D,IAAMkC,EAAI1H,KAAKwQ,iCACfxQ,KAAK8B,SAAS,CACbgG,YAAalB,EAAcc,GAC3BwD,WAAYxD,6CAIGzE,GAAiB,IAAAwN,EACCzQ,KAAKW,MAAhCqK,EAD0ByF,EAC1BzF,SAAUpB,EADgB6G,EAChB7G,cACjBA,EAAc8G,KAAKzN,GACnBjD,KAAK8B,SAAS,CACbkJ,SAAUA,EAASyC,OAAO,SAAA/F,GAAC,OAAIA,GAAKzE,IACpC2G,0DAIc+G,GAAkB,IAAAC,EACL5Q,KAAKW,MAA1BqK,EAD0B4F,EAC1B5F,SAAU6F,EADgBD,EAChBC,QACjB,GAAKA,EAAL,CACA,IAAMC,EAAc9F,EAASyC,OAAO,SAAA/F,GAAC,OAAIA,EAAEtH,OAASuQ,IAAM/B,OAAS5D,EAASA,EAASvC,OAAO,GACtFsI,EAAK/F,EAAS/L,QAAQ4R,GACtBG,EAAW,GAAA3L,OAAAvF,OAAAqO,EAAA,EAAArO,CAAOkL,EAASoD,MAAM,EAAG2C,IAAzBjR,OAAAqO,EAAA,EAAArO,CAAiCkL,EAASoD,MAAM2C,EAAG,KAC9D9C,EAAK+C,EAAY/R,QAAQ6R,GACzBnD,EAAW,GAAAtI,OAAAvF,OAAAqO,EAAA,EAAArO,CAAOkR,EAAY5C,MAAM,EAAGH,EAAG,IAA/B,CAAmC4C,GAAnC/Q,OAAAqO,EAAA,EAAArO,CAA+CkR,EAAY5C,MAAMH,EAAG,KACrFjO,KAAK8B,SAAS,CAAEkJ,SAAU2C,sCAGlB,IAAAsD,EAAAjR,KAAAkR,EACwGlR,KAAKW,MAA9GqK,EADCkG,EACDlG,SAAUpB,EADTsH,EACStH,cAAeiC,EADxBqF,EACwBrF,cAA4BhB,GADpDqG,EACuCC,YADvCD,EACoDrG,gBAAgBJ,EADpEyG,EACoEzG,SAAU3C,EAD9EoJ,EAC8EpJ,YAAa9C,EAD3FkM,EAC2FlM,UAC7FH,EAAO7E,KAAKoR,eAClB,OAAO/M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACNH,EAAAC,EAAAC,cAAA,QAAMyB,IAAKhG,KAAKiK,SACfoH,OAAQ,SAAA7P,GAAC,OAAIyP,EAAKK,gBAAgB9P,EAAEmC,UAChB,GAAnBqH,EAASvC,QAAeP,EACxB8C,EAASxD,IAAI,SAAAE,GAAC,OAAIrD,EAAAC,EAAAC,cAACgN,EAAD,CAAS1M,KAAMA,EAAMG,UAAWA,EAAW/D,IAAKyG,EAAEX,GAAI9D,QAASyE,EACjFzC,YAAayC,GAAKmE,EAClBlJ,cAAekI,EACfnI,aAAcgF,EAAEhF,aAChBU,OAAQ,SAAAH,GAAO,OAAIgO,EAAKnP,SAAS,CAAC+O,QAAS5N,KAC3C6B,YAAa,kBAAMmM,EAAKnP,SAAS,CAAC+J,cAAenE,EAAGyJ,YAAazJ,KACjE3C,WAAY,kBAAMkM,EAAKnP,SAAS,CAAC+J,mBAAe7J,KAChDkB,OAAQ,kBAAMwE,EAAEoG,eAAiBmD,EAAKO,6BACtCrO,QAAS,kBAAM8N,EAAKQ,iBAAiB/J,IACrCtG,OAAQsG,EAAEgK,GAAIrQ,QAASqG,EAAEiK,SAG1B/H,EAAcnB,OAAS,GAAKpE,EAAAC,EAAAC,cAACoF,EAAD,CAAcC,cAAeA,EAAeC,gBAAiB,kBAAMoH,EAAKnP,SAAS,CAAC8H,cAAe,QAC7Ha,GAAYpG,EAAAC,EAAAC,cAACqN,EAAD9R,OAAAoF,OACR,CAAC4C,cAAa9C,aADN,CAEZgD,oBAAqB,SAAAF,GAAW,OAAImJ,EAAKnP,SAAS,CAACgG,iBACnDD,kBAAmB,SAAA7C,GAAS,OAAIiM,EAAKnP,SAAS,CAACkD,0BAlTjC3E,IAAM6F,WC9ElB2L,EAAcC,QACW,cAA7BzG,OAAO0G,SAASC,UAEe,UAA7B3G,OAAO0G,SAASC,UAEhB3G,OAAO0G,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BrT,UAAUsT,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/R,QACf5B,UAAUsT,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAOhP,EAAAC,EAAAC,cAAC+O,EAAD,MAASnK,SAASoK,eAAe,SDiB1C,SAAkBnB,GACvB,GAA6C,kBAAmBrT,UAAW,CAGzE,GADkB,IAAI6O,IAAI4F,GAAwBnI,OAAO0G,SAAS0B,MACpDC,SAAWrI,OAAO0G,SAAS2B,OAIvC,OAGFrI,OAAOsI,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAA9M,OAAMmO,GAAN,sBAEP3B,GAgEV,SAAiCM,EAAOC,GAEtCwB,MAAMzB,GACHI,KAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAY7U,QAAQ,cAG5CF,UAAUsT,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7BlH,OAAO0G,SAASqC,aAKpBlC,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFAsB,CAAwBlC,EAAOC,GAI/BrT,UAAUsT,cAAc6B,MAAM3B,KAAK,WACjCO,QAAQC,IACN,gHAMJb,EAAgBC,EAAOC,MCvC/BC","file":"static/js/main.3d6dfba5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {ObjectFit} from './ObjectFit'\r\n\r\nfunction getBrowser() {\r\n\tif (navigator.userAgent.indexOf(' Trident/') > -1) return 'IE'\r\n\tif (navigator.userAgent.indexOf(' Edge/') > -1) return 'Edge'\r\n\treturn 'Chrome'\r\n}\r\n\r\nexport const browser = getBrowser()\r\nexport const msBrowser = [\"Edge\",\"IE\"].indexOf(browser) > -1\r\n\r\nconst VIDEO_MARGINS = {\r\n\t\"edge\": {\r\n\t\t\"left\": 116,\r\n\t\t\"right\": 220,\r\n\t\t\"bottom\": 24\r\n\t},\r\n\t\"chrome\": {\r\n\t\t\"left\": 24,\r\n\t\t\"right\": 24,\r\n\t\t\"bottom\": 16\r\n\t}\r\n}\r\nconst margins = browser == \"Chrome\" ? VIDEO_MARGINS[\"chrome\"] : VIDEO_MARGINS[\"edge\"]\r\n\r\nexport interface Display {\r\n\tid:number,\r\n\tfile:File,\r\n\turl:string,\r\n\tstartTime?:number,\r\n\tin?:number,\r\n\tout?:number,\r\n\tvideo?:HTMLVideoElement,\r\n\ttriggerResize:boolean,\r\n\tplaybackRate:number\r\n}\r\n\r\ninterface BDVideoProps {\r\n\tdisplay:Display,\r\n\tobjectFit:ObjectFit,\r\n\tsize: {\r\n\t\twidth:number,\r\n\t\theight:number\r\n\t},\r\n\tshowOverlay:boolean,\r\n\tshowThumbnail:boolean,\r\n\tinTime?:number,\r\n\toutTime?:number,\r\n\tplaybackRate:number,\r\n\tonMouseOver:()=>void,\r\n\tonMouseOut:()=>void,\r\n\tonLoad:()=>void\r\n\tonError:()=>void\r\n\tonDrag:(display:Display)=>void\r\n}\r\n\r\ninterface BDVideoState {\r\n\tthumbnailState?:{\r\n\t\toffsetX:number,\r\n\t\ttimestamp:number\r\n\t}\r\n}\r\n\r\nexport class BDVideo extends React.Component<BDVideoProps, BDVideoState> {\r\n\tvideo = React.createRef<HTMLVideoElement>()\r\n\tthumbnail = React.createRef<HTMLVideoElement>()\r\n\r\n\tdragMargin = 80\r\n\tthumbnailWidth = 196\r\n\tthumbnailMargin = margins.bottom + 8\r\n\r\n\tconstructor(props:BDVideoProps) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {}\r\n\t\tthis.hoverThumbnail = this.hoverThumbnail.bind(this)\r\n\t}\r\n\r\n\tsetIO() {\r\n\t\tconst {inTime, outTime} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tvideo.ontimeupdate = e => {\r\n\t\t\tconst pastOut = outTime && outTime < video.currentTime\r\n\t\t\tconst beforeIn = inTime && inTime > video.currentTime\r\n\t\t\tif (pastOut || beforeIn) video.currentTime = inTime || 0\r\n\t\t}\r\n\t}\r\n\r\n\thoverThumbnail(e:MouseEvent) {\r\n\t\tconst video = this.video.current\r\n\t\tif (!video) return\r\n\t\tconst distanceFromBottom = video.height - e.layerY\r\n\t\tif (distanceFromBottom > this.thumbnailMargin) {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst timelineWidth = video.width - margins.left - margins.right\r\n\t\tconst videoPercentage = (e.layerX - margins.left) / timelineWidth \r\n\t\tif (videoPercentage < 0 || videoPercentage > 1) {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst targetTime = video.duration * videoPercentage\r\n\t\tthis.setState({\r\n\t\t\tthumbnailState: {\r\n\t\t\t\toffsetX: e.layerX - (this.thumbnailWidth / 2),\r\n\t\t\t\ttimestamp: targetTime\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst {playbackRate, showThumbnail} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tconst rate = playbackRate || 1\r\n\t\tvideo.playbackRate = rate\r\n\t\tthis.setIO()\r\n\t\tif (showThumbnail && browser != 'IE') {\r\n\t\t\tconst {thumbnailState} = this.state\r\n\t\t\tconst thumbnail = this.thumbnail.current\r\n\t\t\tif (thumbnail && thumbnailState) {\r\n\t\t\t\tthumbnail.currentTime = thumbnailState.timestamp\r\n\t\t\t}\r\n\t\t\tvideo.onmouseover = this.hoverThumbnail\r\n\t\t} else {\r\n\t\t\tvideo.onmouseover = null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst {display, onLoad, onError, onDrag, showThumbnail} = this.props\r\n\t\tconst video = this.video.current!\r\n\t\tdisplay.video = video\r\n\t\tif (display.startTime) {\r\n\t\t\tvideo.onload = () => { video.currentTime = display.startTime! }\r\n\t\t} else {\r\n\t\t\tvideo.onerror = onError\r\n\t\t\tvideo.onloadeddata = e => video.currentTime = video.duration / 2\r\n\t\t\tvideo.onloadedmetadata = onLoad\r\n\t\t}\r\n\t\tvideo.ondragstart = e => {\r\n\t\t\tconst target = e.target! as HTMLVideoElement\r\n\t\t\tconst distanceFromBottom = target.height - e.offsetY\r\n\t\t\tif (distanceFromBottom < this.dragMargin) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tonDrag(display)\r\n\t\t}\r\n\t\tvideo.onmousemove = showThumbnail && browser != 'IE' ? this.hoverThumbnail : null\r\n\t\tvideo.onmouseout = e => {\r\n\t\t\tthis.setState({thumbnailState: undefined})\r\n\t\t}\r\n\t\tthis.setIO()\r\n\t}\r\n\r\n\tgetIO() {\r\n\t\tconst {inTime, outTime} = this.props\r\n\t\tconst video = this.video.current!\r\n\r\n\t\tif (inTime || outTime) {\r\n\t\t\tconst duration = video.duration\r\n\t\t\tconst ip = inTime || 0\r\n\t\t\tconst op = outTime || duration\r\n\t\t\tconst timelineWidth = video.width - margins.left - margins.right\r\n\t\t\tconst ix = (ip / duration) * timelineWidth\r\n\t\t\tconst ox = (op / duration) * timelineWidth\r\n\t\t\treturn <>\r\n\t\t\t\t<IOMarker offset={ix} color=\"gold\" />\r\n\t\t\t\t<IOMarker offset={ox} color=\"gold\" />\r\n\t\t\t</>\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {size, onMouseOver, onMouseOut, display, objectFit, showOverlay, showThumbnail, playbackRate} = this.props\r\n\t\tconst {thumbnailState} = this.state\r\n\r\n\t\treturn <div className=\"display\" {...size} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\r\n\t\t\t<div className=\"display-border\" style={{width: `${size.width}px`, height: `${size.height}px`, pointerEvents: msBrowser ? 'none' : 'auto'}}>{showOverlay && `${display.file.name}${playbackRate == 1 ? \"\" : \" (\"+playbackRate+\"x)\"}`}</div>\r\n\t\t\t{showOverlay && this.getIO()}\r\n\t\t\t{showThumbnail && thumbnailState && <video controls={false} autoPlay={false} loop={false} muted={true} src={display.url} width={this.thumbnailWidth} className=\"thumbnail\" ref={this.thumbnail} style={{left: thumbnailState.offsetX}} />}\r\n\t\t\t<video controls={true} autoPlay={true} loop={true} muted={true} src={display.url} draggable={!msBrowser}\r\n\t\t\t\t{...size} ref={this.video} style={{objectFit}}\r\n\t\t\t\t// title={display.file.name} // causes hover to display title which gets in the way\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\ninterface IOMarkerProps {\r\n\toffset:number,\r\n\tcolor:string\r\n}\r\nfunction IOMarker({offset, color}:IOMarkerProps) {\r\n\tconst diameter = 10\r\n\tconst yMargin = margins.bottom\r\n\treturn <svg className=\"iomarker\" width={diameter} height={diameter} viewBox={`0 0 2 2`}\r\n\t\tstyle={{bottom: yMargin + (diameter/2), left: margins.left + offset - (diameter/2)}}\r\n\t>\r\n\t\t<circle cx={1} cy={1} r={1} fill={color} />\r\n\t</svg>\r\n}\r\n","// TODO: fix this TypeScript hack\r\nexport type ObjectFit = \"fill\"|\"contain\"|\"cover\"|\"scale-down\"\r\nexport const OBJECT_FITS = ['contain', 'cover', 'fill', 'scale-down'] as ObjectFit[]","export interface AspectRatio {\r\n\tratio:number,\r\n\tname:string\r\n}\r\n\r\nexport const ASPECT_RATIOS = [\r\n\t{\r\n\t\tratio: 16/9,\r\n\t\tname: \"16:9 (High Def)\"\r\n\t}, {\r\n\t\tratio: 4/3,\r\n\t\tname: \"4:3 (Standard Def)\"\r\n\t}, {\r\n\t\tratio: 1,\r\n\t\tname: \"1:1 (Square)\",\r\n\t}, {\r\n\t\tratio: 9/16,\r\n\t\tname: \"9:16 (Vertical HD)\"\r\n\t}, {\r\n\t\tratio: 1.85,\r\n\t\tname: \"1.85:1 (Cinematic)\"\r\n\t}, {\r\n\t\tratio: 2.35,\r\n\t\tname: \"2.35:1 (Anamorphic)\"\r\n\t}\r\n]","import React from 'react'\r\nimport './Help.css'\r\nimport {ObjectFit, OBJECT_FITS} from './ObjectFit'\r\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\r\n\r\nconst SHORTCUTS = <section id=\"shortcuts\">\r\n\t<h2>Shortcuts</h2><ol>\r\n\t\t<li><em>C:</em> Clone video (+1m)</li>\r\n\t\t<li><em>D:</em> Distribute times</li>\r\n\t\t<li><em>E:</em> Remove everything else</li>\r\n\t\t<li><em>F:</em> Toggle fullscreen</li>\r\n\t\t<li><em>Shift+F:</em> Fullscreen video</li>\r\n\t\t<li><em>H:</em> Toggle help</li>\r\n\t\t<li><em>I:</em> Toggle in point</li>\r\n\t\t<li><em>O:</em> Toggle out point</li>\r\n\t\t<li><em>M:</em> Toggle mute</li>\r\n\t\t<li><em>R:</em> Remove video</li>\r\n\t\t<li><em>S:</em> Change video scaling</li>\r\n\t\t<li><em>X:</em> Change aspect ratio</li>\r\n\t\t<li><em>← →:</em> Skip 1m</li>\r\n\t\t<li><em>Shift ← →:</em> Skip 10%</li>\r\n\t\t<li><em>Ctrl ← →:</em> Change speed</li>\r\n\t\t<li><em>Shift+S</em> Sync speeds</li>\r\n\t\t<li><em>Ctrl+W:</em> Close tab</li>\r\n\t\t<li><em>O,O:</em> Restart video</li>\r\n\t\t<li><em>2-9:</em> Fill 2-9 size grid</li>\r\n\t\t<li><em>Drag+Drop:</em> Reorder videos</li>\r\n\t</ol>\r\n</section>\r\n\r\nconst DISCLAIMER = <footer>\r\n\t<h2>Privacy Disclaimer</h2>\r\n\t<p>This tool records <b>no</b> filenames, screen grabs, or any other methods of identifying the actual contents of any video.  Only metadata about a video's format (codec, file size, resolution, and duration) may be recorded.</p>\r\n</footer>\r\n\r\ninterface HelpSettingsProps {\r\n\tobjectFit:ObjectFit,\r\n\tobjectFitCallback:(objectFit:ObjectFit)=>void,\r\n\taspectRatio:AspectRatio,\r\n\taspectRatioCallback:(aspectRatio:AspectRatio)=>void\r\n}\r\n\r\nfunction getAR(aspectRatio:AspectRatio) {\r\n\treturn `${aspectRatio.ratio.toFixed(2)} / ${aspectRatio.name}`\r\n}\r\n\r\nexport function Help(props:HelpSettingsProps) {\r\n\treturn <section id=\"help\">\r\n\t\t<h2>Usage</h2>\r\n\t\t<p>Drag and drop any number of videos to auto-play in an optimally arranged grid.</p>\r\n\t\t<section id=\"settings\">\r\n\t\t\t<h2>Settings</h2>\r\n\t\t\t<form>\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tname=\"objectScale\" label=\"Video Fit/Fill\"\r\n\t\t\t\t\tvalue={props.objectFit} choices={OBJECT_FITS.map((v, i) => <option key={i} value={v}>{v[0].toUpperCase()+v.substr(1)}</option>)}\r\n\t\t\t\t\tcallback={i => props.objectFitCallback(i as ObjectFit)} /><br />\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tname=\"aspectRatio\" label=\"Aspect Ratio\"\r\n\t\t\t\t\tvalue={ASPECT_RATIOS.indexOf(props.aspectRatio).toString()}\r\n\t\t\t\t\tchoices={ASPECT_RATIOS.map((v, i) => <option key={i} value={i}>{v.name}</option>)}\r\n\t\t\t\t\tcallback={i => props.aspectRatioCallback(ASPECT_RATIOS[parseInt(i)])} /><br />\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t\t{SHORTCUTS}\r\n\t\t{DISCLAIMER}\r\n\t</section>\r\n}\r\n\r\nfunction SelectInput(props:{name:string, label:string, value:string, choices:JSX.Element[], callback:(val:string)=>void}) {\r\n\treturn <>\r\n\t\t<label htmlFor={props.name}>{props.label}</label>\r\n\t\t<select name={props.name} value={props.value} onChange={e => props.callback(e.target.value)}>\r\n\t\t\t{props.choices}\r\n\t\t</select>\r\n\t</>\r\n}\r\n\r\nfunction NumInput(props:{value:number, name:string, label:string, callback:(num:number)=>void}) {\r\n\treturn <>\r\n\t\t<label htmlFor={props.name}>{props.label}</label>\r\n\t\t<input type=\"number\" min={0} maxLength={3} name={props.name} value={props.value} onChange={e => props.callback(parseFloat(e.target.value))} />\r\n\t</>\r\n}\r\n\r\nexport default Help","// TODO: import only required polyfills\n// import 'react-app-polyfill/ie11'\nimport '@babel/polyfill'\n// import 'core-js/modules/es6.array.from'\nimport React from 'react'\nimport './App.css'\nimport { BDVideo, Display } from './BDVideo'\nimport { ObjectFit, OBJECT_FITS } from './ObjectFit'\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\nimport Help from './Help'\n\n// TODO: refence react as third party library on cdn?\n\n// TODO: add logo\nconst SPLASH = <section id=\"splash\">\n\t<p>Auto-play any number of videos in an optimally arranged grid with simple drag-and-drop.  Videos start half-way in and loop, ensuring immediate, continuous immersion.</p>\n\t<p>Find your favourite moments quickly with thumbnail scrubbing and keyboard shortcuts to jump ahead in time 1m (→) or 10% (Shift →), or adjust playback speed (Ctrl →).</p>\n\t<p>Use shortcut keys to rapidly (c)opy or (r)emove displays, set (i)n/(o)ut loop points, (f)ullscreen the display, toggle (m)ute, etc.</p>\n\t<p>Great for scouring surveillance footage, finding the best highlights from your last gaming stream, and more!</p>\n\t{/* <img src=\"clipart/surveillance.jpg\" alt=\"Surveillance\" />\n\t<img src=\"clipart/television.jpg\" alt=\"Television\" /> */}\n</section>\n\nfunction stopDragDrop(e:Event) {\n\te.preventDefault()\n\te.stopPropagation()\n}\n\nfunction toggleMute(video?:HTMLVideoElement) {\n\tif (!video) return\n\tvideo.muted = !video.muted\n}\n\nfunction adjustDisplayTime(display:Display, adjustment:number, percentage:boolean = false) {\n\tconst vid = display.video\n\tif (!vid) return\n\tconst end = vid.duration\n\tif (percentage) {\n\t\tadjustment = end * adjustment\n\t}\n\tconst diff = end - vid.currentTime\n\tif (adjustment > diff) {\n\t\tvid.currentTime = adjustment - diff\n\t} else {\n\t\tvid.currentTime = vid.currentTime + adjustment\n\t}\n}\n\ninterface Dimensions {\n\tx:number,\n\ty:number\n}\n\ninterface AppState {\n\tshowHelp:boolean,\n\tshowThumbnails:boolean,\n\tdisplays:Display[],\n\tmaxId:number,\n\tactiveDisplay?:Display,\n\tlastDisplay?:Display,\n\tviewport?:Dimensions,\n\tratioIndex:number,\n\taspectRatio:AspectRatio,\n\tobjectFitIndex:number,\n\tobjectFit:ObjectFit,\n\tfirstBatch:boolean,\n\terrorDisplays:Display[],\n\tdragSrc?:Display\n}\n\ninterface ActionControls {\n\t[key:string]: ()=>void\n}\n\nfunction fullscreenElement(element:HTMLElement) {\n\t(element.requestFullscreen || (element as any).msRequestFullscreen || (element as any).webkitRequestFullscreen).call(element)\n}\n\nconst fsEnabled = document.fullscreenEnabled || (document as any).msFullscreenEnabled || (document as any).webkitFullscreenEnabled\nconst fsExit = (document.exitFullscreen || (document as any).msExitFullscreen || (document as any).webkitExitFullscreen).bind(document)\nfunction toggleFullscreen(target:HTMLElement = document.body) {\n\tif (!fsEnabled) return\n\tconst fsElement = document.fullscreenElement || (document as any).msFullscreenElement || (document as any).webkitFullscreenElement\n\tif (fsElement) {\n\t\tfsExit()\n\t} else {\n\t\tfullscreenElement(target)\n\t}\n}\n\nclass App extends React.Component<{},AppState> {\n\tviewport = React.createRef<HTMLElement>()\n\tglobalActions = {\n\t\t\"f\": () => toggleFullscreen(),\n\t\t\"h\": () => this.setState({showHelp: !this.state.showHelp}),\n\t\t\"s\": () => this.nextObjectFit(),\n\t\t\"t\": () => this.setState({showThumbnails: !this.state.showThumbnails}),\n\t\t\"x\": () => this.nextDimensionRatio()\n\t} as ActionControls\n\n\tsyncPlaybackRates(playbackRate:number) {\n\t\tconst {displays} = this.state\n\t\tdisplays.forEach(i => i.playbackRate = playbackRate)\n\t\tthis.setState({displays}) \n\t}\n\n\tdistributeTimes(display:Display) {\n\t\tconst {displays} = this.state\n\t\tconst matchingDisplays = displays.filter(i => i.file == display.file)\n\t\tconst di = matchingDisplays.indexOf(display)\n\t\t// start with target display so it keeps its current time, bump up from there looping back to start\n\t\tconst orderedDisplays = [display, ...matchingDisplays.slice(di+1), ...matchingDisplays.slice(0, di)]\n\n\t\tconst t1 = display.video!.currentTime\n\t\tconst duration = display.video!.duration\n\t\tconst spacing = duration / orderedDisplays.length\n\t\torderedDisplays.forEach((v, i) => {\n\t\t\tconst targetTime = t1 + (spacing * i)\n\t\t\t// loop time back to beginning once we exceed end of video\n\t\t\tv.video!.currentTime = targetTime < duration ? targetTime : targetTime - duration\n\t\t})\n\t}\n\n\tfillGrid(display:Display, count:number) {\n\t\tconst {displays} = this.state\n\t\tconst additions = count - displays.length\n\t\tif (additions < 1) return\n\t\tconst newDisplays = [...Array(additions)].map((_, i) => {\n\t\t\tconst newDisplay = this.copyDisplay(display)\n\t\t\tnewDisplay.id += i\n\t\t\treturn newDisplay\n\t\t})\n\t\tthis.setState({\n\t\t\tdisplays: displays.concat(newDisplays),\n\t\t\tmaxId: newDisplays.pop()!.id\n\t\t})\n\t}\n\n\tconstructor(props:{}) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tshowHelp: true,\n\t\t\tshowThumbnails: true,\n\t\t\tdisplays: [],\n\t\t\tmaxId: 0,\n\t\t\tratioIndex: 0,\n\t\t\taspectRatio: ASPECT_RATIOS[0],\n\t\t\tobjectFitIndex: 0,\n\t\t\tobjectFit: OBJECT_FITS[0],\n\t\t\tfirstBatch: true,\n\t\t\terrorDisplays: [],\n\t\t}\n\n\t\twindow.onresize = () => this.updateDimensions()\n\n\t\twindow.onkeydown = ev => {\n\t\t\tconst key = ev.key.toLowerCase()\n\t\t\tif (key in this.globalActions && !ev.shiftKey && !ev.ctrlKey) {\n\t\t\t\tthis.globalActions[key]()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst {activeDisplay} = this.state\n\t\t\tif (!activeDisplay) return\n\n\t\t\tif (ev.shiftKey) {\n\t\t\t\tconst shiftDisplayActions = {\n\t\t\t\t\t\"arrowleft\": () => adjustDisplayTime(activeDisplay, -.1, true),\n\t\t\t\t\t\"arrowright\": () => adjustDisplayTime(activeDisplay, .1, true),\n\t\t\t\t\t\"s\": () => this.syncPlaybackRates(activeDisplay.playbackRate),\n\t\t\t\t\t\"f\": () => fullscreenElement(activeDisplay.video!)\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in shiftDisplayActions && shiftDisplayActions[key]()\n\t\t\t} else if (ev.ctrlKey) {\n\t\t\t\tconst ctrlDisplayActions = {\n\t\t\t\t\t\"arrowleft\": () => this.adjustVideoSpeed(activeDisplay, 0.5),\n\t\t\t\t\t\"arrowright\": () => this.adjustVideoSpeed(activeDisplay, 2)\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in ctrlDisplayActions && ctrlDisplayActions[key]()\n\t\t\t} else {\n\t\t\t\tconst displayActions = {\n\t\t\t\t\t\"delete\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"c\": () => this.addDisplayCopy(activeDisplay),\n\t\t\t\t\t\"d\": () => this.distributeTimes(activeDisplay),\n\t\t\t\t\t\"e\": () => this.setState({displays: [activeDisplay,]}),\n\t\t\t\t\t\"i\": () => this.setVideoIO(activeDisplay, \"in\"),\n\t\t\t\t\t\"o\": () => this.setVideoIO(activeDisplay, \"out\"),\n\t\t\t\t\t\"m\": () => toggleMute(activeDisplay.video),\n\t\t\t\t\t\"r\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"arrowleft\": () => adjustDisplayTime(activeDisplay, -60),\n\t\t\t\t\t\"arrowright\": () => adjustDisplayTime(activeDisplay, 60),\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in displayActions && displayActions[key]()\n\t\t\t\tif (key >= \"2\" && key <= \"9\") {\n\t\t\t\t\tthis.fillGrid(activeDisplay, parseInt(key))\n\t\t\t\t\tthis.distributeTimes(activeDisplay)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdocument.ondragover = stopDragDrop\n\t\tdocument.ondragenter = stopDragDrop\n\t\tdocument.ondragleave = stopDragDrop\n\n\t\tdocument.ondrop = (e:DragEvent) => {\n\t\t\tstopDragDrop(e)\n\t\t\tif (!e.dataTransfer) return\n\t\t\tconst {firstBatch} = this.state\n\t\t\tconst droppedFiles = e.dataTransfer.files as FileList\n\t\t\tconst videoFiles = Array.from(droppedFiles).filter(i => i.type.startsWith('video/'))\n\t\t\tlet maxId = this.state.maxId\n\t\t\tconst newDisplays = videoFiles.map(file => ({\n\t\t\t\tid: ++maxId,\n\t\t\t\tfile,\n\t\t\t\turl: URL.createObjectURL(file),\n\t\t\t\ttriggerResize: firstBatch,\n\t\t\t\tplaybackRate: 1\n\t\t\t} as Display))\n\n\t\t\tthis.setState({\n\t\t\t\tdisplays: this.state.displays.concat(newDisplays),\n\t\t\t\tmaxId,\n\t\t\t\tfirstBatch: false,\n\t\t\t\t// hide help if we are adding videos\n\t\t\t\tshowHelp: this.state.showHelp && videoFiles.length == 0\n\t\t\t})\n\t\t}\n\t}\n\n\tgetVideoSize() {\n\t\tconst {displays, aspectRatio, viewport} = this.state\n\t\t// assume minimum size if no viewport (shouldn't happen)\n\t\tif (!viewport) return {width: 1, height: 1}\n\t\t// if only one display, use full size\n\t\tif (displays.length < 2) return {width: viewport.x, height: viewport.y}\n\n\t\t// try every number of rows up to a dedicated row for each video\n\t\tlet bestArea = 0, width = 0, height = 0\n\t\tconst videoRatio = aspectRatio.ratio\n\t\tfor (let rows = 1; rows <= displays.length; rows++) {\n\t\t\t// get the necessary number of columns with a given number of rows\n\t\t\tconst cols = Math.ceil(displays.length / rows)\n\t\t\t// this determines the size of the resulting box\n\t\t\tconst x = Math.floor(viewport.x / cols)\n\t\t\tconst y = Math.floor(viewport.y / rows)\n\t\t\t// actual video dimensions will depend on ratio within the display box, being shrunk on one side\n\t\t\tlet vx = x, vy = y\n\t\t\tif (videoRatio > x/y) {\n\t\t\t\tvy = vx / videoRatio\n\t\t\t} else {\n\t\t\t\tvx = vy * videoRatio\n\t\t\t}\n\t\t\tconst videoArea = vx * vy\n\t\t\t// if this isn't an improvement, continue looking\n\t\t\tif (videoArea < bestArea) continue\n\t\t\t// otherwise save this as best situation\n\t\t\tbestArea = videoArea\n\t\t\twidth = x, height = y\n\t\t}\n\n\t\treturn {width, height}\n\t}\n\n\tadjustVideoSpeed(display:Display, adjustment:number) {\n\t\tdisplay.playbackRate = display.playbackRate * adjustment\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tsetVideoIO(display:Display, mode:\"in\"|\"out\") {\n\t\tif (mode in display) {\n\t\t\tdelete display[mode]\n\t\t} else {\n\t\t\tdisplay[mode] = display.video!.currentTime\n\t\t}\n\t\t// not sure if this way of updating the display will work\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tupdateDimensions() {\n\t\tconst vp = this.viewport.current!\n\t\tconst viewport = {x: vp.clientWidth, y: vp.clientHeight}\n\t\tthis.setState({viewport})\n\t}\n\n\tcopyDisplay(display:Display) {\n\t\tconst activeVideo = display.video!\n\t\tconst maxId = this.state.maxId + 1\n\t\tlet startTime = activeVideo.currentTime + 60\n\t\tif (startTime > activeVideo.duration) startTime = 0\n\t\tconst newDisplay = {\n\t\t\tid: maxId,\n\t\t\tfile: display.file,\n\t\t\turl: display.url,\n\t\t\tplaybackRate: display.playbackRate,\n\t\t\tstartTime,\n\t\t\ttriggerResize: false\n\t\t}\n\t\treturn newDisplay\n\t}\n\n\taddDisplayCopy(display:Display) {\n\t\tconst newDisplay = this.copyDisplay(display)\n\t\tthis.setState({\n\t\t\tmaxId: newDisplay.id,\n\t\t\tdisplays: this.state.displays.concat(newDisplay)\n\t\t})\n\t}\n\n\tdeleteDisplay(display:Display) {\n\t\tthis.setState({ displays: this.state.displays.filter(i => i != display) })\n\t}\n\n\tnextDimensionRatio() {\n\t\tlet i = this.state.ratioIndex + 1\n\t\tif (i >= ASPECT_RATIOS.length) i = 0\n\t\tthis.setState({\n\t\t\tratioIndex: i,\n\t\t\taspectRatio: ASPECT_RATIOS[i]\n\t\t})\n\t}\n\n\tnextObjectFit() {\n\t\tlet i = this.state.objectFitIndex + 1\n\t\tif (i >= OBJECT_FITS.length) i = 0\n\t\tthis.setState({\n\t\t\tobjectFitIndex: i,\n\t\t\tobjectFit: OBJECT_FITS[i]\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions()\n\t}\n\n\tgetAspectRatios() {\n\t\treturn this.state.displays.map(i => i.video!.videoWidth / i.video!.videoHeight)\n\t}\n\n\tgetRecommendedAspectRatioIndex() {\n\t\tconst avgRatio = this.getAspectRatios().reduce((a,b) => a + b, 0) / this.state.displays.length\n\t\tconst closestRatio = [...ASPECT_RATIOS].sort((a, b) => Math.min(a.ratio / avgRatio, avgRatio / a.ratio) - Math.min(b.ratio/avgRatio, avgRatio / b.ratio)).pop()\n\t\tconst i = ASPECT_RATIOS.findIndex(i => i.name == closestRatio!.name)\n\t\treturn i\n\t}\n\n\tsetRecommendedAspectRatio() {\n\t\tconst i = this.getRecommendedAspectRatioIndex()\n\t\tthis.setState({\n\t\t\taspectRatio: ASPECT_RATIOS[i],\n\t\t\tratioIndex: i\n\t\t})\n\t}\n\n\thandleVideoError(display:Display) {\n\t\tconst {displays, errorDisplays} = this.state\n\t\terrorDisplays.push(display)\n\t\tthis.setState({\n\t\t\tdisplays: displays.filter(i => i != display),\n\t\t\terrorDisplays\n\t\t})\n\t}\n\n\treorderDisplays(dest:EventTarget) {\n\t\tconst {displays, dragSrc} = this.state\n\t\tif (!dragSrc) return\n\t\tconst destDisplay = displays.filter(i => i.video == dest).pop() || displays[displays.length-1]\n\t\tconst si = displays.indexOf(dragSrc)\n\t\tconst tmpDisplays = [...displays.slice(0, si), ...displays.slice(si+1)]\n\t\tconst di = tmpDisplays.indexOf(destDisplay)\n\t\tconst newDisplays = [...tmpDisplays.slice(0, di+1), dragSrc, ...tmpDisplays.slice(di+1)]\n\t\tthis.setState({ displays: newDisplays })\n\t}\n\n\trender() {\n\t\tconst {displays, errorDisplays, activeDisplay, lastDisplay, showThumbnails, showHelp, aspectRatio, objectFit} = this.state\n\t\tconst size = this.getVideoSize()\n\t\treturn <>\n\t\t\t<main ref={this.viewport}\n\t\t\t\tonDrop={e => this.reorderDisplays(e.target)}>\n\t\t\t\t{displays.length == 0 && SPLASH}\n\t\t\t\t{displays.map(i => <BDVideo size={size} objectFit={objectFit} key={i.id} display={i}\n\t\t\t\t\tshowOverlay={i == activeDisplay}\n\t\t\t\t\tshowThumbnail={showThumbnails}\n\t\t\t\t\tplaybackRate={i.playbackRate}\n\t\t\t\t\tonDrag={display => this.setState({dragSrc: display})}\n\t\t\t\t\tonMouseOver={() => this.setState({activeDisplay: i, lastDisplay: i})}\n\t\t\t\t\tonMouseOut={() => this.setState({activeDisplay: undefined})}\n\t\t\t\t\tonLoad={() => i.triggerResize && this.setRecommendedAspectRatio()}\n\t\t\t\t\tonError={() => this.handleVideoError(i)}\n\t\t\t\t\tinTime={i.in} outTime={i.out}\n\t\t\t\t/>)}\n\t\t\t</main>\n\t\t\t{errorDisplays.length > 0 && <ErrorDisplay errorDisplays={errorDisplays} dismissCallback={() => this.setState({errorDisplays: []})} />}\n\t\t\t{showHelp && <Help\n\t\t\t\t{...{aspectRatio, objectFit}}\n\t\t\t\taspectRatioCallback={aspectRatio => this.setState({aspectRatio})}\n\t\t\t\tobjectFitCallback={objectFit => this.setState({objectFit})} />}\n\t\t</>\n\t}\n}\n\ninterface ErrorDisplayProps {\n\terrorDisplays:Display[],\n\tdismissCallback:()=>void\n}\nfunction ErrorDisplay({errorDisplays, dismissCallback}:ErrorDisplayProps) {\n\treturn <section id=\"errors\">\n\t\t<h2>Errors</h2><ol>\n\t\t\t{errorDisplays.map((display, i) => <li key={i}>{display.file.name} ({display.file.type})</li>)}\n\t\t</ol>\n\t\t<p>Only videos supported by your web browser will play successfully.  <code>.mp4</code> and <code>.webm</code> files are good bets.</p>\n\t\t<form onSubmit={dismissCallback}><button>Dismiss</button></form>\n\t</section>\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}