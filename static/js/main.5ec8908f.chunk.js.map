{"version":3,"sources":["AspectRatio.ts","App.tsx","serviceWorker.js","index.js"],"names":["ASPECT_RATIOS","ratio","name","OBJECT_FITS","SPLASH","react_default","a","createElement","id","HELP","stopDragDrop","e","preventDefault","stopPropagation","IOMarker","_ref","offset","xPadding","color","className","width","height","style","bottom","yPadding","left","diameter","viewBox","cx","cy","r","fill","adjustDisplayTime","display","adjustment","percentage","arguments","length","undefined","vid","video","end","duration","diff","currentTime","BDVideo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","React","createRef","thumbnail","timelineMargin","thumbnailWidth","state","_this$props","inTime","outTime","current","ontimeupdate","pastOut","beforeIn","rate","playbackRate","setIO","thumbData","timestamp","_this2","_this$props2","onLoad","onError","onDrag","startTime","onerror","onloadeddata","onloadedmetadata","ondragstart","target","offsetY","onmousemove","layerY","setState","areaWidth","videoPercentage","layerX","targetTime","offsetX","onmouseout","_this$props3","ip","op","timelineWidth","ix","ox","Fragment","_this$props4","size","onMouseOver","onMouseOut","objectFit","showOverlay","assign","concat","file","getIO","controls","autoPlay","loop","muted","src","url","ref","draggable","title","Component","App","_this3","viewport","globalActions","f","document","fullscreenEnabled","fullscreenElement","exitFullscreen","body","requestFullscreen","h","showHelp","s","nextObjectFit","x","nextDimensionRatio","showInfo","displays","maxId","ratioIndex","aspectRatio","objectFitIndex","firstBatch","errorDisplays","window","onresize","updateDimensions","onkeydown","ev","key","toLowerCase","shiftKey","ctrlKey","activeDisplay","shiftDisplayActions","arrowleft","arrowright","syncPlaybackRates","ctrlDisplayActions","adjustVideoSpeed","displayActions","delete","deleteDisplay","c","addDisplayCopy","d","distributeTimes","i","setVideoIO","o","m","fillGrid","parseInt","ondragover","ondragenter","ondragleave","ondrop","dataTransfer","droppedFiles","files","videoFiles","Array","from","filter","type","startsWith","newDisplays","map","URL","createObjectURL","triggerResize","forEach","matchingDisplays","di","indexOf","orderedDisplays","toConsumableArray","slice","t1","spacing","v","count","_this4","additions","_","newDisplay","copyDisplay","pop","_this$state","y","bestArea","bestrows","bestcols","videoRatio","rows","cols","Math","ceil","vx","vy","videoArea","mode","vp","clientWidth","clientHeight","activeVideo","videoWidth","videoHeight","avgRatio","getAspectRatios","reduce","b","closestRatio","sort","min","findIndex","getRecommendedAspectRatioIndex","_this$state2","push","dest","_this$state3","dragSrc","destDisplay","si","tmpDisplays","_this5","_this$state4","lastDisplay","getVideoSize","onDrop","reorderDisplays","App_BDVideo","setRecommendedAspectRatio","handleVideoError","in","out","onSubmit","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mMAKaA,SAAgB,CAC5B,CACCC,MAAO,GAAG,EACVC,KAAM,0BACJ,CACFD,MAAO,EAAE,EACTC,KAAM,6BACJ,CACFD,MAAO,EACPC,KAAM,gBACJ,CACFD,MAAO,EAAE,GACTC,KAAM,sBACJ,CACFD,MAAO,KACPC,KAAM,2BACJ,CACFD,MAAO,KACPC,KAAM,8BCdFC,EAAc,CAAC,UAAW,QAAS,OAAQ,cAE3CC,EAASC,EAAAC,EAAAC,cAAA,WAASC,GAAG,UAC1BH,EAAAC,EAAAC,cAAA,4KAGKE,EAAOJ,EAAAC,EAAAC,cAAA,WAASC,GAAG,QACxBH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,2FACAF,EAAAC,EAAAC,cAAA,2KACAF,EAAAC,EAAAC,cAAA,uBAAkBF,EAAAC,EAAAC,cAAA,UACjBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,sBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,gBAEAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,gBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,iBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,yBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAJ,wBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BAAJ,YACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kCAAJ,aACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iCAAJ,iBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAJ,gBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAJ,cACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAJ,sBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAJ,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBAAJ,yBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iBAAJ,kBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAJ,uBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAJ,oBAEDF,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,eAArB,yMAIF,SAASG,EAAaC,GACrBA,EAAEC,iBACFD,EAAEE,kBAaH,SAASC,EAATC,GAA2D,IAAxCC,EAAwCD,EAAxCC,OAAQC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,MAGpC,OAAOb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WAAWC,MAFhB,GAEiCC,OAFjC,GAEmDC,MAAO,CAACC,OAAQC,GAAyBC,KAAMR,EAAWD,EAAUU,GAAcC,QAAO,WAC5JtB,EAAAC,EAAAC,cAAA,UAAQqB,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAGC,KAAMb,KAIpC,SAASc,EAAkBC,EAAiBC,GAA+C,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACpFG,EAAMN,EAAQO,MACpB,GAAKD,EAAL,CACA,IAAME,EAAMF,EAAIG,SACZP,IACHD,GAAaO,GAEd,IAAME,EAAOF,EAAMF,EAAIK,YAEtBL,EAAIK,YADDV,EAAaS,EACET,EAAaS,EAEbJ,EAAIK,YAAcV,OAyChCW,cAOL,SAAAA,EAAYC,GAAoB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAC/BE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAPPN,MAAQc,IAAMC,YAMkBR,EALhCS,UAAYF,IAAMC,YAKcR,EAHhCU,eAAiB,GAGeV,EAFhCW,eAAiB,IAIhBX,EAAKY,MAAQ,GAFkBZ,uEAKxB,IAAAa,EACmBV,KAAKJ,MAAxBe,EADAD,EACAC,OAAQC,EADRF,EACQE,QACTtB,EAAQU,KAAKV,MAAMuB,QACzBvB,EAAMwB,aAAe,SAAArD,GACpB,IAAMsD,EAAUH,GAAWA,EAAUtB,EAAMI,YACrCsB,EAAWL,GAAUA,EAASrB,EAAMI,aACtCqB,GAAWC,KAAU1B,EAAMI,YAAciB,GAAU,iDAIpC,IAGdM,EAFiBjB,KAAKJ,MAArBsB,cAEsB,EADflB,KAAKV,MAAMuB,QAEnBK,aAAeD,EACrBjB,KAAKmB,QACL,IAAMb,EAAYN,KAAKM,UAAUO,QAC3BO,EAAYpB,KAAKS,MAAMH,UACzBA,GAAac,IAChBd,EAAUZ,YAAc0B,EAAUC,uDAIhB,IAAAC,EAAAtB,KAAAuB,EACwBvB,KAAKJ,MAAzCb,EADYwC,EACZxC,QAASyC,EADGD,EACHC,OAAQC,EADLF,EACKE,QAASC,EADdH,EACcG,OAC3BpC,EAAQU,KAAKV,MAAMuB,QACzB9B,EAAQO,MAAQA,EACZP,EAAQ4C,UACXrC,EAAMI,YAAcX,EAAQ4C,WAE5BrC,EAAMsC,QAAUH,EAChBnC,EAAMuC,aAAe,SAAApE,GAAC,OAAI6B,EAAMI,YAAcJ,EAAME,SAAW,GAC/DF,EAAMwC,iBAAmBN,GAE1BlC,EAAMyC,YAAc,SAAAtE,GACJA,EAAEuE,OACiB7D,OAASV,EAAEwE,QACpB,GACxBxE,EAAEC,iBAGHgE,EAAO3C,IAERO,EAAM4C,YAAc,SAAAzE,GAEnB,GAD2B6B,EAAMnB,OAASV,EAAE0E,OACnB,GACxBb,EAAKc,SAAS,CAAC9B,eAAWlB,QACpB,CACN,IAAMiD,EAAY/C,EAAMpB,MAA+B,EAAtBoD,EAAKf,eAChC+B,GAAmB7E,EAAE8E,OAASjB,EAAKf,gBAAkB8B,EACrDG,EAAalD,EAAME,SAAW8C,EACpChB,EAAKc,SAAS,CACb9B,UAAW,CACVmC,QAAShF,EAAE8E,OAAUjB,EAAKd,eAAiB,EAC3Ca,UAAWmB,OAKflD,EAAMoD,WAAa,SAAAjF,GAClB6D,EAAKc,SAAS,CAAC9B,eAAWlB,KAE3BY,KAAKmB,wCAGE,IAAAwB,EACmB3C,KAAKJ,MAAxBe,EADAgC,EACAhC,OAAQC,EADR+B,EACQ/B,QACTtB,EAAQU,KAAKV,MAAMuB,QAEzB,GAAIF,GAAUC,EAAS,CACtB,IAAM7C,EAAyB,IAAduB,EAAMpB,MACjBsB,EAAWF,EAAME,SACjBoD,EAAKjC,GAAU,EACfkC,EAAKjC,GAAWpB,EAChBsD,EAAgBxD,EAAMpB,MAAkB,EAATH,EAC/BgF,EAAMH,EAAKpD,EAAYsD,EACvBE,EAAMH,EAAKrD,EAAYsD,EAC7B,OAAO3F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACN9F,EAAAC,EAAAC,cAACO,EAAD,CAAUG,SAAUA,EAAUD,OAAQiF,EAAI/E,MAAM,UAChDb,EAAAC,EAAAC,cAACO,EAAD,CAAUG,SAAUA,EAAUD,OAAQkF,EAAIhF,MAAM,2CAK1C,IAAAkF,EAC+ElD,KAAKJ,MAArFuD,EADCD,EACDC,KAAMC,EADLF,EACKE,YAAaC,EADlBH,EACkBG,WAAYtE,EAD9BmE,EAC8BnE,QAASuE,EADvCJ,EACuCI,UAAWC,EADlDL,EACkDK,YAAarC,EAD/DgC,EAC+DhC,aAChEZ,EAAaN,KAAKS,MAAlBH,UAEP,OAAOnD,EAAAC,EAAAC,cAAA,MAAAyC,OAAA0D,OAAA,CAAKvF,UAAU,WAAckF,EAA7B,CAAmCC,YAAaA,EAAaC,WAAYA,IAC/ElG,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAiBG,MAAO,CAACF,MAAK,GAAAuF,OAAKN,EAAKjF,MAAV,MAAqBC,OAAM,GAAAsF,OAAKN,EAAKhF,OAAV,QAAwBoF,GAAW,GAAAE,OAAO1E,EAAQ2E,KAAK1G,MAApByG,OAA2C,GAAhBvC,EAAoB,GAAK,KAAKA,EAAa,OAChLqC,GAAevD,KAAK2D,QACpBrD,GAAanD,EAAAC,EAAAC,cAAA,SAAOuG,UAAU,EAAOC,UAAU,EAAOC,MAAM,EAAOC,OAAO,EAAMC,IAAKjF,EAAQkF,IAAK/F,MAAO8B,KAAKQ,eAAgBvC,UAAU,YAAYiG,IAAKlE,KAAKM,UAAWlC,MAAO,CAACG,KAAM+B,EAAUmC,WAClMtF,EAAAC,EAAAC,cAAA,QAAAyC,OAAA0D,OAAA,CAAOI,UAAU,EAAMC,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAMC,IAAKjF,EAAQkF,IAAKE,WAAW,GACxFhB,EADL,CACWe,IAAKlE,KAAKV,MAAOlB,MAAO,CAACkF,aAAYc,MAAOrF,EAAQ2E,KAAK1G,gBAzGjDoD,IAAMiE,eAkdbC,cAhRd,SAAAA,EAAY1E,GAAU,IAAA2E,EAAA,OAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACrBC,EAAAzE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,KAhDP4E,cA+CsB,EAAAD,EA9CtBE,cAAgB,CACfC,EAAK,WAbP,IAA0B1C,EACpB2C,SAASC,oBACVD,SAASE,kBACZF,SAASG,kBAGR9C,GAAU2C,SAASI,MAAMC,sBAQ1BC,EAAK,kBAAMV,EAAKnC,SAAS,CAAC8C,UAAWX,EAAK9D,MAAMyE,YAEhDC,EAAK,kBAAMZ,EAAKa,iBAChBC,EAAK,kBAAMd,EAAKe,uBA2ChBf,EAAKC,SAAWpE,IAAMC,YACtBkE,EAAK9D,MAAQ,CACZ8E,UAAU,EACVL,UAAU,EACVM,SAAU,GACVC,MAAO,EACPC,WAAY,EACZC,YAAa7I,EAAc,GAC3B8I,eAAgB,EAChBtC,UAAWrG,EAAY,GACvB4I,YAAY,EACZC,cAAe,IAGhBC,OAAOC,SAAW,kBAAMzB,EAAK0B,oBAE7BF,OAAOG,UAAY,SAAAC,GAClB,IAAMC,EAAMD,EAAGC,IAAIC,cACnB,GAAID,KAAO7B,EAAKE,gBAAkB0B,EAAGG,WAAaH,EAAGI,QACpDhC,EAAKE,cAAc2B,SADpB,CAFwB,IAOjBI,EAAiBjC,EAAK9D,MAAtB+F,cACP,GAAKA,EAEL,GAAIL,EAAGG,SAAU,CAChB,IAAMG,EAAsB,CAC3BC,UAAa,kBAAM5H,EAAkB0H,GAAgB,IAAI,IACzDG,WAAc,kBAAM7H,EAAkB0H,EAAe,IAAI,IACzDrB,EAAK,kBAAMZ,EAAKqC,kBAAkBJ,EAActF,eAChDwD,EAAK,kBAAM8B,EAAclH,MAAO0F,sBAEjCoB,KAAOK,GAAuBA,EAAoBL,UAC5C,GAAID,EAAGI,QAAS,CACtB,IAAMM,EAAqB,CAC1BH,UAAa,kBAAMnC,EAAKuC,iBAAiBN,EAAe,KACxDG,WAAc,kBAAMpC,EAAKuC,iBAAiBN,EAAe,KAE1DJ,KAAOS,GAAsBA,EAAmBT,SAC1C,CACN,IAAMW,EAAiB,CACtBC,OAAU,kBAAMzC,EAAK0C,cAAcT,IACnCU,EAAK,kBAAM3C,EAAK4C,eAAeX,IAC/BY,EAAK,kBAAM7C,EAAK8C,gBAAgBb,IAChCc,EAAK,kBAAM/C,EAAKgD,WAAWf,EAAe,OAC1CgB,EAAK,kBAAMjD,EAAKgD,WAAWf,EAAe,QAC1CiB,EAAK,WAzTV,IAAoBnI,KAyTOkH,EAAclH,SAvTxCA,EAAMyE,OAASzE,EAAMyE,QAwTjBnF,EAAK,kBAAM2F,EAAK0C,cAAcT,IAC9BE,UAAa,kBAAM5H,EAAkB0H,GAAgB,KACrDG,WAAc,kBAAM7H,EAAkB0H,EAAe,MAEtDJ,KAAOW,GAAkBA,EAAeX,KACpCA,GAAO,KAAOA,GAAO,MACxB7B,EAAKmD,SAASlB,EAAemB,SAASvB,IACtC7B,EAAK8C,gBAAgBb,OAKxB7B,SAASiD,WAAapK,EACtBmH,SAASkD,YAAcrK,EACvBmH,SAASmD,YAActK,EAEvBmH,SAASoD,OAAS,SAACtK,GAElB,GADAD,EAAaC,GACRA,EAAEuK,aAAP,CAFkC,IAG3BnC,EAActB,EAAK9D,MAAnBoF,WACHoC,EAAexK,EAAEuK,aAAaE,MAC5BC,EAAaC,MAAMC,KAAKJ,GAAcK,OAAO,SAAAhB,GAAC,OAAIA,EAAEiB,KAAKC,WAAW,YACtE/C,EAAQlB,EAAK9D,MAAMgF,MACjBgD,EAAcN,EAAWO,IAAI,SAAAhF,GAAU,MAAO,CACnDpG,KAAMmI,EACN/B,OACAO,IAAK0E,IAAIC,gBAAgBlF,GACzBmF,cAAehD,EACf3E,aAAc,KAGfqD,EAAKnC,SAAS,CACboD,SAAUjB,EAAK9D,MAAM+E,SAAS/B,OAAOgF,GACrChD,QACAI,YAAY,EAEZX,SAAUX,EAAK9D,MAAMyE,UAAiC,GAArBiD,EAAWhJ,WAtFzBoF,iFAtCJrD,GAAqB,IAC/BsE,EAAYxF,KAAKS,MAAjB+E,SACPA,EAASsD,QAAQ,SAAAxB,GAAC,OAAIA,EAAEpG,aAAeA,IACvClB,KAAKoC,SAAS,CAACoD,qDAGAzG,GAAiB,IAE1BgK,EADa/I,KAAKS,MAAjB+E,SAC2B8C,OAAO,SAAAhB,GAAC,OAAIA,EAAE5D,MAAQ3E,EAAQ2E,OAC1DsF,EAAKD,EAAiBE,QAAQlK,GAE9BmK,EAAe,CAAInK,GAAJ0E,OAAA3D,OAAAqJ,EAAA,EAAArJ,CAAgBiJ,EAAiBK,MAAMJ,EAAG,IAA1ClJ,OAAAqJ,EAAA,EAAArJ,CAAiDiJ,EAAiBK,MAAM,EAAGJ,KAE1FK,EAAKtK,EAAQO,MAAOI,YACpBF,EAAWT,EAAQO,MAAOE,SAC1B8J,EAAU9J,EAAW0J,EAAgB/J,OAC3C+J,EAAgBJ,QAAQ,SAACS,EAAGjC,GAC3B,IAAM9E,EAAa6G,EAAMC,EAAUhC,EAEnCiC,EAAEjK,MAAOI,YAAc8C,EAAahD,EAAWgD,EAAaA,EAAahD,qCAIlET,EAAiByK,GAAc,IAAAC,EAAAzJ,KAChCwF,EAAYxF,KAAKS,MAAjB+E,SACDkE,EAAYF,EAAQhE,EAASrG,OACnC,KAAIuK,EAAY,GAAhB,CACA,IAAMjB,EAAc3I,OAAAqJ,EAAA,EAAArJ,CAAIsI,MAAMsB,IAAYhB,IAAI,SAACiB,EAAGrC,GACjD,IAAMsC,EAAaH,EAAKI,YAAY9K,GAEpC,OADA6K,EAAWtM,IAAMgK,EACVsC,IAER5J,KAAKoC,SAAS,CACboD,SAAUA,EAAS/B,OAAOgF,GAC1BhD,MAAOgD,EAAYqB,MAAOxM,8DA+Fb,IAAAyM,EAC4B/J,KAAKS,MAAxC+E,EADOuE,EACPvE,SAAUG,EADHoE,EACGpE,YAAanB,EADhBuF,EACgBvF,SAE9B,IAAKA,EAAU,MAAO,CAACtG,MAAO,EAAGC,OAAQ,GAEzC,GAAIqH,EAASrG,OAAS,EAAG,MAAO,CAACjB,MAAOsG,EAASa,EAAGlH,OAAQqG,EAASwF,GAKrE,IAFA,IAAIC,EAAW,EAAGC,EAAW,EAAGC,EAAW,EACrCC,EAAazE,EAAY5I,MACtBsN,EAAO,EAAGA,GAAQ7E,EAASrG,OAAQkL,IAAQ,CAEnD,IAAMC,EAAOC,KAAKC,KAAKhF,EAASrG,OAASkL,GAEnChF,EAAIb,EAASa,EAAIiF,EAAMN,EAAIxF,EAASwF,EAAIK,EAE1CI,EAAKpF,EAAGqF,EAAKV,EACbI,EAAa/E,EAAE2E,EAClBU,EAAKD,EAAKL,EAEVK,EAAKC,EAAKN,EAEX,IAAMO,EAAYF,EAAKC,EAEnBC,EAAYV,IAEhBA,EAAWU,EACXT,EAAWG,EAAMF,EAAWG,GAG7B,MAAO,CACNpM,MAAOsG,EAASa,EAAI8E,EACpBhM,OAAQqG,EAASwF,EAAIE,4CAINnL,EAAiBC,GACjCD,EAAQmC,aAAenC,EAAQmC,aAAelC,EAC9CgB,KAAKoC,SAAS,CAACoD,SAAUxF,KAAKS,MAAM+E,8CAG1BzG,EAAiB6L,GACvBA,KAAQ7L,SACJA,EAAQ6L,GAEf7L,EAAQ6L,GAAQ7L,EAAQO,MAAOI,YAGhCM,KAAKoC,SAAS,CAACoD,SAAUxF,KAAKS,MAAM+E,sDAIpC,IAAMqF,EAAK7K,KAAKwE,SAAS3D,QACnB2D,EAAW,CAACa,EAAGwF,EAAGC,YAAad,EAAGa,EAAGE,cAC3C/K,KAAKoC,SAAS,CAACoC,iDAGJzF,GACX,IAAMiM,EAAcjM,EAAQO,MACtBmG,EAAQzF,KAAKS,MAAMgF,MAAQ,EAC7B9D,EAAYqJ,EAAYtL,YAAc,GAU1C,OATIiC,EAAYqJ,EAAYxL,WAAUmC,EAAY,GAC/B,CAClBrE,GAAImI,EACJ/B,KAAM3E,EAAQ2E,KACdO,IAAKlF,EAAQkF,IACb/C,aAAcnC,EAAQmC,aACtBS,YACAkH,eAAe,0CAKF9J,GACd,IAAM6K,EAAa5J,KAAK6J,YAAY9K,GACpCiB,KAAKoC,SAAS,CACbqD,MAAOmE,EAAWtM,GAClBkI,SAAUxF,KAAKS,MAAM+E,SAAS/B,OAAOmG,2CAIzB7K,GACbiB,KAAKoC,SAAS,CAAEoD,SAAUxF,KAAKS,MAAM+E,SAAS8C,OAAO,SAAAhB,GAAC,OAAIA,GAAKvI,mDAI/D,IAAIuI,EAAItH,KAAKS,MAAMiF,WAAa,EAC5B4B,GAAKxK,EAAcqC,SAAQmI,EAAI,GACnCtH,KAAKoC,SAAS,CACbsD,WAAY4B,EACZ3B,YAAa7I,EAAcwK,6CAK5B,IAAIA,EAAItH,KAAKS,MAAMmF,eAAiB,EAChC0B,GAAKrK,EAAYkC,SAAQmI,EAAI,GACjCtH,KAAKoC,SAAS,CACbwD,eAAgB0B,EAChBhE,UAAWrG,EAAYqK,iDAKxBtH,KAAKiG,6DAIL,OAAOjG,KAAKS,MAAM+E,SAASkD,IAAI,SAAApB,GAAC,OAAIA,EAAEhI,MAAO2L,WAAa3D,EAAEhI,MAAO4L,uEAInE,IAAMC,EAAWnL,KAAKoL,kBAAkBC,OAAO,SAACjO,EAAEkO,GAAH,OAASlO,EAAIkO,GAAG,GAAKtL,KAAKS,MAAM+E,SAASrG,OAClFoM,EAAezL,OAAAqJ,EAAA,EAAArJ,CAAIhD,GAAe0O,KAAK,SAACpO,EAAGkO,GAAJ,OAAUf,KAAKkB,IAAIrO,EAAEL,MAAQoO,EAAUA,EAAW/N,EAAEL,OAASwN,KAAKkB,IAAIH,EAAEvO,MAAMoO,EAAUA,EAAWG,EAAEvO,SAAQ+M,MAE1J,OADUhN,EAAc4O,UAAU,SAAApE,GAAC,OAAIA,EAAEtK,MAAQuO,EAAcvO,2DAK/D,IAAMsK,EAAItH,KAAK2L,iCACf3L,KAAKoC,SAAS,CACbuD,YAAa7I,EAAcwK,GAC3B5B,WAAY4B,6CAIGvI,GAAiB,IAAA6M,EACC5L,KAAKS,MAAhC+E,EAD0BoG,EAC1BpG,SAAUM,EADgB8F,EAChB9F,cACjBA,EAAc+F,KAAK9M,GACnBiB,KAAKoC,SAAS,CACboD,SAAUA,EAAS8C,OAAO,SAAAhB,GAAC,OAAIA,GAAKvI,IACpC+G,0DAIcgG,GAAkB,IAAAC,EACL/L,KAAKS,MAA1B+E,EAD0BuG,EAC1BvG,SAAUwG,EADgBD,EAChBC,QACjB,GAAKA,EAAL,CACA,IAAMC,EAAczG,EAAS8C,OAAO,SAAAhB,GAAC,OAAIA,EAAEhI,OAASwM,IAAMhC,OAAStE,EAASA,EAASrG,OAAO,GACtF+M,EAAK1G,EAASyD,QAAQ+C,GACtBG,EAAW,GAAA1I,OAAA3D,OAAAqJ,EAAA,EAAArJ,CAAO0F,EAAS4D,MAAM,EAAG8C,IAAzBpM,OAAAqJ,EAAA,EAAArJ,CAAiC0F,EAAS4D,MAAM8C,EAAG,KAC9DlD,EAAKmD,EAAYlD,QAAQgD,GACzBxD,EAAW,GAAAhF,OAAA3D,OAAAqJ,EAAA,EAAArJ,CAAOqM,EAAY/C,MAAM,EAAGJ,EAAG,IAA/B,CAAmCgD,GAAnClM,OAAAqJ,EAAA,EAAArJ,CAA+CqM,EAAY/C,MAAMJ,EAAG,KACrFhJ,KAAKoC,SAAS,CAAEoD,SAAUiD,sCAGlB,IAAA2D,EAAApM,KAAAqM,EACkGrM,KAAKS,MAAxG+E,EADC6G,EACD7G,SAAUM,EADTuG,EACSvG,cAAeU,EADxB6F,EACwB7F,cAAe8F,EADvCD,EACuCC,YAAa/G,EADpD8G,EACoD9G,SAAUL,EAD9DmH,EAC8DnH,SAAUS,EADxE0G,EACwE1G,YAAarC,EADrF+I,EACqF/I,UACvFH,EAAOnD,KAAKuM,eAClB,OAAOpP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6F,SAAA,KACLsC,GAAY+G,GAAenP,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eAClCqI,EAAY3I,KAAKG,EAAAC,EAAAC,cAAA,WADS,mBAEViG,EAAUnG,EAAAC,EAAAC,cAAA,WAC1BiP,EAAY5I,KAAK1G,MAEnBG,EAAAC,EAAAC,cAAA,QAAM6G,IAAKlE,KAAKwE,SACfgI,OAAQ,SAAA/O,GAAC,OAAI2O,EAAKK,gBAAgBhP,EAAEuE,UAChB,GAAnBwD,EAASrG,QAAejC,EACxBsI,EAASkD,IAAI,SAAApB,GAAC,OAAInK,EAAAC,EAAAC,cAACqP,EAAD,CAASvJ,KAAMA,EAAMG,UAAWA,EAAW8C,IAAKkB,EAAEhK,GAAIyB,QAASuI,EACjF/D,YAAa+D,GAAKd,EAClBtF,aAAcoG,EAAEpG,aAChBQ,OAAQ,SAAA3C,GAAO,OAAIqN,EAAKhK,SAAS,CAAC4J,QAASjN,KAC3CqE,YAAa,kBAAMgJ,EAAKhK,SAAS,CAACoE,cAAec,EAAGgF,YAAahF,KACjEjE,WAAY,kBAAM+I,EAAKhK,SAAS,CAACoE,mBAAepH,KAChDoC,OAAQ,kBAAM8F,EAAEuB,eAAiBuD,EAAKO,6BACtClL,QAAS,kBAAM2K,EAAKQ,iBAAiBtF,IACrC3G,OAAQ2G,EAAEuF,GAAIjM,QAAS0G,EAAEwF,SAG1BhH,EAAc3G,OAAS,GAAKhC,EAAAC,EAAAC,cAAA,WAASC,GAAG,UACxCH,EAAAC,EAAAC,cAAA,oBAAeF,EAAAC,EAAAC,cAAA,UACbyI,EAAc4C,IAAI,SAAC3J,EAASuI,GAAV,OAAgBnK,EAAAC,EAAAC,cAAA,MAAI+I,IAAKkB,GAAIvI,EAAQ2E,KAAK1G,KAA1B,KAAkC+B,EAAQ2E,KAAK6E,KAA/C,QAEpCpL,EAAAC,EAAAC,cAAA,+EAAsEF,EAAAC,EAAAC,cAAA,oBAAtE,QAA4FF,EAAAC,EAAAC,cAAA,qBAA5F,yBACAF,EAAAC,EAAAC,cAAA,QAAM0P,SAAU,kBAAMX,EAAKhK,SAAS,CAAC0D,cAAe,OAAM3I,EAAAC,EAAAC,cAAA,2BAE1D6H,GAAY3H,UA3TE6C,IAAMiE,WC/PlB2I,EAAcC,QACW,cAA7BlH,OAAOmH,SAASC,UAEe,UAA7BpH,OAAOmH,SAASC,UAEhBpH,OAAOmH,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrN,QACf+M,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAOtR,EAAAC,EAAAC,cAACqR,EAAD,MAAS/J,SAASgK,eAAe,SDiB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI7E,IAAIiG,GAAwB7I,OAAOmH,SAAS2B,MACpDC,SAAW/I,OAAOmH,SAAS4B,OAIvC,OAGF/I,OAAOgJ,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAA7J,OAAMmL,GAAN,sBAEP5B,GAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,GACHK,KAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYjG,QAAQ,cAG5CuE,UAAUC,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7B5H,OAAOmH,SAASsC,aAKpBnC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAsB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.5ec8908f.chunk.js","sourcesContent":["export interface AspectRatio {\r\n\tratio:number,\r\n\tname:string\r\n}\r\n\r\nexport const ASPECT_RATIOS = [\r\n\t{\r\n\t\tratio: 16/9,\r\n\t\tname: \"16:9 (High Definition)\"\r\n\t}, {\r\n\t\tratio: 4/3,\r\n\t\tname: \"4:3 (Standard Definition)\"\r\n\t}, {\r\n\t\tratio: 1,\r\n\t\tname: \"1:1 (Square)\",\r\n\t}, {\r\n\t\tratio: 9/16,\r\n\t\tname: \"9:16 (Vertical HD)\"\r\n\t}, {\r\n\t\tratio: 1.85,\r\n\t\tname: \"1.85:1 (Cinematic Wide)\"\r\n\t}, {\r\n\t\tratio: 2.35,\r\n\t\tname: \"2.35:1 (Anamorphic Wide)\"\r\n\t}\r\n]","import React from 'react'\nimport './App.css'\nimport {AspectRatio, ASPECT_RATIOS} from './AspectRatio'\n\n// TODO: add logo\n// TODO: refence react as third party library on cdn?\n\n// TODO: fix this TypeScript hack\ntype ObjectFit = \"fill\"|\"contain\"|\"cover\"|\"scale-down\"\nconst OBJECT_FITS = ['contain', 'cover', 'fill', 'scale-down'] as ObjectFit[]\n\nconst SPLASH = <section id=\"splash\">\n\t<p>Videos start half-way in and loop, ensuring immediate, continuous action, but also start muted to avoid chaotic, clashing audio and prevent disturbing others.</p>\n</section>\n\nconst HELP = <section id=\"help\">\n\t<h2>Usage</h2>\n\t<p>Drag and drop any number of videos to auto-play in an optimally arranged grid.</p>\n\t<p>Videos start half-way in and loop, ensuring immediate, continuous action, but also start muted to avoid chaotic, clashing audio and prevent disturbing others.</p>\n\t<h2>Shortcuts</h2><ol>\n\t\t<li><em>C:</em> Clone video (+1m)</li>\n\t\t<li><em>D:</em> Distribute times</li>\n\t\t<li><em>H:</em> Toggle help</li>\n\t\t{/* <li><em>I:</em> Toggle info overlay</li> */}\n\t\t<li><em>M:</em> Toggle mute</li>\n\t\t<li><em>R:</em> Delete video</li>\n\t\t<li><em>S:</em> Change video scaling</li>\n\t\t<li><em>X:</em> Change aspect ratio</li>\n\t\t<li><em>← →:</em> Skip 1m</li>\n\t\t<li><em>Shift ← →:</em> Skip 10%</li>\n\t\t<li><em>Ctrl ← →:</em> Change speed</li>\n\t\t<li><em>Shift+S</em> Sync speeds</li>\n\t\t<li><em>Ctrl+W:</em> Close tab</li>\n\t\t<li><em>F / F11:</em> Toggle fullscreen</li>\n\t\t<li><em>Shift+F:</em> Fullscreen video</li>\n\t\t<li><em>I / O:</em> Toggle in / out time</li>\n\t\t<li><em>OO:</em> Restart video</li>\n\t\t<li><em>2-9:</em> Fill 2-9 size grid</li>\n\t\t<li><em>Drag&amp;Drop:</em> Reorder videos</li>\n\t</ol>\n\t<footer>\n\t\t<h2>Privacy Disclaimer</h2>\n\t\t<p>This tool records <b>no</b> filenames, screen grabs, or any other methods of identifying the actual contents of any video.  Only metadata about a video's format (codec, file size, resolution, and duration) may be recorded.</p>\n\t</footer>\n</section>\n\nfunction stopDragDrop(e:Event) {\n\te.preventDefault()\n\te.stopPropagation()\n}\n\nfunction toggleMute(video?:HTMLVideoElement) {\n\tif (!video) return\n\tvideo.muted = !video.muted\n}\n\ninterface IOMarkerProps {\n\toffset:number,\n\txPadding:number,\n\tcolor:string\n}\nfunction IOMarker({offset, xPadding, color}:IOMarkerProps) {\n\tconst diameter = 10\n\tconst yPadding = 16\n\treturn <svg className=\"iomarker\" width={diameter} height={diameter} style={{bottom: yPadding + (diameter/2), left: xPadding + offset - (diameter/2)}} viewBox={`0 0 2 2`}>\n\t\t<circle cx={1} cy={1} r={1} fill={color} />\n\t</svg>\n}\n\nfunction adjustDisplayTime(display:Display, adjustment:number, percentage:boolean = false) {\n\tconst vid = display.video\n\tif (!vid) return\n\tconst end = vid.duration\n\tif (percentage) {\n\t\tadjustment = end * adjustment\n\t}\n\tconst diff = end - vid.currentTime\n\tif (adjustment > diff) {\n\t\tvid.currentTime = adjustment - diff\n\t} else {\n\t\tvid.currentTime = vid.currentTime + adjustment\n\t}\n}\n\ninterface Display {\n\tid:number,\n\tfile:File,\n\turl:string,\n\tstartTime?:number,\n\tin?:number,\n\tout?:number,\n\tvideo?:HTMLVideoElement,\n\ttriggerResize:boolean,\n\tplaybackRate:number\n}\n\ninterface BDVideoProps {\n\tdisplay:Display,\n\tobjectFit:ObjectFit,\n\tsize: {\n\t\twidth:number,\n\t\theight:number\n\t},\n\tshowOverlay:boolean,\n\tinTime?:number,\n\toutTime?:number,\n\tplaybackRate:number,\n\tonMouseOver:()=>void,\n\tonMouseOut:()=>void,\n\tonLoad:()=>void\n\tonError:()=>void\n\tonDrag:(display:Display)=>void\n}\n\ninterface BDVideoState {\n\tthumbnail?:{\n\t\toffsetX:number,\n\t\ttimestamp:number\n\t}\n}\n\nclass BDVideo extends React.Component<BDVideoProps, BDVideoState> {\n\tvideo = React.createRef<HTMLVideoElement>()\n\tthumbnail = React.createRef<HTMLVideoElement>()\n\n\ttimelineMargin = 24\n\tthumbnailWidth = 196\n\n\tconstructor(props:BDVideoProps) {\n\t\tsuper(props)\n\t\tthis.state = {}\n\t}\n\n\tsetIO() {\n\t\tconst {inTime, outTime} = this.props\n\t\tconst video = this.video.current!\n\t\tvideo.ontimeupdate = e => {\n\t\t\tconst pastOut = outTime && outTime < video.currentTime\n\t\t\tconst beforeIn = inTime && inTime > video.currentTime\n\t\t\tif (pastOut || beforeIn) video.currentTime = inTime || 0\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst {playbackRate} = this.props\n\t\tconst video = this.video.current!\n\t\tconst rate = playbackRate || 1\n\t\tvideo.playbackRate = rate\n\t\tthis.setIO()\n\t\tconst thumbnail = this.thumbnail.current\n\t\tconst thumbData = this.state.thumbnail\n\t\tif (thumbnail && thumbData) {\n\t\t\tthumbnail.currentTime = thumbData.timestamp\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {display, onLoad, onError, onDrag} = this.props\n\t\tconst video = this.video.current!\n\t\tdisplay.video = video\n\t\tif (display.startTime) {\n\t\t\tvideo.currentTime = display.startTime\n\t\t} else {\n\t\t\tvideo.onerror = onError\n\t\t\tvideo.onloadeddata = e => video.currentTime = video.duration / 2\n\t\t\tvideo.onloadedmetadata = onLoad\n\t\t}\n\t\tvideo.ondragstart = e => {\n\t\t\tconst target = e.target! as HTMLVideoElement\n\t\t\tconst distanceFromBottom = target.height - e.offsetY\n\t\t\tif (distanceFromBottom < 80) {\n\t\t\t\te.preventDefault()\n\t\t\t\treturn\n\t\t\t}\n\t\t\tonDrag(display)\n\t\t}\n\t\tvideo.onmousemove = e => {\n\t\t\tconst distanceFromBottom = video.height - e.layerY\n\t\t\tif (distanceFromBottom > 50) {\n\t\t\t\tthis.setState({thumbnail: undefined})\n\t\t\t} else {\n\t\t\t\tconst areaWidth = video.width - (this.timelineMargin * 2)\n\t\t\t\tconst videoPercentage = (e.layerX - this.timelineMargin) / areaWidth \n\t\t\t\tconst targetTime = video.duration * videoPercentage\n\t\t\t\tthis.setState({\n\t\t\t\t\tthumbnail: {\n\t\t\t\t\t\toffsetX: e.layerX - (this.thumbnailWidth / 2),\n\t\t\t\t\t\ttimestamp: targetTime\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tvideo.onmouseout = e => {\n\t\t\tthis.setState({thumbnail: undefined})\n\t\t}\n\t\tthis.setIO()\n\t}\n\n\tgetIO() {\n\t\tconst {inTime, outTime} = this.props\n\t\tconst video = this.video.current!\n\n\t\tif (inTime || outTime) {\n\t\t\tconst xPadding = video.width * .02\n\t\t\tconst duration = video.duration\n\t\t\tconst ip = inTime || 0\n\t\t\tconst op = outTime || duration\n\t\t\tconst timelineWidth = video.width - (xPadding*2)\n\t\t\tconst ix = (ip / duration) * timelineWidth\n\t\t\tconst ox = (op / duration) * timelineWidth\n\t\t\treturn <>\n\t\t\t\t<IOMarker xPadding={xPadding} offset={ix} color=\"green\" />\n\t\t\t\t<IOMarker xPadding={xPadding} offset={ox} color=\"red\" />\n\t\t\t</>\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {size, onMouseOver, onMouseOut, display, objectFit, showOverlay, playbackRate} = this.props\n\t\tconst {thumbnail} = this.state\n\n\t\treturn <div className=\"display\" {...size} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n\t\t\t<div className=\"display-border\" style={{width: `${size.width}px`, height: `${size.height}px`}}>{showOverlay && `${display.file.name}${playbackRate == 1 ? \"\" : \" (\"+playbackRate+\"x)\"}`}</div>\n\t\t\t{showOverlay && this.getIO()}\n\t\t\t{thumbnail && <video controls={false} autoPlay={false} loop={false} muted={true} src={display.url} width={this.thumbnailWidth} className=\"thumbnail\" ref={this.thumbnail} style={{left: thumbnail.offsetX}} />}\n\t\t\t<video controls={true} autoPlay={true} loop={true} muted={true} src={display.url} draggable={true}\n\t\t\t\t{...size} ref={this.video} style={{objectFit}} title={display.file.name} />\n\t\t</div>\n\t}\n}\n\ninterface Dimensions {\n\tx:number,\n\ty:number\n}\n\ninterface AppState {\n\tshowInfo:boolean,\n\tshowHelp:boolean,\n\tdisplays:Display[],\n\tmaxId:number,\n\tactiveDisplay?:Display,\n\tlastDisplay?:Display,\n\tviewport?:Dimensions,\n\tratioIndex:number,\n\taspectRatio:AspectRatio,\n\tobjectFitIndex:number,\n\tobjectFit:ObjectFit,\n\tfirstBatch:boolean,\n\terrorDisplays:Display[],\n\tdragSrc?:Display\n}\n\ninterface ActionControls {\n\t[key:string]: ()=>void\n}\n\nfunction toggleFullscreen(target?:HTMLVideoElement) {\n\tif (!document.fullscreenEnabled) return\n\tif (document.fullscreenElement) {\n\t\tdocument.exitFullscreen()\n\t} else {\n\t\t// document.body.requestFullscreen()\n\t\t(target || document.body).requestFullscreen()\n\t}\n}\n\nclass App extends React.Component<{},AppState> {\n\tviewport:React.RefObject<HTMLElement>\n\tglobalActions = {\n\t\t\"f\": () => toggleFullscreen(),\n\t\t\"h\": () => this.setState({showHelp: !this.state.showHelp}),\n\t\t// \"i\": () => this.setState({showInfo: !this.state.showInfo}),\n\t\t\"s\": () => this.nextObjectFit(),\n\t\t\"x\": () => this.nextDimensionRatio()\n\t} as ActionControls\n\n\tsyncPlaybackRates(playbackRate:number) {\n\t\tconst {displays} = this.state\n\t\tdisplays.forEach(i => i.playbackRate = playbackRate)\n\t\tthis.setState({displays}) \n\t}\n\n\tdistributeTimes(display:Display) {\n\t\tconst {displays} = this.state\n\t\tconst matchingDisplays = displays.filter(i => i.file == display.file)\n\t\tconst di = matchingDisplays.indexOf(display)\n\t\t// start with target display so it keeps its current time, bump up from there looping back to start\n\t\tconst orderedDisplays = [display, ...matchingDisplays.slice(di+1), ...matchingDisplays.slice(0, di)]\n\n\t\tconst t1 = display.video!.currentTime\n\t\tconst duration = display.video!.duration\n\t\tconst spacing = duration / orderedDisplays.length\n\t\torderedDisplays.forEach((v, i) => {\n\t\t\tconst targetTime = t1 + (spacing * i)\n\t\t\t// loop time back to beginning once we exceed end of video\n\t\t\tv.video!.currentTime = targetTime < duration ? targetTime : targetTime - duration\n\t\t})\n\t}\n\n\tfillGrid(display:Display, count:number) {\n\t\tconst {displays} = this.state\n\t\tconst additions = count - displays.length\n\t\tif (additions < 1) return\n\t\tconst newDisplays = [...Array(additions)].map((_, i) => {\n\t\t\tconst newDisplay = this.copyDisplay(display)\n\t\t\tnewDisplay.id += i\n\t\t\treturn newDisplay\n\t\t})\n\t\tthis.setState({\n\t\t\tdisplays: displays.concat(newDisplays),\n\t\t\tmaxId: newDisplays.pop()!.id\n\t\t})\n\t}\n\n\tconstructor(props:{}) {\n\t\tsuper(props)\n\t\tthis.viewport = React.createRef<HTMLElement>()\n\t\tthis.state = {\n\t\t\tshowInfo: false,\n\t\t\tshowHelp: true,\n\t\t\tdisplays: [],\n\t\t\tmaxId: 0,\n\t\t\tratioIndex: 0,\n\t\t\taspectRatio: ASPECT_RATIOS[0],\n\t\t\tobjectFitIndex: 0,\n\t\t\tobjectFit: OBJECT_FITS[0],\n\t\t\tfirstBatch: true,\n\t\t\terrorDisplays: [],\n\t\t}\n\n\t\twindow.onresize = () => this.updateDimensions()\n\n\t\twindow.onkeydown = ev => {\n\t\t\tconst key = ev.key.toLowerCase()\n\t\t\tif (key in this.globalActions && !ev.shiftKey && !ev.ctrlKey) {\n\t\t\t\tthis.globalActions[key]()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst {activeDisplay} = this.state\n\t\t\tif (!activeDisplay) return\n\n\t\t\tif (ev.shiftKey) {\n\t\t\t\tconst shiftDisplayActions = {\n\t\t\t\t\t\"arrowleft\": () => adjustDisplayTime(activeDisplay, -.1, true),\n\t\t\t\t\t\"arrowright\": () => adjustDisplayTime(activeDisplay, .1, true),\n\t\t\t\t\t\"s\": () => this.syncPlaybackRates(activeDisplay.playbackRate),\n\t\t\t\t\t\"f\": () => activeDisplay.video!.requestFullscreen()\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in shiftDisplayActions && shiftDisplayActions[key]()\n\t\t\t} else if (ev.ctrlKey) {\n\t\t\t\tconst ctrlDisplayActions = {\n\t\t\t\t\t\"arrowleft\": () => this.adjustVideoSpeed(activeDisplay, 0.5),\n\t\t\t\t\t\"arrowright\": () => this.adjustVideoSpeed(activeDisplay, 2)\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in ctrlDisplayActions && ctrlDisplayActions[key]()\n\t\t\t} else {\n\t\t\t\tconst displayActions = {\n\t\t\t\t\t\"delete\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"c\": () => this.addDisplayCopy(activeDisplay),\n\t\t\t\t\t\"d\": () => this.distributeTimes(activeDisplay),\n\t\t\t\t\t\"i\": () => this.setVideoIO(activeDisplay, \"in\"),\n\t\t\t\t\t\"o\": () => this.setVideoIO(activeDisplay, \"out\"),\n\t\t\t\t\t\"m\": () => toggleMute(activeDisplay.video),\n\t\t\t\t\t\"r\": () => this.deleteDisplay(activeDisplay),\n\t\t\t\t\t\"arrowleft\": () => adjustDisplayTime(activeDisplay, -60),\n\t\t\t\t\t\"arrowright\": () => adjustDisplayTime(activeDisplay, 60),\n\t\t\t\t} as ActionControls\n\t\t\t\tkey in displayActions && displayActions[key]()\n\t\t\t\tif (key >= \"2\" && key <= \"9\") {\n\t\t\t\t\tthis.fillGrid(activeDisplay, parseInt(key))\n\t\t\t\t\tthis.distributeTimes(activeDisplay)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdocument.ondragover = stopDragDrop\n\t\tdocument.ondragenter = stopDragDrop\n\t\tdocument.ondragleave = stopDragDrop\n\n\t\tdocument.ondrop = (e:DragEvent) => {\n\t\t\tstopDragDrop(e)\n\t\t\tif (!e.dataTransfer) return\n\t\t\tconst {firstBatch} = this.state\n\t\t\tlet droppedFiles = e.dataTransfer.files as FileList\n\t\t\tconst videoFiles = Array.from(droppedFiles).filter(i => i.type.startsWith('video/'))\n\t\t\tlet maxId = this.state.maxId\n\t\t\tconst newDisplays = videoFiles.map(file => { return {\n\t\t\t\tid: ++maxId,\n\t\t\t\tfile,\n\t\t\t\turl: URL.createObjectURL(file),\n\t\t\t\ttriggerResize: firstBatch,\n\t\t\t\tplaybackRate: 1\n\t\t\t} as Display})\n\n\t\t\tthis.setState({\n\t\t\t\tdisplays: this.state.displays.concat(newDisplays),\n\t\t\t\tmaxId,\n\t\t\t\tfirstBatch: false,\n\t\t\t\t// hide help if we are adding videos\n\t\t\t\tshowHelp: this.state.showHelp && videoFiles.length == 0\n\t\t\t})\n\t\t}\n\t}\n\n\tgetVideoSize() {\n\t\tconst {displays, aspectRatio, viewport} = this.state\n\t\t// assume minimum size if no viewport (shouldn't happen)\n\t\tif (!viewport) return {width: 1, height: 1}\n\t\t// if only one display, use full size\n\t\tif (displays.length < 2) return {width: viewport.x, height: viewport.y}\n\n\t\t// try every number of rows up to a dedicated row for each video\n\t\tlet bestArea = 0, bestrows = 0, bestcols = 0\n\t\tconst videoRatio = aspectRatio.ratio\n\t\tfor (let rows = 1; rows <= displays.length; rows++) {\n\t\t\t// get the necessary number of columns with a given number of rows\n\t\t\tconst cols = Math.ceil(displays.length / rows)\n\t\t\t// this determines the size of the resulting box\n\t\t\tconst x = viewport.x / cols, y = viewport.y / rows\n\t\t\t// actual video dimensions will depend on ratio within the display box, being shrunk on one side\n\t\t\tlet vx = x, vy = y\n\t\t\tif (videoRatio > x/y) {\n\t\t\t\tvy = vx / videoRatio\n\t\t\t} else {\n\t\t\t\tvx = vy * videoRatio\n\t\t\t}\n\t\t\tconst videoArea = vx * vy\n\t\t\t// if this isn't an improvement, continue looking\n\t\t\tif (videoArea < bestArea) continue\n\t\t\t// otherwise save this as best situation\n\t\t\tbestArea = videoArea\n\t\t\tbestrows = rows, bestcols = cols\n\t\t}\n\n\t\treturn {\n\t\t\twidth: viewport.x / bestcols,\n\t\t\theight: viewport.y / bestrows\n\t\t}\n\t}\n\n\tadjustVideoSpeed(display:Display, adjustment:number) {\n\t\tdisplay.playbackRate = display.playbackRate * adjustment\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tsetVideoIO(display:Display, mode:\"in\"|\"out\") {\n\t\tif (mode in display) {\n\t\t\tdelete display[mode]\n\t\t} else {\n\t\t\tdisplay[mode] = display.video!.currentTime\n\t\t}\n\t\t// not sure if this way of updating the display will work\n\t\tthis.setState({displays: this.state.displays})\n\t}\n\n\tupdateDimensions() {\n\t\tconst vp = this.viewport.current!\n\t\tconst viewport = {x: vp.clientWidth, y: vp.clientHeight}\n\t\tthis.setState({viewport})\n\t}\n\n\tcopyDisplay(display:Display) {\n\t\tconst activeVideo = display.video!\n\t\tconst maxId = this.state.maxId + 1\n\t\tlet startTime = activeVideo.currentTime + 60\n\t\tif (startTime > activeVideo.duration) startTime = 0\n\t\tconst newDisplay = {\n\t\t\tid: maxId,\n\t\t\tfile: display.file,\n\t\t\turl: display.url,\n\t\t\tplaybackRate: display.playbackRate,\n\t\t\tstartTime,\n\t\t\ttriggerResize: false\n\t\t}\n\t\treturn newDisplay\n\t}\n\n\taddDisplayCopy(display:Display) {\n\t\tconst newDisplay = this.copyDisplay(display)\n\t\tthis.setState({\n\t\t\tmaxId: newDisplay.id,\n\t\t\tdisplays: this.state.displays.concat(newDisplay)\n\t\t})\n\t}\n\n\tdeleteDisplay(display:Display) {\n\t\tthis.setState({ displays: this.state.displays.filter(i => i != display) })\n\t}\n\n\tnextDimensionRatio() {\n\t\tlet i = this.state.ratioIndex + 1\n\t\tif (i >= ASPECT_RATIOS.length) i = 0\n\t\tthis.setState({\n\t\t\tratioIndex: i,\n\t\t\taspectRatio: ASPECT_RATIOS[i]\n\t\t})\n\t}\n\n\tnextObjectFit() {\n\t\tlet i = this.state.objectFitIndex + 1\n\t\tif (i >= OBJECT_FITS.length) i = 0\n\t\tthis.setState({\n\t\t\tobjectFitIndex: i,\n\t\t\tobjectFit: OBJECT_FITS[i]\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateDimensions()\n\t}\n\n\tgetAspectRatios() {\n\t\treturn this.state.displays.map(i => i.video!.videoWidth / i.video!.videoHeight)\n\t}\n\n\tgetRecommendedAspectRatioIndex() {\n\t\tconst avgRatio = this.getAspectRatios().reduce((a,b) => a + b, 0) / this.state.displays.length\n\t\tconst closestRatio = [...ASPECT_RATIOS].sort((a, b) => Math.min(a.ratio / avgRatio, avgRatio / a.ratio) - Math.min(b.ratio/avgRatio, avgRatio / b.ratio)).pop()\n\t\tconst i = ASPECT_RATIOS.findIndex(i => i.name == closestRatio!.name)\n\t\treturn i\n\t}\n\n\tsetRecommendedAspectRatio() {\n\t\tconst i = this.getRecommendedAspectRatioIndex()\n\t\tthis.setState({\n\t\t\taspectRatio: ASPECT_RATIOS[i],\n\t\t\tratioIndex: i\n\t\t})\n\t}\n\n\thandleVideoError(display:Display) {\n\t\tconst {displays, errorDisplays} = this.state\n\t\terrorDisplays.push(display)\n\t\tthis.setState({\n\t\t\tdisplays: displays.filter(i => i != display),\n\t\t\terrorDisplays\n\t\t})\n\t}\n\n\treorderDisplays(dest:EventTarget) {\n\t\tconst {displays, dragSrc} = this.state\n\t\tif (!dragSrc) return\n\t\tconst destDisplay = displays.filter(i => i.video == dest).pop() || displays[displays.length-1]\n\t\tconst si = displays.indexOf(dragSrc)\n\t\tconst tmpDisplays = [...displays.slice(0, si), ...displays.slice(si+1)]\n\t\tconst di = tmpDisplays.indexOf(destDisplay)\n\t\tconst newDisplays = [...tmpDisplays.slice(0, di+1), dragSrc, ...tmpDisplays.slice(di+1)]\n\t\tthis.setState({ displays: newDisplays })\n\t}\n\n\trender() {\n\t\tconst {displays, errorDisplays, activeDisplay, lastDisplay, showInfo, showHelp, aspectRatio, objectFit} = this.state\n\t\tconst size = this.getVideoSize()\n\t\treturn <>\n\t\t\t{showInfo && lastDisplay && <div id=\"info-toggle\">\n\t\t\t\t{aspectRatio.name}<br />\n\t\t\t\tScale strategy: {objectFit}<br />\n\t\t\t\t{lastDisplay.file.name}\n\t\t\t</div>}\n\t\t\t<main ref={this.viewport}\n\t\t\t\tonDrop={e => this.reorderDisplays(e.target)}>\n\t\t\t\t{displays.length == 0 && SPLASH}\n\t\t\t\t{displays.map(i => <BDVideo size={size} objectFit={objectFit} key={i.id} display={i}\n\t\t\t\t\tshowOverlay={i == activeDisplay}\n\t\t\t\t\tplaybackRate={i.playbackRate}\n\t\t\t\t\tonDrag={display => this.setState({dragSrc: display})}\n\t\t\t\t\tonMouseOver={() => this.setState({activeDisplay: i, lastDisplay: i})}\n\t\t\t\t\tonMouseOut={() => this.setState({activeDisplay: undefined})}\n\t\t\t\t\tonLoad={() => i.triggerResize && this.setRecommendedAspectRatio()}\n\t\t\t\t\tonError={() => this.handleVideoError(i)}\n\t\t\t\t\tinTime={i.in} outTime={i.out}\n\t\t\t\t/>)}\n\t\t\t</main>\n\t\t\t{errorDisplays.length > 0 && <section id=\"errors\">\n\t\t\t\t<h2>Errors</h2><ol>\n\t\t\t\t\t{errorDisplays.map((display, i) => <li key={i}>{display.file.name} ({display.file.type})</li>)}\n\t\t\t\t</ol>\n\t\t\t\t<p>Only videos supported by your web browser will play successfully.  <code>.mp4</code> and <code>.webm</code> files are good bets.</p>\n\t\t\t\t<form onSubmit={() => this.setState({errorDisplays: []})}><button>Dismiss</button></form>\n\t\t\t</section>}\n\t\t\t{showHelp && HELP}\n\t\t</>\n\t}\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}